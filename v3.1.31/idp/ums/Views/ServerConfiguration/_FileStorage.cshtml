﻿@{
    var appBranding = GlobalAppSettings.Branding;
    var storageType = ViewBag.StorageType != null ? ViewBag.StorageType : 0;
}
<div class="system-settings-page-container" id="system-settings-filestorage-container">
    <div class="database-types">
        <div class="center-storage-types">
            <div class="file-storage-align">
                <input type="radio" id="file-storage" class="css-radio" name="IsBlobStorage" value="0" checked='checked' />
                <label for="file-storage" class="is-blob-storage-label"><span class="text">[[[File Storage]]]</span></label>
            </div>
            <div class="blob-storage-align">
                <input type="radio" id="blob-storage" class="css-radio" name="IsBlobStorage" value="1" />
                <label for="blob-storage" class="is-blob-storage-label"><span class="text">[[[Azure Blob Storage]]]</span></label>
            </div>
        </div>
    </div>

    @if (appBranding == AppBranding.Bold.Identifier)
    {
        <span class="content content-value">
            [[[Choose a storage system for storing the resources of Tenant Management Application.]]]
            @if (!CloudAppConfig.IsHideHelpLink)
            {
                <span>[[[A complete list of resources generated by Tenant Management application can be viewed]]] <a target="_blank" href="@(HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.IDStorageTypeInfo))">[[[here]]]</a>.</span>

            }
        </span>
        <span class="report-content" style="text-align:left">
            [[[Choose a storage system for storing the resources of Dashboard Server site.]]]
            @if (!CloudAppConfig.IsHideHelpLink)
            {
                <span> [[[A complete list of resources generated by Dashboard Server can be viewed]]] <a target="_blank" href="@(HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.ServerStorageTypeInfo))">[[[here]]]</a>.</span>
            }
        </span>
    }
    else
    {
        <span class="content content-value">
            [[[Choose a storage system for storing the resources of Tenant Management Application.]]]
            @if (!CloudAppConfig.IsHideHelpLink)
            {
                <span>[[[A complete list of resources generated by Tenant Management application can be viewed]]] <a target="_blank" href="@(HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.IDStorageTypeInfo))">[[[here]]]</a>.</span>
            }
        </span>
        <span class="report-content" style="text-align:left">
            [[[Choose a storage system for storing the resources of Report Server site.]]]
            @if (!CloudAppConfig.IsHideHelpLink)
            {
                <span>[[[A complete list of resources generated by Report Server can be viewed]]] <a target="_blank" href="@(HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.ServerStorageTypeInfo, TenantType.BoldReportsOnPremise))">[[[here]]]</a>.</span>
            }
        </span>
    }

   
<div class="storage-checkbox secure-sql material-checkbox selfhosted center-align">
    @if ((StorageType)storageType == StorageType.AzureBlob)
    {
        @Html.CheckBox("storage-checkbox", false)
        <label for="storage-checkbox" class="">[[[Use the same blob used for tenant registration.]]]</label>
    }
    </div>

    <div class="storage-block">
        <div class="azure-validation display-none">
            <span class="blob-error-message">[[[Invalid Azure Blob storage]]]</span>
        </div>
        <form id="blob-storage-form" onsubmit="return validate_storage_type();" autocomplete="off">
            <div>
                <div class="form-div form-group">
                    <label class="field-label">[[[Storage account name]]]</label>
                    <input type="text" tabindex="1" id="txt-accountname" name="accountname" value="@ViewBag.AccountName" class="form-control" placeholder="[[[Storage account name]]]" />
                    <span class="startup-validation txt-accountname validation-txt-errors"></span>
                </div>
                <div class="form-div form-group">
                    <label class="field-label">[[[Blob service endpoint]]]</label>
                    <input type="text" tabindex="2" id="txt-endpoint" name="endpoint" value="@ViewBag.ServiceEndPoint" class="form-control" placeholder="[[[Blob service endpoint]]]" />
                    <span class="text-caption">(For example : http://****.blob.core.windows.net)</span><br />
                    <span class="startup-validation txt-endpoint validation-txt-errors"></span>
                </div>
                <div class="form-div form-group">
                    <label class="field-label">[[[Access key]]]</label>
                    <input type="text" tabindex="3" id="txt-accesskey" class="form-control" value="@ViewBag.AccessKey" placeholder="[[[Access key]]]" name="accesskey" />
                    <span class="startup-validation txt-accesskey validation-txt-errors"></span>
                </div>
                <div class="form-div form-group">
                    <label class="field-label">[[[Container name]]]</label>
                    <input type="text" tabindex="4" id="txt-containername" class="form-control" value="@ViewBag.ContainerName" placeholder="[[[Container name]]]" name="containername" autocomplete="off" />
                    <span class="startup-validation txt-containername validation-txt-errors"></span>
                </div>
                <div class="form-div form-group">
                    <div class="sub-head connection-label">[[[Connection]]]</div>
                    <div class="connection-types">
                        <input type="radio" id="https" tabindex="5" class="css-radio" name="Connection" value="https" checked='checked' />
                        <label for="https" class="connection-label"><span class="text">[[[Use HTTPS (Recommended)]]]</span></label>
                    </div>
                    <div class="connection-types">
                        <input type="radio" id="http" tabindex="5" class="css-radio" name="Connection" value="http" />
                        <label for="http" class="connection-label"><span class="text">[[[Use HTTP]]]</span></label>
                    </div>
                    <div class="connection-types">
                        <input type="radio" id="custom-endpoint" tabindex="5" class="css-radio" name="Connection" value="customendpoint" />
                        <label for="custom-endpoint" class="connection-label"><span class="text">[[[Specify custom endpoints]]]</span></label>
                    </div>
                </div>
                <div class="custom-endpoint-form-element">
                    <div class="form-div form-group">
                        <label class="field-label">[[[Blob URL]]]</label>
                        <input type="text" tabindex="6" id="txt-bloburl" class="form-control" value="@ViewBag.BlobUrl" placeholder="[[[Blob URL]]]" name="bloburl" autocomplete="off" />
                        <span class="text-caption">(For example : http://****.example.net)</span><br />
                        <span class="startup-validation txt-bloburl validation-txt-errors"></span>
                    </div>
                </div>
                <div class="form-div form-group">
                    <textarea name="connectionString" id="connection-string" readonly="" style="resize: both;max-height: 100px;max-width: 400px;" class="form-control">DefaultEndpointsProtocol=https;AccountName=;AccountKey=</textarea>
                </div>
            </div>
        </form>
        <div class="file-storage-button btn-holder center-align" id="tenant-storage">
            <input type="button" tabindex="7" onclick="validate_storage_type()" class="proceed-button " value="[[[Next]]]" />
        </div>
        <div class="file-storage-button btn-holder center-align" id="report-storage">
            <input type="button" tabindex="7" onclick="validate_report_storage()" class="proceed-button" value="[[[Next]]]" />
        </div>
        @if (appBranding == AppBranding.Bold.Identifier)
        {
            <input id="get-intermediate-db-configuration" value="true" hidden />
        }
        else
        {
            <input id="get-intermediate-db-configuration" value="false" hidden />
        }
    </div>
</div>
