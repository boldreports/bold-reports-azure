@model Syncfusion.Server.Base.DataClasses.SupportTickets.ViewTicket
@{
    var globalAppSettings = _globalAppSettings;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');

    ViewBag.Title = "[[[Support Incidents]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var incidentId = @ViewBag.IncidentId;
}

<environment include="Development,CloudDevelopment">
    <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/view-incident.css" />
    <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/view-incident.js"></script>
</environment>
<environment exclude="Development,CloudDevelopment">
    <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/view-incident.min.css" />
    <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/view-incident.min.js"></script>
</environment>

@section scripts{

    <script>
        var checkConciergeUserAccessUrl = "@Url.Action("CheckConciergeUserAccess", "Support")";
        var status = "@ViewBag.UpdateIncidentStatus";

        $(document).ready(function (e) {
            if (status == "Success") {
                SuccessAlert(window.Server.App.LocalizationContent.IncidentUpdate, window.Server.App.LocalizationContent.IncidentUpdateSuccess, 4000);
            }
            else if (status == "Failed") {
                WarningAlert(window.Server.App.LocalizationContent.IncidentUpdate, window.Server.App.LocalizationContent.IncidentUpdateFailed, 4000);
            }

            $("#content-area").addClass("support-content-area");
        });
    </script>
}

@section MainSection{
    <div id="view-incident-container" class="admin-page-container">

        <div class="col-md-12 admin-page-header view-all">
            <a href="@Url.Action("TicketList","Support")" title="[[[View All Support Incidents]]]" class="back-button pull-left" data-toggle="tooltip" data-placement="top" data-container="body">
                <i class="su su-arrow-back"> </i>
            </a>

            <hgroup class="col-md-5 col-xs-12 wrapper">
                <h2 class="page-title adjust-style-for-backarrow"><span title="[[[View All Support Incidents]]]">[[[View All Support Incidents]]]</span></h2>
            </hgroup>
        </div>

        <div class="col-md-12 admin-page-header">

            <hgroup class="col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding">
                <h1 class="h2 page-title">@Model.Title</h1>
            </hgroup>

            <!--Ignoring minifying content due to error. Refer https://github.com/Taritsyn/WebMarkupMin/wiki/Ignoring-fragments-of-markup-->
            <!--wmm:ignore-->
            <div class="col-md-12 col-xs-12 title-message no-padding">
                @Html.Raw(System.Net.WebUtility.HtmlDecode(Model.Message))
            </div>
            <!--/wmm:ignore-->

            <div class="col-xs-12 incident-info align-middle no-padding">
                <div class="incident-id">
                    #@Model.IncidentId
                </div>
                <div class="slash">
                    &#47;
                </div>
                <div class="created-date">
                    @Model.CreatedOnLocal
                </div>
                <div class="slash">
                    &#47;
                </div>
                <div class="reply-count">
                    @if (Model.Updates.Count > 1)
                    {
                        <span>
                            @Model.Updates.Count [[[Replies]]]
                        </span>
                    }
                    else
                    {
                        <span>
                            @Model.Updates.Count [[[Reply]]]
                        </span>
                    }
                </div>
                <div class="slash">
                    &#47;
                </div>
                <div>
                    @if (Model.Status.Equals("OPEN") || Model.Status.Equals("Customer Open"))
                    {
                        <span class="status open-status">
                            [[[Open]]]
                        </span>
                    }
                    else
                    {
                        <span class="status closed-status">
                            [[[Closed]]]
                        </span>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-12 admin-page-body">
            <div class="row no-padding">


                <div class="col-xs-6 no-padding reply-buttom">
                    <input type="text" id="reply-button" class="form-control popup-label filename-text" value="[[[Write a reply..]]]" readonly>
                </div>
                <div class="col-xs-12 no-padding reply-info">
                    <b>
                        @if (Model.Updates.Count > 1)
                        {
                            <span>
                                @Model.Updates.Count [[[REPLIES]]]
                            </span>
                        }
                        else
                        {
                            <span>
                                @Model.Updates.Count [[[REPLY]]]
                            </span>
                        }
                    </b>
                </div>
            </div>

            <div id="reply" class="row no-padding">
                <div id="editor" class="editors">
                    <div class="reply-message">
                        <textarea name="message" id="updateMde" form="incidentUpdateForm"></textarea>
                        <div class="hidden">
                            <textarea id="temp" class="hidden"></textarea>
                            <div id="toRemoveCulture"></div>
                        </div>
                    </div>
                    <form action="@Url.Action("Update","Support", new { id = Model.IncidentId })" id="incidentUpdateForm" method="post">
                        <input id="support-file-path-update" type="hidden" />
                        <input id="support-file-name-update" type="hidden" />
                        <div class="align-middle col-xs-12 no-padding form-div">
                            @*<div class="col-xs-6 no-padding" id="create-new-concierge">
                                    @Html.CheckBox("is-concierge-checkbox", new { @class = "material-checkbox" })
                                    @Html.Label("is-concierge-checkbox", "[[[Update as concierge request]]]", new { @class = "toggle-space" })
                                    <span class="conceirge-loader"></span>

                                    <div class="col-xs-12 no-padding" id="concierge-access-container" style="display:none">
                                        @Html.CheckBox("new-concierge-checkbox", new { @class = "material-checkbox" })
                                        @Html.Label("new-concierge-checkbox", "[[[Allow us to access your Dashboard Cloud, you can revoke access at any time]]]", new { @class = "toggle-space" })
                                    </div>
                                </div>*@

                            <div class="col-xs-6 no-padding attach-file-container align-middle">
                                @Html.Label("attach-file", "[[[Attach file:]]]", new { @id = "reply-attach-file-label", @class = "col-xs-2 popup-label no-padding" })
                                <div class="col-xs-12 attach-file-input" id="reply-input-group">
                                    <div class="input-group">
                                        <input type="text" id="reply-attach-file-textbox" class="form-control popup-label filename-text" value="[[[Browse file path]]]" readonly>
                                        <span id="reply-attach-file-addon" class="input-group-addon">
                                            <div id="reply-attach-file" class="settings-upload-button">
                                            </div>
                                        </span>
                                        <span class="sm-loader" style="display:none"></span>
                                    </div>
                                    <span class="col-xs-12 info no-padding">
                                        [[[Allowed file types: *.Zip, *.Rar, *.Zipx & *.7z; Maximum file size: 30MB]]]
                                    </span>
                                </div>
                            </div>

                            <div class="col-xs-6 no-padding">
                                <button type="submit" id="update-confirm" class="primary-button pull-right" disabled="disabled">[[[Update]]]</button>

                                @if (Model.Status != null && Model.Status.ToLower() != "closed")
                                {
                                    <button type="submit" id="update-close" class="primary-button pull-right" disabled="disabled">[[[Update and Close]]]</button>
                                }

                                <button type="button" id="update-cancel" class="secondary-button pull-right">[[[Cancel]]]</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (Model.Updates != null && Model.Updates.Count == 0)
            {
                <div class="col-lg-12 no-update-lable ">
                    <span class="su su-comment-3 no-records-icon"> </span>
                    <span class="no-records-message">[[[ No updates are available to display]]]</span>
                </div>
            }

            @for (var i = 0; i < Model.Updates.Count; i++)
            {
                <!--Ignoring minifying content due to error. Refer https://github.com/Taritsyn/WebMarkupMin/wiki/Ignoring-fragments-of-markup-->
                <!--wmm:ignore-->
                <div class="row updates">
                    <div class="update-by-info align-middle">
                        @*<div class="update-by-img">
                                <img src="@(ServerAppConfig.InternalAppIdpUrl + Url.Content("/User/Avatar?id=" + Model.Updates[i].IdpReferenceId + "&ImageSize=32"))"/>
                            </div>*@
                        <div class="update-by">
                            @Model.Updates[i].UpdatedBy
                        </div>
                        <div class="update-on">
                            @Model.Updates[i].UpdatedOnLocal
                        </div>
                    </div>

                    <div class="update-messge">
                        @Html.Raw(System.Net.WebUtility.HtmlDecode(Model.Updates[i].Message))
                    </div>
                </div>
                <!--/wmm:ignore-->
            }
        </div>
    </div>
}

