@{
    var globalAppSettings = _globalAppSettings;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');

    if (ViewBag.AdImport)
    {
        ViewBag.Title = "[[[Active Directory users import]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    }
    else
    {
        ViewBag.Title = "[[[Azure AD users import]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    }
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.ImportAzureAdUsers);
}


@section scripts
{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-active-directory.css" />
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-active-directory.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-active-directory.min.css" />
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-active-directory.min.js"></script>
    </environment>


    @if (ViewBag.AdImport)
    {
        <script>
            var saveSelectedActiveDirectoryUserUrl = "@Url.Action("SaveSelectedActiveDirectoryUser", "UserManagement")";
            var SearchActiveDirectoryUsersUrl = "@Url.Action("SearchActiveDirectoryUsers", "UserManagement")";
        </script>
    }
    else
    {
        <script>
            var saveSelectedActiveDirectoryUserUrl = "@Url.Action("SaveSelectedAzureADUser", "UserManagement")";
            var SearchActiveDirectoryUsersUrl = "@Url.Action("SearchAzureADUsers", "UserManagement")";
        </script>
    }
}

@section MainSection{
    @await Html.PartialAsync("_UserMenu")

    <script type="text/x-jsrender" id="checkbox-row-template">
        <input type="checkbox" class="checkbox-row material-checkbox" data-checked-id="{{:UserId}}" id="row-check{{:UserId}}" />
        <input name="row-check{{:UserId}}" type="hidden" value="false">
        <label for="row-check{{:UserId}}"> </label>
    </script>

    <script type="text/x-jsrender" id="full-name-template">
        <span title="{{:~renderDoubleQuotes(FullName)}}" class="grid-content" data-toggle="tooltip">
            {{:FullName}}
        </span>
    </script>

    <script type="text/x-jsrender" id="username-template">
        <span title="{{:Username}}" class="grid-content" data-toggle="tooltip">
            {{:Username}}
        </span>
    </script>

    <script type="text/x-jsrender" id="email-id-template">
        <span title="{{:EmailId}}" class="grid-content" data-toggle="tooltip">
            {{:EmailId}}
        </span>
    </script>

    <script type="text/x-jsrender" id="checkbox-header-template">
        @Html.CheckBox("checkbox-header", new { @class = "material-checkbox" })
        @Html.Label("checkbox-header", " ", new { @class = "checkbox-header-label" })
    </script>

    <script type="text/x-jsrender" id="full-name-header">
        <span class="item-header">[[[Name]]]</span>
    </script>
    <script type="text/x-jsrender" id="user-name-header">
        <span class="item-header">[[[Username]]]</span>
    </script>
    <script type="text/x-jsrender" id="last-name-header">
        <div class="item-header">[[[Last Name]]]</div>
    </script>
    <script type="text/x-jsrender" id="first-name-header">
        <div class="item-name">[[[First Name]]]</div>
    </script>
    <script type="text/x-jsrender" id="email-id-header">
        <span class="item-header">[[[Email Address]]]</span>
    </script>
    <script type="text/x-jsrender" id="contact-header">
        <div class="item-header">[[[Mobile No]]]</div>
    </script>

    <script type="text/javascript">

        $(function () {
                $("#ad-user-import").val("");
                addPlacehoder("#search-area");
                @if(ViewBag.AdImport)
                {
                <text>
                var data = ej.DataManager({
                    url: "@Url.Action("SearchActiveDirectoryUsers", "UserManagement")",
                    adaptor: new ej.UrlAdaptor()
                });
                </text>
                }
                else
                {
                <text>
                var data = ej.DataManager({
                    url: "@Url.Action("SearchAzureADUsers", "UserManagement")",
                    adaptor: new ej.UrlAdaptor()
                });
                </text>
                }
                ej.support.stableSort = false;
                GridLocalization();
                $("#Grid").ejGrid({
                    dataSource: data,
                    gridLines: ej.Grid.GridLines.None,
                    allowPaging: true,
                    allowSorting: true,
                    allowSelection: true,
                    allowScrolling: false,
                    allowFiltering: false,
                    allowSearching: true,
                    locale: "en-US",
                    filterSettings: { filterType: "menu" },
                    pageSettings: { pageSize: 20 },
                    selectionType: ej.Grid.SelectionType.Multiple,
                    selectionSettings: { selectionMode: ["row"] },
                    templateRefresh: "refreshTemplate",
                    actionComplete: "fnActionComplete",
                    create: "fnCreate",
                    recordClick: "recordClick",
                    actionBegin: "fnOnADUserGridActionBegin",
                    enableAltRow: false,
                    rowDataBound: function () {
                        $("input.checkbox-row-disabled").parents("tr").addClass("row-disabled");
                    },
                    dataBound: function () {
                        $("#checkbox-header").change(headCheckboxOnChange);
                        this.model.indexes = {}; /* Additional property*/
                    },
                    columns: [
                        { headerTemplateID: "#checkbox-header-template", template: true, templateID: "#checkbox-row-template", textAlign: ej.TextAlign.Center, width: 10, allowFiltering: false },
                        { field: "FullName", cssClass: "full-name", headerText: "[[[Name]]]",  templateID: "#full-name-template", headerTemplateID: "#full-name-header", width: 40, type: "string" },
                        { field: "LastName", cssClass: "last-name", headerText: "[[[Last Name]]]", headerTemplateID: "#last-name-header", width: 10, visible: false },
                        { field: "FirstName", cssClass: "first-name", headerText: "[[[First Name]]]", headerTemplateID: "#first-name-header", width: 10, visible: false },
                        { field: "Username", cssClass: "username", headerText: "[[[Username]]]", templateID: "#username-template", headerTemplateID: "#user-name-header", width: 80, type: "string" },
                        { field: "EmailId", cssClass: "email-id", headerText: "[[[Email Address]]]",  templateID: "#email-id-template", headerTemplateID: "#email-id-header", width: 80, type: "string" },
                        { field: "ContactNumber", cssClass: "mobile-no", headerText: "[[[Mobile No]]]", headerTemplateID: "#contact-header", width: 10, visible: false },
                        { field: "UserId", cssClass: "item-id", headerText: "[[[User Id]]]", headerTemplateID: "#UserIdHeader", width: 10, visible: false }
                    ]
                });
                $.views.helpers({
                    renderDoubleQuotes: function (inputString) {
                        return inputString.replace(new RegExp("\"", 'g'), '&quot;');
                    }
                });
            });
    </script>

    <div id="import-active-directory-users" class="col-lg-12 admin-page-container @(ViewBag.ThirdPartyLogins ? string.Empty : "unlock-enterprise-features blur-content")">
        <div class="col-lg-12 admin-page-header">
            <div class="col-lg-6 no-padding import-area">
                <a href="@Url.Action("Index", "UserManagement")" data-toggle="tooltip" data-placement="top" title="[[[Users]]]" class="back-button pull-left">
                    <i class="su su-arrow-back"> </i>
                </a>
                <h2 class="page-title no-margin">
                    @if (ViewBag.AdImport)
                    {
                        <span>[[[IMPORT USERS]]] — [[[Active Directory]]] </span>
                    }

                    else
                    {
                        <span>[[[IMPORT USERS]]] — [[[Azure AD]]] </span>
                    }
                </h2>
            </div>
            <div class="col-lg-6 no-padding">
                <input type="button" value="[[[Import]]]" disabled="" title="[[[Import the selected users]]]" onclick="SaveActiveDirectoryUsers()" id="import-button" class="primary-button pull-right import-button" />
            </div>
        </div>

        <div class="content-section admin-page-body">
            <div class="col-md-12 col-xs-12 no-margin no-padding directory-user-search">
                <div class="col-md-8 col-xs-8 no-padding directorypath-area">
                    @if (ViewBag.AdImport)
                    {
                        <span class="directory-path no-padding">[[[Directory Path]]] :<input type="hidden" name="url" value="@ViewBag.ActiveDirectory.LdapUrl"></span>
                        <span class="no-padding ad-url">
                            @ViewBag.ActiveDirectory.LdapUrl&nbsp;&nbsp;
                            <a href="@Url.Action("Administration", "Administration")/user-directory-settings" title="[[[Update Active Directory Configuration settings]]]" class="link-button">[[[Modify]]]</a>
                        </span>
                    }
                    else
                    {
                        <span class="directory-path no-padding">[[[Tenant Name]]] :<input type="hidden" name="url" value="@ViewBag.ActiveDirectory.TenantName"></span>
                        <span class="no-padding ad-url">
                            @ViewBag.ActiveDirectory.TenantName&nbsp;&nbsp;
                            <a href="@Url.Action("Administration", "Administration")/user-directory-settings?tab=azure-ad" title="[[[Update Azure AD Configuration settings]]]" class="link-button azure-section">[[[Modify]]]</a>
                        </span>
                    }
                    <div class="no-padding error-msg">@TempData["ErrorMessage"]</div>
                </div>
                <div id="search-area" class="pull-right">
                    <input type="text" id="ad-user-import" class="pull-left" placeholder="[[[Search users]]]" autocomplete="off" />
                    <span class="su su-inner-close close-icon pull-left" id="clear-search" title="[[[Clear search]]]"></span>
                    <span class="su su-search search-user pull-left" title="[[[Search]]]"></span>
                </div>
            </div>
            <div class="col-xs-12 no-padding no-margin user-data-grid">
                <div class="col-xs-12 no-padding">
                    <div class="col-xs-12 col-md-12 no-padding">
                        <span class="import-message">
                            [[[Search and select the users from the following list to import]]]
                        </span>
                    </div>
                    @if (ViewBag.AdImport)
                    {
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 bg-warning windows-ad-user-import-warning">
                            <div class="warning-icon-container no-padding">
                                <span class="su su-warning-alt"></span>
                            </div>
                            <span class="no-padding text-warning">[[[A user without an email address will be assigned a User Principal Name (UPN) or system-generated email address.]]]</span>
                        </div>
                    }
                    <div class="col-xs-12  col-md-12 no-padding no-margin">
                        <div id="grid-validation-messages" class="list grid-error-validation">
                            <div class="col-xs-12">
                                <span id="grid-validation" class="grid-validation no-padding"><span id="user-count" class="user-count">@ViewBag.UserCount</span> [[[User(s) has been imported and activated successfully.]]]</span>
                                <span id="grid-error-validation" class="grid-error-validation no-padding">[[[Duplicate or Invalid data is found. Please change the data accordingly and re-import]]]. </span>
                                <span id="empty-validation" class="validation-message empty-validation no-padding">[[[Please select user(s) to import]]]</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="grid-container" class="col-md-12 no-top-margin no-padding">
                    <div class="col-md-12 container-fluid page-inner-padding no-padding ">
                        <div id="Grid">
                        </div>
                    </div>
                </div>
                <div class="col-xs-4 no-padding"></div>
                <div class="col-xs-8 no-padding"></div>
            </div>
        </div>
        <input type="hidden" name="AllUserList" id="AllUserList" value="@ViewBag.Pathname" />
        <input type="hidden" id="UserCount" data-value="@ViewBag.UserExists" />
        <input type="hidden" id="csvFileError" data-value="@ViewBag.result" />
        @await Html.PartialAsync("../UserManagement/_LimitUserCreation")
    </div>
    @if (!ViewBag.ThirdPartyLogins)
    {
        @await Html.PartialAsync("~/Views/UnlockFeatures/UnlockFeatures.cshtml")
    }
}