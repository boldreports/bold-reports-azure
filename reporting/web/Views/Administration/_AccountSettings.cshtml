@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = "[[[Manage Account Settings]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.AccountSiteSettings);
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-settings.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-settings.min.js"></script>
    </environment>
}

<script type="text/javascript">
    var checkMailSettingUrl = "@Url.Action("CheckMailSettingsExist", "Administration")";
    var emailActivation = "@ActivationType.EmailActivation";
</script>

<div id="user-settings-container" class="col-xs-12 admin-page-container">
    <div id="user-settings-header" class="col-xs-12 admin-page-header">
        <hgroup>
            <h1 class="h2 page-title">
                [[[ACCOUNTS SETTINGS]]]
            </h1>
            <h5 class="page-description">
                [[[Configuration for managing user accounts.]]]
            </h5>
        </hgroup>
    </div>
    <div class="tab-content">
        <form id="acc-activate-setting" name="accActivationSettingsForm" class="admin-page-body" method="post" enctype="multipart/form-data" autocomplete="off">
            <div class="field-container col-lg-10">
                <div class="account-activation-container col-lg-12">
                    <label class="app-textbox-label col-xs-3 activation">[[[Account Activation Mode]]]</label>
                    <div class="activation-mode col-lg-2" id="automatic">
                        <input type="radio" id="automatic-account-activation" name="activation" class="css-radio" value=@ActivationType.AutomaticActivation @((int)ViewBag.ActivationType == (int)ActivationType.AutomaticActivation ? "checked" : string.Empty) />
                        <label for="automatic-account-activation" class="app-textbox-label notransition" id="labelautomatic">[[[Automatic]]]</label>
                    </div>
                    <div class="activation-mode col-lg-4" id="email">
                        <input type="radio" id="email-account-activation" name="activation" class="css-radio" value=@ActivationType.EmailActivation @((int)ViewBag.ActivationType == (int)ActivationType.EmailActivation ? "checked" : string.Empty) @(ViewBag.EmailSettingResult == "failure" ? "disabled" : string.Empty) />
                        <label for="email-account-activation" class="app-textbox-label notransition @(ViewBag.EmailSettingResult == "failure" ? "disabled-lable-color" : string.Empty)" id="labelemail">[[[Email]]]</label>
                        @if (@ViewBag.EmailSettingResult == "failure")
                        {
                            <div class="col-lg-12 bg-danger email-settings-validation validation-errors">
                                [[[Activation emails cannot be sent until the email settings are configured. You can select 'Automatic Activation' to activate the user without configuring the email settings.]]]
                            </div>
                        }
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-3 email-label-container">
                        <label class="col-xs-11 app-textbox-label is-email-required">[[[User Email:]]]</label>
                        <div class="tool-tip col-xs-1">
                            <span class="dropdown-toggle" data-toggle="dropdown"><span class="su su-info" title=""></span></span>
                            <div class="dropdown-menu" role="menu">[[[This setting controls whether an email address is required for creating new users or not.]]]</div>
                        </div>
                    </div>
                    <div class="email-not-required col-lg-2" id="not-required">
                        <input type="radio" id="email-not-required" name="email-required" class="css-radio" value="false" @(!globalAppSettings.SystemSettings.IsEmailRequired ? "checked" : string.Empty) @(globalAppSettings.SystemSettings.ActivationType == ActivationType.EmailActivation ? "disabled" : string.Empty) />
                        <label for="email-not-required" class="app-textbox-label notransition @(globalAppSettings.SystemSettings.ActivationType == ActivationType.EmailActivation ? "disabled-lable-color" : string.Empty)" id="label-email-not-required">Not Required</label>
                    </div>
                    <div class="email-not-required col-lg-4" id="required">
                        <input type="radio" id="email-required" name="email-required" class="css-radio" value="true" @(((int)ViewBag.ActivationType == (int)ActivationType.EmailActivation || globalAppSettings.SystemSettings.IsEmailRequired) ? "checked" : string.Empty) />
                        <label for="email-required" class="app-textbox-label notransition" id="label-email-required">Required</label>
                        <div id="email-required-warning" class="col-lg-12 bg-danger email-settings-validation validation-errors hide">
                            [[[When the account activation preference is email, an email address is mandatory for activating the account.]]]
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="admin-page-actions col-lg-12 col-md-12">
        <a href="@Url.Action("Index","Home")" class="secondary-button pull-right" id="UpdateSystemSettingsCancel-bottom" title="">[[[Cancel]]]</a>
        <button type="button" title="" id="UpdateSystemSettings-bottom" name="UpdateSystemSettings" class="primary-button pull-right">
            <span>[[[Save]]]</span>
        </button>
    </div>
</div>
