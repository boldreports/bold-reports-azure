@addTagHelper *, Microsoft.FeatureManagement.AspNetCore
@using System.Runtime.InteropServices;
@using Syncfusion.Server.Base.Helpers
@using System.Web;

@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = "[[[Authentication Settings]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var ldapRegEx = @"/(?:ldap|http)s?:\/\/(?:(?!.*\d[\/?:])[a-z0-9\-._~%]+|(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\[[a-z0-9\-._~%!$&'()*+,;=:]+\])(?::\d+)?(?:[\/?][\-A-Z0-9+&@#\/%?=~_|$!:,.;]*)?$/i";
    var oauthRegEx = @"/(?:^|[ \t])((https?:\/\/)?(?:localhost|[\w-]+(?:\.[\w-]+)+)(:\d+)?(\/\S*)?)/";
    List<TenantAuthControl> authControl = null;
    TenantAuthControl cloudAuthControl = null;
#if BoldReportsOnPremise
    authControl = ViewBag.AuthControl as List<TenantAuthControl>;
    authControl = authControl != null && authControl.Count > 0 ? authControl : null;
#else
cloudAuthControl = ViewBag.AuthControl as TenantAuthControl;
#endif
    var isAzureApplication = ServerAppConfig.IsAzureApplication;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var model = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var isAdmin = _identityResponse.IsAdmin;
    var isOpenIdIdentityProviderOptionEnabled = ViewBag.OpendIdentityProviderInfo != null ? ViewBag.OpendIdentityProviderInfo.IsIdentityProviderInfoOptionEnabled : false;
    var isOAuthIdIdentityProviderOptionEnabled = ViewBag.OAuthdIdentityProviderInfo != null ? ViewBag.OAuthdIdentityProviderInfo.IsIdentityProviderInfoOptionEnabled : false;
    var isOpenIdCustomMailOptionEnabled = ViewBag.OpendIdentityProviderInfo != null ? ViewBag.OpendIdentityProviderInfo.IsCustomInviteMailOptionEnabled : false;
    var isOAuthCustomMailOptionEnabled = ViewBag.OAuthdIdentityProviderInfo != null ? ViewBag.OAuthdIdentityProviderInfo.IsCustomInviteMailOptionEnabled : false;
    var openIdIdentityProviderName = ViewBag.OpendIdentityProviderInfo != null ? ViewBag.OpendIdentityProviderInfo.IdentityProviderName : string.Empty;
    var openIdIdentityProviderURL = ViewBag.OpendIdentityProviderInfo != null ? ViewBag.OpendIdentityProviderInfo.IdentityProviderURL : string.Empty;
    var oAuthIdentityProviderName = ViewBag.OAuthdIdentityProviderInfo != null ? ViewBag.OAuthdIdentityProviderInfo.IdentityProviderName : string.Empty;
    var oAuthIdentityProviderURL = ViewBag.OAuthdIdentityProviderInfo != null ? ViewBag.OAuthdIdentityProviderInfo.IdentityProviderURL : string.Empty;
    var openIdCustomMailContent = ViewBag.OpendIdentityProviderInfo != null ? ViewBag.OpendIdentityProviderInfo.EmailContent : string.Empty;
    var oAuthCustomMailContent = ViewBag.OAuthdIdentityProviderInfo != null ? ViewBag.OAuthdIdentityProviderInfo.EmailContent : string.Empty;
    var openIdSubject = ViewBag.OpendIdentityProviderInfo != null ? ViewBag.OpendIdentityProviderInfo.Subject : string.Empty;
    var oAuthSubject = ViewBag.OAuthdIdentityProviderInfo != null ? ViewBag.OAuthdIdentityProviderInfo.Subject : string.Empty;
    var helpSiteBaseUrl = ServerAppConfig.AppSettings.Documentation.BaseUri;
    var authenticationGeneralHelpSiteUrl = helpSiteBaseUrl + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.AuthenticationSettings);
    var authenticationControlHelpSiteUrl = helpSiteBaseUrl + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.AuthenticationSettings);
    var authenticationOAuthHelpSiteUrl = helpSiteBaseUrl + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.OAuthSettings);
    var authenticationOpenIdHelpSiteUrl = helpSiteBaseUrl + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.OpenIdSettings);
    var providerName= HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.ProviderName);
    var authorizationEndPoint = HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.AuthorizationEndPoint);
    var tokenEndPoint = HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.TokenEndPoint);
    var userInfoEndPoint = HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.UserInfoEndPoint);
    var clientId = HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.ClientId);
    var userInfoEmail = HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.UserInfoEmail);
    var userInfoFirstname = HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.UserInfoFirstname);
    var userInfoLastname = HttpUtility.HtmlDecode(ViewBag.OAuthSettings.OAuthAuthSettings.UserInfoLastname);
    var OpenIDProviderName = HttpUtility.HtmlDecode(ViewBag.OpenIDSettings.OIDCAuthSettings.ProviderName);
    var authority = HttpUtility.HtmlDecode(ViewBag.OpenIDSettings.OIDCAuthSettings.Authority);
    var openIDClientId = HttpUtility.HtmlDecode(ViewBag.OpenIDSettings.OIDCAuthSettings.ClientId);
    var identifier = HttpUtility.HtmlDecode(ViewBag.OpenIDSettings.OIDCAuthSettings.Identifier);
}
@section styles{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/site-settings.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/site-settings.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-database-import.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/user-database-import.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/emaileditor.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/emaileditor.css")" crossorigin="anonymous" />
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/site-settings.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/site-settings.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-database-import.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/user-database-import.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/emaileditor.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/emaileditor.min.css")" crossorigin="anonymous" />
    </environment>
}
@section scripts{
    <script nonce="@Context.Items["ScriptNonce"]">
        serverApp.controller("adSettingsController", ["$scope", function ($scope) {
            $scope.regex = '^(?!(ftp|https?):\/\/)([a-zA-Z0-9-_]+\.)*[a-zA-Z0-9][a-zA-Z0-9-]+(\.[a-z]{2,6})?(:\d{1,5})?(\/[a-zA-Z0-9]+[a-zA-Z0-9]*(\.[a-z]{2,8})?)*?$';
            $scope.distinguishedNameRegex = /^(\w+[=]{1}[a-zA-Z0-9-_\s]+)([\,{1}]\w+[=]{1}[a-zA-Z0-9-_\s]+)*$/;
        }]);

    </script>
    <script nonce="@Context.Items["ScriptNonce"]">
        var defaultAuthentication = "";
        var addUserDirectoryLogUrl = "@Url.Action("AddSystemLogForUserDirectory", "Administration")";
        var userDirectoryAuthControl = "@authenticationControlHelpSiteUrl";
        var userDirectoryOauth = "@authenticationOAuthHelpSiteUrl";
        var userDirectoryOpenid = "@authenticationOpenIdHelpSiteUrl";
        var updateauthsettingsUrl = "@Url.Action("UpdateAuthenticationSettings", "Administration")";
        var updateauthcontrolUrl = "@Url.Action("UpdateAuthControl", "Administration")";
        var updateLoginOptionsUrl = "@Url.Action("UpdateLoginOptions", "Administration")";
        var defaultauthsettingsUrl = "@Url.Action("UpdateDefaultAuthentication", "Administration")";
        var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
        var SystemSettingsProperties = @Json.Serialize(ViewBag.SystemSettings);
        var isAzureApplication = @Json.Serialize(isAzureApplication);
        var userDirectoryWindows = "@authenticationGeneralHelpSiteUrl";
        var isOpenIdIdentityProviderOptionEnabled = @Json.Serialize(isOpenIdIdentityProviderOptionEnabled);
        var isOAuthIdIdentityProviderOptionEnabled = @Json.Serialize(isOAuthIdIdentityProviderOptionEnabled);
        var isOpenIdCustomMailOptionEnabled = @Json.Serialize(isOpenIdCustomMailOptionEnabled);
        var isOAuthCustomMailOptionEnabled = @Json.Serialize(isOAuthCustomMailOptionEnabled);
        var openIdCustomMailContent = @Json.Serialize(openIdCustomMailContent);
        var oAuthCustomMailContent = @Json.Serialize(oAuthCustomMailContent);
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/javascript">

        $(document)
            .ready(function () {
                var section = window.location.href;
                $(".system-settings-sidebar li").hide();

                if (section.toLowerCase().indexOf("groups") > 0 ||
                    section.toLowerCase().indexOf("users") > 0 ||
                    section.toLowerCase().indexOf("user-management") > 0) {
                    $("li[data-current-content='groups'],li[data-current-content='users']").show();
                } else {
                    $("li[data-current-content='emailsettings'],li[data-current-content='usersettings'],li[data-current-content='general'],li[data-current-content='activedirectorysettings'],li[data-current-content='notificationsettings'],li[data-current-content='usersettings'],li[data-current-content='databasesettings'],li[data-current-content='licensesettings']").show();
                }
                if (section.toLowerCase().indexOf("groups") > 0) {
                    $("li[data-current-content='groups'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("users") > 0 ||
                    section.toLowerCase().indexOf("user-management") > 0) {
                    $("li[data-current-content='users'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("e-mail-settings") > 0) {
                    $("li[data-current-content='emailsettings'] a").addClass('active');
                    $("#look-and-feel-container, #active-directory-container, #database-settings-container, #user-settings-container").hide();
                    $("#mail-settings-container").show();
                } else if (section.toLowerCase().indexOf("user-settings") > 0) {
                    $("li[data-current-content='usersettings'] a").addClass('active');
                    $("#look-and-feel-container, #active-directory-container, #database-settings-container, #mail-settings-container").hide();
                    $("#user-settings-container").show();
                } else if (section.toLowerCase().indexOf("authentication-settings") > 0) {
                    $("li[data-current-content='activedirectorysettings'] a").addClass('active');
                    $("#look-and-feel-container, #mail-settings-container,#database-settings-container, #user-settings-container").hide();
                    $("#active-directory-container").show();
                } else if (section.toLowerCase().indexOf("notification-settings") > 0) {
                    $("li[data-current-content='notificationsettings'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("database-settings") > 0) {
                    $("li[data-current-content='databasesettings'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("license-settings") > 0) {
                    $("li[data-current-content='licensesettings'] a").addClass('active');
                    $("#mail-settings-container, #active-directory-container, #user-settings-container").hide();
                } else {
                    $("li[data-current-content='general'] a").addClass('active');
                    $("#look-and-feel-container").show();
                    $("#mail-settings-container, #active-directory-container, #database-settings-container, #user-settings-container").hide();
                    addUserDirectoryLog("site");
                }
            });

        function addUserDirectoryLog(tabName) {
            var resultName = "";
            switch (tabName) {
                case "site":
                    resultName = "SiteSettings";
                    break;
                case "oauth":
                    resultName = "UserDirectory.OAuth2";
                    break;
                case "openid":
                    resultName = "UserDirectory.OpenIDConnect";
                    break;
                case "auth-control":
                    resultName = "UserDirectory.AuthControl";
                    break;
                default:
                    resultName = "";
            }

            $.ajax({
                type: "POST",
                url: addUserDirectoryLogUrl,
                data: { tabName: resultName }
            });
        }
    </script>
    <environment include="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/site-settings.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/site-settings.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/site-settings.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/site-settings.min.js")" crossorigin="anonymous"></script>
    </environment>
}

@section MainSection{
    @await Html.PartialAsync("_AdminMenu")
    @await Html.PartialAsync("_DialogBox")
    <div id="active-directory-container" role="tabpanel" class="col-xs-12 admin-page-container @(ViewBag.ThirdPartyLogins ? string.Empty : "unlock-enterprise-features blur-content")" aria-labelledby="active-directory-settings-link" ng-controller="adSettingsController">

        <div class="col-md-12 import-area admin-page-header">
            <hgroup class="col-lg-6 col-md-6 col-sm-6 col-xs-12 no-padding">
                <h1 class="h2 page-title">[[[AUTHENTICATION SETTINGS]]]</h1>
                <h5 class="page-description">[[[Configure authentication/authorization providers’ information.]]]</h5>
            </hgroup>
        </div>

        <div>
            <ul id="ad-tab-nav" class="nav nav-tabs" role="tablist">
                @if (ServerAppConfig.IsSelfHosted && isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.AuthenticationSettings])))
                {
                <li role="presentation" class="active">
                    <a href="#default-authentication-settings-tab" id="default-authentication-settings" aria-controls="default-authentication-settings" role="tab" data-toggle="tab">[[[General]]]</a>
                </li>
                }
                @if (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.AuthenticationSettings])))
                {
                    <li role="presentation">
                        <a href="#auth-control-tab" id="auth-control" aria-controls="auth-control-tab" role="tab" data-toggle="tab">[[[Authentication Control]]]</a>
                    </li>
                }
                @if (ServerAppConfig.IsSelfHosted && isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.AuthenticationSettings])))
                {
                    <li role="presentation">
                        <a href="#oauth-settings-tab" id="oauth-settings" aria-controls="oauth-settings-tab" role="tab" data-toggle="tab">[[[OAuth 2.0]]]</a>
                    </li>
                    <li role="presentation">
                        <a href="#openid-settings-tab" id="openid-settings" aria-controls="openid-settings-tab" role="tab" data-toggle="tab">[[[OpenID Connect]]]</a>
                    </li>
                }
            </ul>

            <div class="tab-content">
                @if (ServerAppConfig.IsSelfHosted && isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.AuthenticationSettings])))
                {
                    @await Html.PartialAsync("_DefaultAuthentication")
                }

                @if (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.AuthenticationSettings])))
                {
                    @if (ServerAppConfig.IsSelfHosted)
                    {
                        <div role="tabpanel" class="tab-pane" id="auth-control-tab">
                            <div id="auth-control-body" class="col-lg-12 col-md-12 col-sm-12 admin-page-body no-padding">
                                <form id="auth-control-form" name="authControlForm" class="auth-control-form col-lg-12 col-md-12 col-sm-12 no-padding" method="post" enctype="multipart/form-data" autocomplete="off">
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-12 no-padding no-margin enable-global-default-label">
                                            @Html.Label("enable-global-default", "[[[Enable Global Default Authentication]]]", new { @class = "app-textbox-label col-md-4 no-margin" })
                                            <div class="col-md-8 form-input-field pull-left switch-align">
                                                <span class="material-switch text-left">
                                                    <input type="hidden" id="default-control-type" value="@AuthType.DefaultAuth">
                                                    <input type="checkbox" id="enable-global-default" name="enableGlobalDefault" @(authControl == null || (authControl != null && authControl.Where(x => x.AuthType == AuthType.DefaultAuth).FirstOrDefault().IsEnabled) ? "checked" : string.Empty) />
                                                    <label for="enable-global-default" class="label-primary"></label>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-12 no-padding no-margin enable-global-oauth-label">
                                            @Html.Label("enable-global-oauth", "[[[Enable Global OAuth Settings]]]", new { @class = "app-textbox-label col-md-4 no-margin" })
                                            <div class="col-md-8 form-input-field pull-left switch-align">
                                                <span class="material-switch text-left">
                                                    <input type="hidden" id="oauth-control-type" value="@AuthType.OAuth">
                                                    <input type="checkbox" id="enable-global-oauth" name="enableGlobalOauth" @(authControl == null || (authControl != null && authControl.Where(x => x.AuthType == AuthType.OAuth).FirstOrDefault().IsEnabled) ? "checked" : string.Empty) />
                                                    <label for="enable-global-oauth" class="label-primary"></label>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-12 no-padding no-margin enable-global-openid-label">
                                            @Html.Label("enable-global-openid", "[[[Enable Global OpendID Connect Settings]]]", new { @class = "app-textbox-label col-md-4 no-margin" })
                                            <div class="col-md-8 form-input-field pull-left switch-align">
                                                <span class="material-switch text-left">
                                                    <input type="hidden" id="openid-control-type" value="@AuthType.OIDC">
                                                    <input type="checkbox" id="enable-global-openid" name="enableGlobalOpenid" @(authControl == null || (authControl != null && authControl.Where(x => x.AuthType == AuthType.OIDC).FirstOrDefault().IsEnabled) ? "checked" : string.Empty) />
                                                    <label for="enable-global-openid" class="label-primary"></label>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <div role="tabpanel" class="tab-pane" id="oauth-settings-tab">
                            <div id="oauth-page-body" class="col-lg-12 col-md-12 col-sm-12 admin-page-body no-padding">
                                <form id="oauth-setting" name="oauthSettingsForm" class="auth-settings-form col-lg-12 col-md-12 col-sm-12 no-padding" method="post" enctype="multipart/form-data" autocomplete="off">
                                    <input type="hidden" name="oauthAuthenticationProvider" value="@ViewBag.OAuthSettings.AuthProvider">
                                    <input type="hidden" name="oauthLogo" value="@ViewBag.OAuthSettings.OAuthAuthSettings.Logo">
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin enable-openid-label">
                                            @Html.Label("enable-oauth", "[[[Enable OAuth 2.0]]]", new { @class = "app-textbox-label col-md-4 no-margin" })
                                            <div class="col-md-8 form-input-field pull-left switch-align">
                                                <span class="material-switch text-left">
                                                    @if ((bool)ViewBag.OAuthSettings.IsEnabled)
                                                    {
                                                        <input type="checkbox" id="enable-oauth" name="oauthIsEnabled" ng-model="oauthIsEnabled" ng-init="oauthIsEnabled=true" ng-click="hideValidationMessage(oauthIsEnabled, 'oauth')" ng-checked=true />
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" id="enable-oauth" name="oauthIsEnabled" ng-model="oauthIsEnabled" ng-init="oauthIsEnabled=false" ng-click="hideValidationMessage(oauthIsEnabled, 'oauth')" />
                                                    }
                                                    <label for="enable-oauth" class="label-primary"></label>
                                                </span>
                                                <span class="validation-message"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Provider Name]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.oauthProviderName.$dirty && oauthSettingsForm.oauthProviderName.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="oauthProviderName" ng-init="oauthProviderName='@providerName'" name="oauthProviderName" placeholder="[[[Provider Name]]]" id="oauth-provider-name" data-ng-disabled="!oauthIsEnabled" required />
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthProviderName.$error.required && oauthSettingsForm.oauthProviderName.$dirty && oauthIsEnabled">[[[Please enter the OAuth provider name.]]]</span>
                                            </div>
                                            <span id="oauth-provider-name-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[Name of the authentication provider to be displayed in the login page.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Provider Logo]]]</label>
                                            <div class="col-md-8 logo-container">
                                                <div id="oauth-image-upload-box" class="auth-image-upload-box">
                                                    <div class="js-image-preview" style="background-image:{{oauthLogoUrl}}"></div>
                                                    <div class="upload-options">
                                                        <label>
                                                            <span>[[[Change logo]]]</span>
                                                            <input type="file" class="image-upload" accept="image/png,image/jpeg,image/svg+xml" ng-model="oauthLogoUrl" ng-init="oauthLogoUrl='@ViewBag.OAuthSettings.LogoUrl'" name="oauthLogoUrl" data-ng-disabled="!oauthIsEnabled" required />
                                                        </label>
                                                    </div>
                                                </div>
                                                <span id="oauth-logo-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[Logo of the authentication provider to be displayed in the login page.]]]"></span>
                                                <span class="validation-message top-padding" ng-show="!oauthSettingsForm.isValidOAuthLogoUrl && oauthIsEnabled"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Authorization Endpoint]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.oauthAuthorizationEP.$dirty && oauthSettingsForm.oauthAuthorizationEP.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="oauthAuthorizationEP" ng-init="oauthAuthorizationEP='@authorizationEndPoint'" ng-pattern="@oauthRegEx" name="oauthAuthorizationEP" placeholder="[[[Authorization Endpoint]]]" id="oauth-authorization-endpoint" data-ng-disabled="!oauthIsEnabled" required />
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthAuthorizationEP.$error.required && oauthSettingsForm.oauthAuthorizationEP.$dirty && oauthIsEnabled">[[[Please enter the authorization endpoint.]]]</span>
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthAuthorizationEP.$error.pattern && oauthSettingsForm.oauthAuthorizationEP.$dirty && oauthIsEnabled">[[[Please enter a valid authorization endpoint.]]]</span>
                                            </div>
                                            <span id="oauth-auth-endpoint-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[An authorization URL where the resource owner grants authorization to the OAuth client to access protected resources.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Token Endpoint]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.oauthTokenEP.$dirty && oauthSettingsForm.oauthTokenEP.$invalid) ? 'has-error' : ''">
                                                <select id="token-method-type" class="selectpicker method-type" data-ng-disabled="!oauthIsEnabled">
                                                    <option class="no-margin-dropdown-ul" value="POST" selected="@(ViewBag.OAuthSettings.OAuthAuthSettings.TokenEndPointMethod == "POST")">[[[POST]]]</option>
                                                    <option class="no-margin-dropdown-ul" value="GET" selected="@(ViewBag.OAuthSettings.OAuthAuthSettings.TokenEndPointMethod == "GET")">[[[GET]]]</option>
                                                </select>
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="oauthTokenEP" ng-init="oauthTokenEP='@tokenEndPoint'" ng-pattern="@oauthRegEx" name="oauthTokenEP" placeholder="[[[Token Endpoint]]]" id="oauth-token-endpoint" data-ng-disabled="!oauthIsEnabled" required />
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthTokenEP.$error.required && oauthSettingsForm.oauthTokenEP.$dirty && oauthIsEnabled">[[[Please enter a token endpoint.]]]</span>
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthTokenEP.$error.pattern && oauthSettingsForm.oauthTokenEP.$dirty && oauthIsEnabled">[[[Please enter a valid token endpoint.]]]</span>
                                            </div>
                                            <span id="oauth-token-endpoint-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[A token request URL where the OAuth client exchanges an authorization grant for an access token.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[User Information Endpoint]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.oauthUserInfoEP.$dirty && oauthSettingsForm.oauthUserInfoEP.$invalid) ? 'has-error' : ''">
                                                <select id="user-info-method-type" class="selectpicker method-type" data-ng-disabled="!oauthIsEnabled">
                                                    <option class="no-margin-dropdown-ul" value="GET" selected="@(ViewBag.OAuthSettings.OAuthAuthSettings.UserInfoEndPointMethod == "GET")">[[[GET]]]</option>
                                                    <option class="no-margin-dropdown-ul" value="POST" selected="@(ViewBag.OAuthSettings.OAuthAuthSettings.UserInfoEndPointMethod == "POST")">[[[POST]]]</option>
                                                </select>
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="oauthUserInfoEP" ng-init="oauthUserInfoEP='@userInfoEndPoint'" ng-pattern="@oauthRegEx" name="oauthUserInfoEP" placeholder="[[[User Information Endpoint]]]" id="oauth-userinfo-endpoint" data-ng-disabled="!oauthIsEnabled" required />
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthUserInfoEP.$error.required && oauthSettingsForm.oauthUserInfoEP.$dirty && oauthIsEnabled">[[[Please enter the user information endpoint.]]]</span>
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthUserInfoEP.$error.pattern && oauthSettingsForm.oauthUserInfoEP.$dirty && oauthIsEnabled">[[[Please enter a valid user information endpoint.]]]</span>
                                            </div>
                                            <span id="oauth-user-info-endpoint-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[URL to retrieve the user information based on the token.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Client ID]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.oauthClientId.$dirty && oauthSettingsForm.oauthClientId.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="oauthClientId" ng-init="oauthClientId='@clientId'" name="oauthClientId" placeholder="[[[Client ID]]]" id="oauth-client-id" data-ng-disabled="!oauthIsEnabled" required />
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthClientId.$error.required && oauthSettingsForm.oauthClientId.$dirty && oauthIsEnabled">[[[Please enter the client ID.]]]</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Client Secret]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.oauthClientSecret.$dirty && oauthSettingsForm.oauthClientSecret.$invalid) ? 'has-error' : ''">
                                                <input type="password" class="form-control col-md-6 no-margin" ng-model="oauthClientSecret" ng-init="oauthClientSecret" name="oauthClientSecret" placeholder="[[[Client Secret]]]" id="oauth-client-secret" data-ng-disabled="!oauthIsEnabled" required />                                       <span class="validation-message" ng-show="oauthSettingsForm.oauthClientSecret.$error.required && oauthSettingsForm.oauthClientSecret.$dirty && oauthIsEnabled">[[[Please enter the client secret.]]]</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Scopes]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.oauthScopes.$dirty && oauthSettingsForm.oauthScopes.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="oauthScopes" ng-init="oauthScopes='@ViewBag.OAuthSettings.OAuthAuthSettings.Scopes'" name="oauthScopes" placeholder="[[[Comma separated scopes]]]" id="oauth-scopes" data-ng-disabled="!oauthIsEnabled" required />
                                                <span class="validation-message" ng-show="oauthSettingsForm.oauthScopes.$error.required && oauthSettingsForm.oauthScopes.$dirty && oauthIsEnabled">[[[Please enter comma separated scopes.]]]</span>
                                            </div>
                                            <span id="oauth-scopes-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[Scope is a mechanism in OAuth 2.0 to limit an application's access to a user's account. An application can request one or more scopes. This information is then presented to the user in the consent screen, and the access token issued to the application will be limited to the scopes granted.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Redirect URI]]]</label>
                                            <div class="col-md-8 no-margin form-input-field">
                                                <input onClick="this.setSelectionRange(0, this.value.length)" id="oauth-callback-link" value="@(globalAppSettings.SystemSettings.IDPUrl + AuthenticationConfig.OAuthCallabckUrl)" class="form-control col-md-6 no-margin" readonly />
                                                <div class="form-control su su-copy text focus" id="oauth-callback-link-copy" readonly="" data-original-title="[[[Click to copy]]]"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="section-title">
                                            <span>[[[User data]]]</span>
                                        </div>
                                        <div class="col-md-6 section-info-message-container">
                                            <span class="su su-info"></span>
                                            <div class="section-info-message">[[[The user information endpoint returns claims about the authenticated user. These claims are normally represented by a JSON object that contains a collection of name and value pairs for each claim. Fill JSON keys with respect to the required details to identify the exact values.]]]</div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Email]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.userInfoEmail.$dirty && oauthSettingsForm.userInfoEmail.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="userInfoEmail" ng-init="userInfoEmail='@userInfoEmail'" name="userInfoEmail" placeholder="[[[Email]]]" id="user-info-email" data-ng-disabled="!oauthIsEnabled" required />
                                                <span class="validation-message" ng-show="oauthSettingsForm.userInfoEmail.$error.required && oauthSettingsForm.userInfoEmail.$dirty && oauthIsEnabled">[[[Please enter the value for email.]]]</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[First Name]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.userInfoFirstname.$dirty && oauthSettingsForm.userInfoFirstname.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="userInfoFirstname" ng-init="userInfoFirstname='@userInfoFirstname'" name="userInfoFirstname" placeholder="[[[First Name]]]" id="user-info-firstname" data-ng-disabled="!oauthIsEnabled" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Last Name]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(oauthSettingsForm.userInfoLastname.$dirty && oauthSettingsForm.userInfoLastname.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="userInfoLastname" ng-init="userInfoLastname='@userInfoLastname'" name="userInfoLastname" placeholder="[[[Last Name]]]" id="user-info-lastname" data-ng-disabled="!oauthIsEnabled" />
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="col-md-12 form-group">
                                        <div id="identity-provider-info" class="col-sm-12 col-xs-12">
                                            <div id="enable-checkbox">
                                                @if (isOAuthIdIdentityProviderOptionEnabled)
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-oauth-identity-provider-info" name="oauthIdentityProviderInfoIsEnabled" ng-model="oauthIdentityProviderInfoIsEnabled" ng-init="oauthIdentityProviderInfoIsEnabled=true" ng-checked=true />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-oauth-identity-provider-info" name="oauthIdentityProviderInfoIsEnabled" ng-model="oauthIdentityProviderInfoIsEnabled" ng-init="oauthIdentityProviderInfoIsEnabled=false" />
                                                }
                                                @Html.Hidden("configure-oauth-identity-provider-info")
                                                @Html.Label("configure-oauth-identity-provider-info", "[[[Configure identity provider info to add users]]]")
                                            </div>
                                        </div>
                                    </div>
                                    <div id="oauth-identity-provider-info-section" ng-if="oauthIdentityProviderInfoIsEnabled">
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Provider Name]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" id="oauth-identity-provider-name" ng-class="(oauthSettingsForm.oauthIdentityProviderName.$dirty && oauthSettingsForm.oauthIdentityProviderName.$invalid) ? 'has-error' : ''">
                                                    <input type="text" class="form-control col-md-6 no-margin" placeholder="[[[Provider Name]]]" name="oauthIdentityProviderName" ng-model="oauthIdentityProviderName" ng-init="oauthIdentityProviderName='@oAuthIdentityProviderName'" data-ng-disabled="!oauthIsEnabled" required />
                                                    <span class="validation-message" id="oauthIPN-validation-message" ng-show="oauthSettingsForm.oauthIdentityProviderName.$error.required && oauthSettingsForm.oauthIdentityProviderName.$dirty && oauthIsEnabled">[[[Please enter the identity provider name.]]]</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Provider URL]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" id="oauth-identity-provider-url" ng-class="(oauthSettingsForm.oauthIdentityProviderUrl.$dirty && oauthSettingsForm.oauthIdentityProviderUrl.$invalid) ? 'has-error' : ''">
                                                    <input type="text" class="form-control col-md-6 no-margin" placeholder="[[[Provider URL]]]" name="oauthIdentityProviderUrl" ng-model="oauthIdentityProviderUrl" ng-init="oauthIdentityProviderUrl='@oAuthIdentityProviderURL'" data-ng-disabled="!oauthIsEnabled" required />
                                                    <span class="validation-message" id="oauthIPU-validation-message" ng-show="oauthSettingsForm.oauthIdentityProviderUrl.$error.required && oauthSettingsForm.oauthIdentityProviderUrl.$dirty && oauthIsEnabled">[[[Please enter the identity provider URL.]]]</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div id="custom-mail-content" class="col-sm-12 col-xs-12">
                                            <div id="enable-checkbox">
                                                @if (isOAuthCustomMailOptionEnabled)
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-oauth-custom-mail-content" name="oauthCustomMailContentIsEnabled" ng-model="oauthCustomMailContentIsEnabled" ng-init="oauthCustomMailContentIsEnabled=true" ng-checked=true />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-oauth-custom-mail-content" name="oauthCustomMailContentIsEnabled" ng-model="oauthCustomMailContentIsEnabled" ng-init="oauthCustomMailContentIsEnabled=false" />
                                                }
                                                @Html.Hidden("configure-oauth-custom-mail-content")
                                                @Html.Label("configure-oauth-custom-mail-content", "[[[Configure custom invite mail]]]")
                                            </div>
                                        </div>
                                    </div>
                                    <div id="oauth-custom-mail-content-section" ng-if="oauthCustomMailContentIsEnabled">
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Subject]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" id="oauth-identity-provider-url" ng-class="(oauthSettingsForm.oauthMailSubject.$dirty && oauthSettingsForm.oauthMailSubject.$invalid) ? 'has-error' : ''">
                                                    <input type="text" class="form-control col-md-6 no-margin" placeholder="[[[Subject]]]" name="oauthMailSubject" ng-model="oauthMailSubject" ng-init="oauthMailSubject='@oAuthSubject'" data-ng-disabled="!oauthIsEnabled" required />
                                                    <span class="validation-message" id="oauthIPU-validation-message" ng-show="oauthSettingsForm.oauthMailSubject.$error.required && oauthSettingsForm.oauthMailSubject.$dirty && oauthIsEnabled">[[[Please enter a subject.]]]</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group oauth-custom-mail-content">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Custom invite mail content]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" id="oauth-email-editor">
                                                    <textarea class="col-sm-12 col-xs-12 no-padding" id="oauth-custom-mail-content"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@
                                </form>
                            </div>
                        </div>

                        <div role="tabpanel" class="tab-pane" id="openid-settings-tab">
                            <div id="openid-page-body" class="col-lg-12 col-md-12 col-sm-12 admin-page-body no-padding">
                                <form id="openid-setting" name="openidSettingsForm" class="auth-settings-form col-lg-12 col-md-12 col-sm-12 no-padding" method="post" enctype="multipart/form-data" autocomplete="off">
                                    <input type="hidden" name="openidAuthenticationProvider" value="@ViewBag.OpenIDSettings.AuthProvider">
                                    <input type="hidden" name="openidLogo" value="@ViewBag.OpenIDSettings.OIDCAuthSettings.Logo">
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin enable-openid-label">
                                            @Html.Label("enable-openid", "[[[Enable OpenID Connect]]]", new { @class = "app-textbox-label col-md-4 no-margin" })
                                            <div class="col-md-8 form-input-field pull-left switch-align">
                                                <span class="material-switch text-left">
                                                    @if ((bool)ViewBag.OpenIDSettings.IsEnabled)
                                                    {
                                                        <input type="checkbox" id="enable-openid" name="openidIsEnabled" ng-model="openidIsEnabled" ng-init="openidIsEnabled=true" ng-click="hideValidationMessage(openidIsEnabled, 'openid')" ng-checked=true />
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" id="enable-openid" name="openidIsEnabled" ng-model="openidIsEnabled" ng-init="openidIsEnabled=false" ng-click="hideValidationMessage(openidIsEnabled, 'openid')" />
                                                    }
                                                    <label for="enable-openid" class="label-primary"></label>
                                                </span>
                                                <span class="validation-message"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Provider Name]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openidProviderName.$dirty && openidSettingsForm.openidProviderName.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="openidProviderName" ng-init="openidProviderName='@OpenIDProviderName'" name="openidProviderName" placeholder="[[[Provider Name]]]" id="openid-provider-name" data-ng-disabled="!openidIsEnabled" required />
                                                <span class="validation-message" ng-show="openidSettingsForm.openidProviderName.$error.required && openidSettingsForm.openidProviderName.$dirty && openidIsEnabled">[[[Please enter the OpenID provider name.]]]</span>
                                            </div>
                                            <span id="openid-provider-name-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[Name of the authentication provider to be displayed in the login page.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Provider Logo]]]</label>
                                            <div class="col-md-8 logo-container">
                                                <div id="openid-image-upload-box" class="auth-image-upload-box">
                                                    <div class="js-image-preview" style="background-image:{{openidLogoUrl}}"></div>
                                                    <div class="upload-options">
                                                        <label>
                                                            <span>[[[Change logo]]]</span>
                                                            <input type="file" class="image-upload" accept="image/png,image/jpeg,image/svg+xml" ng-model="openidLogoUrl" ng-init="openidLogoUrl='@ViewBag.OpenIDSettings.LogoUrl'" name="openidLogoUrl" data-ng-disabled="!openidIsEnabled" required />
                                                        </label>
                                                    </div>
                                                </div>
                                                <span id="openid-logo-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[Logo of the authentication provider to be displayed in the login page.]]]"></span>
                                                <span class="validation-message top-padding" ng-show="!openidSettingsForm.isValidOpenIdLogoUrl && openidIsEnabled"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Authority]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openidAuthority.$dirty && openidSettingsForm.openidAuthority.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="openidAuthority" ng-init="openidAuthority='@authority'" ng-pattern="@oauthRegEx" name="openidAuthority" placeholder="[[[Authority]]]" id="openid-authority" data-ng-disabled="!openidIsEnabled" required />
                                                <span class="validation-message" ng-show="openidSettingsForm.openidAuthority.$error.required && openidSettingsForm.openidAuthority.$dirty && openidIsEnabled">[[[Please enter the Authority URL.]]]</span>
                                                <span class="validation-message" ng-show="openidSettingsForm.openidAuthority.$error.pattern && openidSettingsForm.openidAuthority.$dirty && openidIsEnabled">[[[Please enter a valid Authority URL.]]]</span>
                                            </div>
                                            <span id="openid-authority-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[Endpoint to authenticate the user and grant access to the protected resource. It returns the claims about the authenticated user.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Client ID]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openidClientId.$dirty && openidSettingsForm.openidClientId.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="openidClientId" ng-init="openidClientId='@openIDClientId'" name="openidClientId" placeholder="[[[Client ID]]]" id="openid-client-id" data-ng-disabled="!openidIsEnabled" required />
                                                <span class="validation-message" ng-show="openidSettingsForm.openidClientId.$error.required && openidSettingsForm.openidClientId.$dirty && openidIsEnabled">[[[Please enter the Client ID.]]]</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Client Secret]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openidClientSecret.$dirty && openidSettingsForm.openidClientSecret.$invalid) ? 'has-error' : ''">
                                                <input type="password" class="form-control col-md-6 no-margin" ng-model="openidClientSecret" ng-init="openidClientSecret" name="openidClientSecret" placeholder="[[[Client Secret]]]" id="openid-client-secret" data-ng-disabled="!openidIsEnabled" required />                                       <span class="validation-message" ng-show="openidSettingsForm.openidClientSecret.$error.required && openidSettingsForm.openidClientSecret.$dirty && openidIsEnabled">[[[Please enter the client secret.]]]</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Identifier]]]</label>
                                            <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openidIdentifier.$dirty && openidSettingsForm.openidIdentifier.$invalid) ? 'has-error' : ''">
                                                <input type="text" class="form-control col-md-6 no-margin" ng-model="openidIdentifier" ng-init="openidIdentifier='@identifier'" name="openidIdentifier" placeholder="[[[Identifier]]]" id="openid-identifier" data-ng-disabled="!openidIsEnabled" required />
                                                <span class="validation-message" ng-show="openidSettingsForm.openidIdentifier.$error.required && openidSettingsForm.openidIdentifier.$dirty && openidIsEnabled">[[[Please enter the Identifier.]]]</span>
                                            </div>
                                            <span id="openid-identifier-info" class="su su-info info-popup" data-toggle="popover" data-placement="bottom" data-html="true" data-content="[[[These claims are normally represented by a JSON object that contains a collection of name and value pairs for each claim. Provide the JSON key to identify the unique identity (email) of the user.]]]"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div class="col-md-6 no-padding no-margin">
                                            <label class="app-textbox-label col-md-4 no-margin">[[[Redirect URI]]]</label>
                                            <div class="col-md-8 no-margin form-input-field">
                                                <input onClick="this.setSelectionRange(0, this.value.length)" id="openid-callback-link" value="@(globalAppSettings.SystemSettings.IDPUrl + AuthenticationConfig.OidcCallabckUrl)" class="form-control col-md-6 no-margin" readonly />
                                                <div class="form-control su su-copy text focus" id="openid-callback-link-copy" readonly="" data-original-title="[[[Click to copy]]]"></div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="col-md-12 form-group">
                                        <div id="identity-provider-info" class="col-sm-12 col-xs-12s">
                                            <div id="enable-checkbox">
                                                @if (isOpenIdIdentityProviderOptionEnabled)
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-openid-identity-provider-info" name="identityproviderInfoiseEnbled" ng-model="openIdIdentityProviderInfoIsEnabled" ng-init="openIdIdentityProviderInfoIsEnabled=true" ng-checked=true />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-openid-identity-provider-info" name="identityproviderInfoiseEnbled" ng-model="openIdIdentityProviderInfoIsEnabled" ng-init="openIdIdentityProviderInfoIsEnabled=false" />
                                                }
                                                @Html.Hidden("configure-openid-identity-provider-info")
                                                @Html.Label("configure-openid-identity-provider-info", "[[[Configure identity provider info to add users]]]")
                                            </div>
                                        </div>
                                    </div>
                                    <div id="openid-identity-provider-info-section" ng-if="openIdIdentityProviderInfoIsEnabled">
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Provider Name]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openIdIdentityProviderName.$dirty && openidSettingsForm.openIdIdentityProviderName.$invalid) ? 'has-error' : ''">
                                                    <input type="text" class="form-control col-md-6 no-margin" name="openIdIdentityProviderName" ng-model="openIdIdentityProviderName" ng-init="openIdIdentityProviderName='@openIdIdentityProviderName'" placeholder="[[[Provider Name]]]" data-ng-disabled="!openidIsEnabled" required />
                                                    <span class="validation-message" id="opendidIPN-validation-message" ng-show="openidSettingsForm.openIdIdentityProviderName.$error.required && openidSettingsForm.openIdIdentityProviderName.$dirty && openidIsEnabled">[[[Please enter the identity provider name.]]]</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Provider URL]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openIdIdentityProviderURL.$dirty && openidSettingsForm.openIdIdentityProviderURL.$invalid) ? 'has-error' : ''">
                                                    <input type="text" class="form-control col-md-6 no-margin" name="openIdIdentityProviderURL" ng-model="openIdIdentityProviderURL" ng-init="openIdIdentityProviderURL='@openIdIdentityProviderURL'" placeholder="[[[Provider URL]]]" data-ng-disabled="!openidIsEnabled" required />
                                                    <span class="validation-message" id="opendidIPU-validation-message" ng-show="openidSettingsForm.openIdIdentityProviderURL.$error.required && openidSettingsForm.openIdIdentityProviderURL.$dirty && openidIsEnabled">[[[Please enter the identity provider URL.]]]</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 form-group">
                                        <div id="custom-mail-content" class="col-sm-12 col-xs-12s">
                                            <div id="enable-checkbox">
                                                @if (isOpenIdCustomMailOptionEnabled)
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-openid-custom-mail-content" name="customMailContentiseEnbled" ng-model="openIdCustomMailContentIsEnabled" ng-init="openIdCustomMailContentIsEnabled=true" ng-checked=true />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" class="material-checkbox" id="configure-openid-custom-mail-content" name="customMailContentiseEnbled" ng-model="openIdCustomMailContentIsEnabled" ng-init="openIdCustomMailContentIsEnabled=false" />
                                                }
                                                @Html.Hidden("configure-openid-custom-mail-content")
                                                @Html.Label("configure-openid-custom-mail-content", "[[[Configure custom invite mail]]]")
                                            </div>
                                        </div>
                                    </div>
                                    <div id="openid-custom-invite-mail-content-section" ng-if="openIdCustomMailContentIsEnabled">
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Subject]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" ng-class="(openidSettingsForm.openidMailSubject.$dirty && openidSettingsForm.openidMailSubject.$invalid) ? 'has-error' : ''">
                                                    <input type="text" class="form-control col-md-6 no-margin" name="openidMailSubject" ng-model="openidMailSubject" ng-init="openidMailSubject='@openIdSubject'" placeholder="[[[Subject]]]" data-ng-disabled="!openidIsEnabled" required />
                                                    <span class="validation-message" id="opendidIPU-validation-message" ng-show="openidSettingsForm.openidMailSubject.$error.required && openidSettingsForm.openidMailSubject.$dirty && openidIsEnabled">[[[Please enter a subject.]]]</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="app-textbox-label col-md-4 no-margin">[[[Custom invite mail content]]]</label>
                                                <div class="col-md-8 no-margin form-input-field" id="openid-email-editor">
                                                    <textarea class="col-sm-12 col-xs-12 no-padding" id="openid-custom-mail-content"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@
                                </form>
                            </div>
                        </div>
                        }
                    }
                </div>
        </div>

        @if (ViewBag.ThirdPartyLogins)
        {
            <div class="admin-page-actions col-lg-12 col-md-12">
                <a href="@Url.Action("Index","Home")" class="secondary-button app-btn-secondary pull-right" id="cancel-active-dir-settings" title="">[[[Cancel]]]</a>
                <button type="submit" id="update-defaultauthlogin-settings" class="primary-button app-btn-primary pull-right update-defaultauth-settings">[[[Save]]]</button>
                <button type="submit" id="update-auth-control" class="primary-button app-btn-primary pull-right" style="display:none">[[[Save]]]</button>
                <button type="submit" id="update-oauth-settings" class="primary-button app-btn-primary pull-right update-auth-settings" ng-disabled="oauthSettingsForm.$invalid" style="display:none">[[[Save]]]</button>
                <button type="submit" id="update-openid-settings" class="primary-button app-btn-primary pull-right update-auth-settings" ng-disabled="openidSettingsForm.$invalid" style="display:none">[[[Save]]]</button>
            </div>
        }

    </div>
}
