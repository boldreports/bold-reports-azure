@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = "[[[Embed Settings]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var embedEnabled = Convert.ToBoolean(ViewBag.EmbedSettings);
    var embedSecretCode = globalAppSettings.SystemSettings.EmbedSecret;
    var generateSecret = "[[[Generate Secret]]]";
    var resetSecret = "[[[Reset Secret]]]";
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.EmbedLogin);
}
}

@section styles{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/embed-settings.css" />
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/embed-settings.min.css" />
    </environment>
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/embed-settings.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/embed-settings.min.js"></script>
    </environment>
}


@section MainSection{
    <script>
        var embedSecretCode = "@embedSecretCode";
        var isResetEmbedSecretUrl = "@Url.Action("ResetEmbedSecret", "Administration")";
        var updateSystemSettingsValueUrl = "@Url.Action("UpdateSystemSettingValue", "Administration")";
    </script>

    @await Html.PartialAsync("_AdminMenu")

    <div id="embed-settings-container" class="col-xs-12 admin-page-container">
        <div id="embed-settings-header" class="col-xs-12 admin-page-header">
            <hgroup>
                <h1 class="h2 page-title">
                    [[[EMBED SETTINGS]]]
                </h1>
                <h5 class="page-description">
                    [[[Configuration for the Embedded Report]]]
                </h5>
            </hgroup>
        </div>
        <div id="embed-settings-body" class="admin-page-body">
            <div class="col-xs-8 embed-authentication">
                <label class="col-md-4 app-textbox-label activation embed-enabled">
                    [[[Enable embed authentication]]]
                </label>
                <div class="col-md-2 text-left switch-align embed-loader">
                    <span class="material-switch text-left">
                        <input type="checkbox" id="restrict-embed-enabled" @(embedEnabled ? "checked" : string.Empty) />
                        <label for="restrict-embed-enabled" class="label-primary"></label>
                    </span>
                </div>
            </div>
            <div id="get-secret-code" class="row input-field-wrapper">
                <div class="col-xs-8 field-container-dashboard">
                    <label class="col-md-4 app-textbox-label activation">
                        [[[Embed secret]]]
                    </label>
                    <div class="col-md-7 secret-code-container">
                        <div id="secret-code-link" class="col-xs-6">
                            <input type="text" id="secret-code" name="" class="form-control" placeholder="[[[Embed secret]]]" autocomplete="off" disabled="disabled" onClick="this.setSelectionRange(0, this.value.length)">
                            <div class="form-control su su-copy text focus" id="secret-code-copy" disabled="disabled" data-original-title="[[[Click to copy]]]"></div>
                        </div>
                        <button type="button" title="" id="get-embed-code" onclick="getEmbedSecret();" class="primary-button" @(embedEnabled ? string.Empty : "disabled")>
                            @if (string.IsNullOrWhiteSpace(embedSecretCode))
                            {
                                @generateSecret;
                            }
                            else
                            {
                                @resetSecret;
                            }
                        </button>
                        <div class="tool-tip col-xs-1">
                            <span class="dropdown-toggle" data-toggle="dropdown"><span class="su su-info" title=""></span></span>
                            <div class="dropdown-menu" role="menu">[[[Anyone with access to the secret key may create a URL to access the report, as any user, with any options. Keep embed authentication disabled if you’re not using it.]]]</div>
                        </div>
                        <div class="col-lg-5 bg-warning secret-code-notification">
                            [[[Store the secret key somewhere safe. As soon as you navigate away from this page, we will not be able to retrieve or restore this generated secret.]]]
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!ViewBag.Embed)
    {
        @await Html.PartialAsync("~/Views/UnlockFeatures/UnlockFeatures.cshtml")
    }
}
