@using Syncfusion.Server.Base.Helpers

@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = "[[[CORS Settings]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    ViewBag.MessageBox = false;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.DataStoreSettings);
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var helpSiteBaseUrl = ServerAppConfig.AppSettings.Documentation.BaseUri;
    var corsSettings = ViewBag.CorsSettings != null ? ViewBag.CorsSettings : new CORS();
    var allowedOrigins = corsSettings.AllowedOrigins != null ? corsSettings.AllowedOrigins.Split(',') : corsSettings.AllowedOrigins;
    var allowedHeaders = corsSettings.AllowedHeaders != null ? corsSettings.AllowedHeaders.Split(',') : corsSettings.AllowedHeaders;
    var allowedExposeHeaders = corsSettings.ExposeHeaders != null ? corsSettings.ExposeHeaders.Split(',') : corsSettings.ExposeHeaders;
    var preflightMaxAge = corsSettings.PreflightMaxAge != "" ? corsSettings.PreflightMaxAge : 5;
    bool isSelfHosted = ServerAppConfig.IsSelfHosted;
    var isMaster = globalAppSettings.SystemSettings.IsMaster;
    var model = ViewBag.GranularPermissions as Dictionary<object, bool>;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.CORSSettings);
}


@section styles{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/site-settings.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/site-settings.css")" crossorigin="anonymous" />
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/site-settings.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/site-settings.min.css")" crossorigin="anonymous" />
    </environment>
}
@section scripts{
    <environment include="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/site-settings.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/site-settings.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/site-settings.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/site-settings.min.js")" crossorigin="anonymous"></script>
    </environment>
    <script nonce="@Context.Items["ScriptNonce"]">
        var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
        var updateCorsSettingsUrl = "@Url.Action("UpdateCorsSettings", "Administration")";
        var allowedOriginsList = @Json.Serialize(allowedOrigins);
        var allowedHeadersList = @Json.Serialize(allowedHeaders);
        var allowedExposeHeadersList = @Json.Serialize(allowedExposeHeaders);
    </script>
}

@section MainSection{

    @await Html.PartialAsync("_AdminMenu")

    <div class="col-xs-12 admin-page-container">
        <div class="col-xs-12 admin-page-header" id="security-settings-page">
            <hgroup>
                <h1 class="h2 page-title">
                    [[[CORS Policy]]]
                </h1>
                <h5 class="page-description">
                    [[[Configure CORS settings for your site.]]]
                </h5>
            </hgroup>
        </div>
        <div class="col-xs-12 " id="cors-settings">
            <div id="cors-settings-body" class="admin-page-body">
                <form id="cors-settings-form" class="no-padding col-xs-12 no-padding content-display text-wrap" autocomplete="off">
                    <div class="col-xs-12 no-padding enable-cors settings-page-fields form-group">
                        <div class="col-xs-12 no-padding">
                            <div class="info-label">
                                @Html.CheckBox("enable-cors", (bool)corsSettings.EnableCors, new { @class = "material-checkbox" })
                                @Html.Hidden("enable-cors")
                                <label for="enable-cors" id="enable-cors">
                                    [[[Customize CORS Policy]]]
                                </label>
                            </div>
                            <div class="info-message">
                                [[[You can configure a custom policy for your site. The default policy will be applied if this option is disabled.]]]
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 no-padding settings-page-fields form-fields-top-margin origin-names-list form-group">
                        <div class="info-label">
                            @Html.Label("allowed-origins", "[[[Allowed Origins]]]", new { @class = "app-textbox-label" })
                        </div>
                        <div class="info-message">
                            [[[The specified origins will be able to access the resource. By default, all origins will be allowed.]]]
                        </div>
                        <span id="origin-name-content" class="origin-names-input">
                            <span id="origin-chip-content" class="origin-names-chip"></span>
                            <input id="txt-allowedorigins" autocomplete="off" class="form-control validation-padding txt-holder" placeholder="[[[Enter the list of origins separated by commas]]]" maxlength="253">
                        </span>
                        <span class="origin-name-validation validation-errors"></span>
                    </div>
                    <div class="col-xs-12 no-padding settings-page-fields form-fields-top-margin form-group">
                        <div class="info-label">
                            @Html.Label("allowed-methods", "[[[Allowed Methods]]]", new { @class = "app-textbox-label" })
                        </div>
                        <div class="info-message">
                            [[[The specified methods will be able to access the resource. They will be used in response to a preflight request.]]]
                        </div>
                        <div id="allowed-methods-dropdown" class="dropdown txt-holder no-padding">
                            @Html.DropDownList("allowed-methods", ViewBag.AllowedMethods as IEnumerable<SelectListItem>, new { id = "allowed-methods", @class = "selectpicker form-control", @multiple = "", data_none_results_text = "[[[No results match]]]", data_size = "10", title = "[[[Select Method]]]", data_live_search = "true", data_live_search_placeholder = "[[[Search]]]", })
                        </div>
                    </div>
                    <div class="col-xs-12 no-padding settings-page-fields form-fields-top-margin headers-names-list form-group">
                        <div class="info-label">
                            @Html.Label("allowed-headers", "[[[Allowed Headers]]]", new { @class = "app-textbox-label" })
                        </div>
                        <div class="info-message">
                            [[[The specified HTTP headers can be used when making an actual request. They are used in response to a preflight request.]]]
                        </div>
                        <span id="headers-name-content" class="headers-names-input">
                            <span id="headers-chip-content" class="headers-names-chip"></span>
                            <input id="txt-allowedheaders" autocomplete="off" class="form-control validation-padding txt-holder" placeholder="[[[Enter the list of headers separated by commas]]]" maxlength="253">
                        </span>
                    </div>
                    <div id="cors-allowed-credentials-dropdown" class="col-xs-12 no-padding settings-page-fields form-fields-top-margin form-group">
                        <div class="info-label">
                            @Html.Label("allowed-credentials", "[[[Allow Credentials]]]", new { @class = "app-textbox-label" })
                        </div>
                        <div class="info-message">
                            [[[When Allow Credentials is set to true, browsers are notified whether to expose the response to front-end JavaScript code.]]]
                        </div>
                        <div id="allowed-credentials-dropdown" class="txt-holder validation-padding">
                            <select id="allowed-credentials" class="selectpicker no-padding" @((bool)!corsSettings.EnableCors ? "disabled" : string.Empty)>
                                <option value="true" selected="@(corsSettings.AllowCredentials == true)">[[[True]]]</option>
                                <option value="false" selected="@(corsSettings.AllowCredentials == false)">[[[False]]]</option>
                            </select>
                        </div>
                        <span class="credentials-name-validation validation-errors"></span>
                    </div>
                    <div class="col-xs-12 no-padding settings-page-fields form-fields-top-margin expose-headers-names-list form-group">
                        <div class="info-label">
                            @Html.Label("expose-headers", "[[[Expose Headers]]]", new { @class = "app-textbox-label" })
                        </div>
                        <div class="info-message">
                            [[[This field value allows a server to specify which response headers should be exposed to browser-based scripts.]]]
                        </div>
                        <span id="expose-headers-name-content" class="expose-headers-names-input">
                            <span id="expose-headers-chip-content" class="expose-headers-names-chip"></span>
                            <input id="txt-exposeheaders" autocomplete="off" class="form-control validation-padding txt-holder" placeholder="[[[Enter the list of expose headers separated by commas]]]" maxlength="253">
                        </span>
                    </div>
                    <div class="col-xs-12 no-padding settings-page-fields form-fields-top-margin pre-flight-bottom-margin form-group">
                        <div class="info-label">
                            @Html.Label("pre-flight-max-age", "[[[Preflight Max-Age]]]", new { @class = "app-textbox-label" })
                        </div>
                        <div class="info-message">
                            [[[This field value specifies the maximum time a preflight request's results can be cached.]]]
                        </div>
                        <input type="text" id="txt-preflightmaxage" name="preflight_maxage" class="form-control validation-padding txt-holder" value="@preflightMaxAge" placeholder="[[[Pre flight max age]]]" autocomplete="off" @((bool)!corsSettings.EnableCors ? "disabled" : string.Empty)>
                        <span class="validation-errors"></span>
                    </div>
                </form>
            </div>
            <div class="admin-page-actions col-xs-12 col-md-12">
                <a href="@Url.Action("Index", "Home")" class="secondary-button app-btn-secondary pull-right" id="cancel-site-settings" title="">[[[Cancel]]]</a>
                <button type="button" title="" id="update-cors-settings" name="UpdateSystemSettings" class="primary-button app-btn-primary pull-right">
                    [[[Save]]]
                </button>
            </div>
        </div>
</div>
    <environment include="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/cors-settings.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/cors-settings.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/cors-settings.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/cors-settings.min.js")" crossorigin="anonymous"></script>
    </environment>
}