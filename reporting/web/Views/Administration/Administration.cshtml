@{
    var globalAppSettings = _globalAppSettings;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');

    ViewBag.Title = "[[[Administration]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    ViewBag.MessageBox = false;
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());
    var isADPage = requestUrl.ToString().IndexOf("/administration/user-directory-settings", StringComparison.CurrentCultureIgnoreCase) > 0;
    var isEmailPage = requestUrl.ToString().IndexOf("e-mail-settings", StringComparison.CurrentCultureIgnoreCase) > 0;
    var isAccountsPage = requestUrl.ToString().IndexOf("user-settings", StringComparison.CurrentCultureIgnoreCase) > 0;
    ViewBag.HelpSiteUrl = isEmailPage ? GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.EmailSettings) : isADPage ? GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.AzureAdSettings) :
         isAccountsPage ? GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.AccountSiteSettings) : GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.SiteSettings);
    var isSitesPage = requestUrl.ToString().IndexOf("/administration/site", StringComparison.CurrentCultureIgnoreCase) > 0 || requestUrl.ToString().IndexOf("/administration", StringComparison.CurrentCultureIgnoreCase) > 0;
    var isAzureApplication = ServerAppConfig.IsAzureApplication;
}

@section styles{

    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/site-settings.css" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-database-import.css" />
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/site-settings.min.css" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-database-import.min.css" />
    </environment>
}


@section scripts{

    <script>
        serverApp.controller("adSettingsController", ["$scope", function ($scope) {
            $scope.regex = '^(?!(ftp|https?):\/\/)([a-zA-Z0-9-_]+\.)*[a-zA-Z0-9][a-zA-Z0-9-]+(\.[a-z]{2,6})?(:\d{1,5})?(\/[a-zA-Z0-9]+[a-zA-Z0-9]*(\.[a-z]{2,8})?)*?$';
            $scope.distinguishedNameRegex = /^(\w+[=]{1}[a-zA-Z0-9-_\s]+)([\,{1}]\w+[=]{1}[a-zA-Z0-9-_\s]+)*$/;
        }]);

    </script>

    <script type="text/javascript">
    var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
    var SystemSettingsProperties = @Html.Raw(Json.Serialize(ViewBag.SystemSettings));
    var fileUploadUrl = "@Url.Action("Upload", "fileupload")";
    var updateSystemSettingsUrl = "@Url.Action("UpdateSystemSettings", "Administration")";
    var updateAdSettingsUrl = "@Url.Action("UpdateActiveDirectorySettings", "Administration")";
    var adTestconnectionUrl = "@Url.Action("activedirectorytestconnection", "Administration")";
    var azureadTestconnectionUrl = "@Url.Action("AzureADTestConnection", "Administration")";
    var setLanguageUrl = "@Url.Action("SetLanguage", "Administration")";
    var updateAzureADSettingsUrl = "@Url.Action("UpdateAzureADSettings", "Administration")";
    var saveDbSettingsUrl = "@Url.Action("SaveDatabaseSettings", "Administration")";
    var testConnectionUrl = "@Url.Action("TestDatabaseConnection", "UserManagement")";
    var connectDatabaseUrl = "@Url.Action("ConnectDatabaseToImport", "UserManagement")";
    var getDatabaseUrl = "@Url.Action("GetDatabaseList", "UserManagement")";
    var getTableRelationUrl = "@Url.Action("GetTableRelation", "UserManagement")";
    var addUserDirectoryLogUrl = "@Url.Action("AddSystemLogForUserDirectory", "Administration")";
    var userDirectoryAzure = helpSiteBaseUrl + "/site-settings/azure-active-directory";
    var userDirectoryDatabase = helpSiteBaseUrl + "/site-settings/database-settings";
	var userDirectoryWindows = helpSiteBaseUrl + "/site-settings/windows-ad-settings";
    var userDirectoryAuthControl = helpSiteBaseUrl + "/site-settings/authentication-control";
    var userDirectoryOauth = helpSiteBaseUrl + "/site-settings/oauth-settings";
    var userDirectoryOpenid = helpSiteBaseUrl + "/site-settings/openid-settings";
    var updateauthsettingsUrl = "@Url.Action("UpdateAuthenticationSettings", "Administration")";
    var updateauthcontrolUrl = "@Url.Action("UpdateAuthControl", "Administration")";
    var defaultauthsettingsUrl = "@Url.Action("UpdateDefaultAuthentication", "Administration")";
    var defaultAuthentication = "@(ViewBag.DefaultAuthentication != null ? ViewBag.DefaultAuthentication == 0 ? "" : ViewBag.DefaultAuthentication.ToString() == "CustomOAuth" ? "oauth 2.0" : "openid connect" : string.Empty)";
        var isAzureApplication = "@isAzureApplication".toLowerCase();
        var isSelfHosted = "@ServerAppConfig.IsSelfHosted";

    $(function() {
        $(document).click(function(e){
            if (e.target.id !== "error_icon") {
                $("#ssl-help-message").hide();
            }
        });
    });
    </script>

    <script type="text/javascript">

        $(document)
            .ready(function () {
                var section = window.location.href;
                $(".system-settings-sidebar li").hide();

                if (section.toLowerCase().indexOf("groups") > 0 ||
                    section.toLowerCase().indexOf("users") > 0 ||
                    section.toLowerCase().indexOf("user-management") > 0) {
                    $("li[data-current-content='groups'],li[data-current-content='users']").show();
                } else {
                    $("li[data-current-content='emailsettings'],li[data-current-content='usersettings'],li[data-current-content='general'],li[data-current-content='activedirectorysettings'],li[data-current-content='notificationsettings'],li[data-current-content='usersettings'],li[data-current-content='databasesettings'],li[data-current-content='licensesettings']").show();
                }
                if (section.toLowerCase().indexOf("groups") > 0) {
                    $("li[data-current-content='groups'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("users") > 0 ||
                    section.toLowerCase().indexOf("user-management") > 0) {
                    $("li[data-current-content='users'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("e-mail-settings") > 0) {

                    $("li[data-current-content='emailsettings'] a").addClass('active');
                    $("#look-and-feel-container, #active-directory-container, #database-settings-container, #user-settings-container").hide();
                    $("#mail-settings-container").show();
                } else if (section.toLowerCase().indexOf("user-directory-settings") > 0) {
                    $("li[data-current-content='activedirectorysettings'] a").addClass('active');
                    $("#look-and-feel-container, #mail-settings-container,#database-settings-container, #user-settings-container").hide();
                    $("#active-directory-container").show();
                } else if (section.toLowerCase().indexOf("notification-settings") > 0) {
                    $("li[data-current-content='notificationsettings'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("user-settings") > 0) {
                    $("li[data-current-content='usersettings'] a").addClass('active');
                    $("#look-and-feel-container, #active-directory-container, #database-settings-container, #mail-settings-container").hide();
                    $("#user-settings-container").show();
                } else if (section.toLowerCase().indexOf("database-settings") > 0) {
                    $("li[data-current-content='databasesettings'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("license-settings") > 0) {
                    $("li[data-current-content='licensesettings'] a").addClass('active');
                    $("#mail-settings-container, #active-directory-container, #user-settings-container").hide();
                } else {
                    $("li[data-current-content='general'] a").addClass('active');
                    $("#look-and-feel-container").show();
                    $("#mail-settings-container, #active-directory-container, #database-settings-container, #user-settings-container").hide();
                    addUserDirectoryLog("site");
                }
            });

        function addUserDirectoryLog(tabName) {
            var resultName = "";
            switch (tabName) {
                case "site":
                    resultName = "SiteSettings";
                    break;
                case "windows":
                    resultName = "UserDirectory.Windows";
                    break;
                case "azure":
                    resultName = "UserDirectory.Azure";
                    break;
                case "database":
                    resultName = "UserDirectory.Database";
                    break;
                case "oauth":
                    resultName = "UserDirectory.OAuth2";
                    break;
                case "openid":
                    resultName = "UserDirectory.OpenIDConnect";
                    break;
                case "auth-control":
                    resultName = "UserDirectory.AuthControl";
                    break;
                default:
                    resultName = "";
            }

            $.ajax({
                type: "POST",
                url: addUserDirectoryLogUrl,
                data: { tabName: resultName }
            });
        }
    </script>

<environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/site-settings.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/site-settings.min.js"></script>
    </environment>

}


@section MainSection{
@await Html.PartialAsync("_AdminMenu")
@await Html.PartialAsync("_DialogBox")
@if (isSitesPage && !isADPage)
    {
@await Html.PartialAsync("_SiteSettings")
}
@if (ServerAppConfig.IsSelfHosted)
    {
@await Html.PartialAsync("_EmailSettings")
@await Html.PartialAsync("_AccountSettings")
}
@if (isADPage)
    {
@await Html.PartialAsync("_ActiveDirectorySettings")
}

@if (!ViewBag.ThirdPartyLogins || !ViewBag.WhiteLabel || !ViewBag.CustomDomain)
    {
@await Html.PartialAsync("~/Views/UnlockFeatures/UnlockFeatures.cshtml")
}

 <environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>

}