@using System.Runtime.InteropServices;
@using Syncfusion.Server.Base.Helpers
@using System.Web;

@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = "[[[User Directory Settings]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var ldapRegEx = @"/(?:ldap|http)s?:\/\/(?:(?!.*\d[\/?:])[a-z0-9\-._~%]+|(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\[[a-z0-9\-._~%!$&'()*+,;=:]+\])(?::\d+)?(?:[\/?][\-A-Z0-9+&@#\/%?=~_|$!:,.;]*)?$/i";
    var oauthRegEx = @"/(?:^|[ \t])((https?:\/\/)?(?:localhost|[\w-]+(?:\.[\w-]+)+)(:\d+)?(\/\S*)?)/";
    var authControl = ViewBag.AuthControl as List<TenantAuthControl>;
    authControl = authControl != null && authControl.Count > 0 ? authControl : null;
    var isAzureApplication = ServerAppConfig.IsAzureApplication;
    var enableWindowsAD = RuntimeInformation.IsOSPlatform(OSPlatform.Windows);
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var model = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var isAdmin = _identityResponse.IsAdmin;
    var helpSiteBaseUrl = ServerAppConfig.AppSettings.Documentation.BaseUri;
    var userDirectoryWindowsHelpSiteUrl = helpSiteBaseUrl + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.ADSettings);
    var userDirectoryAzureHelpSiteUrl = helpSiteBaseUrl + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.AzureAdSettings);
    var userDirectoryDatabaseHelpSiteUrl = helpSiteBaseUrl + GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.DatabaseSettings);
    var activeDirectoryUserName = HttpUtility.HtmlDecode(ViewBag.SystemSettings.ActiveDirectoryUserName);
    var serverName = HttpUtility.HtmlDecode(ViewBag.DbSettings.ServerName);
    var databaseName = HttpUtility.HtmlDecode(ViewBag.databaseName);
    var userName = HttpUtility.HtmlDecode(ViewBag.DbSettings.UserName);
    var ldapUrl = HttpUtility.HtmlDecode(ViewBag.SystemSettings.LdapUrl);
    var distinguishedName = HttpUtility.HtmlDecode(ViewBag.SystemSettings.DistinguishedName);
}
<script nonce="@Context.Items["ScriptNonce"]">
    var defaultAuthentication = "";
</script>
@section styles{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/site-settings.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/site-settings.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-database-import.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/user-database-import.css")" crossorigin="anonymous" />
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/site-settings.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/site-settings.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-database-import.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/user-database-import.min.css")" crossorigin="anonymous" />
    </environment>
}
@section scripts{
    <script nonce="@Context.Items["ScriptNonce"]">
        serverApp.controller("adSettingsController", ["$scope", function ($scope) {
            $scope.regex = '^(?!(ftp|https?):\/\/)([a-zA-Z0-9-_]+\.)*[a-zA-Z0-9][a-zA-Z0-9-]+(\.[a-z]{2,6})?(:\d{1,5})?(\/[a-zA-Z0-9]+[a-zA-Z0-9]*(\.[a-z]{2,8})?)*?$';
            $scope.distinguishedNameRegex = /^(\w+[=]{1}[a-zA-Z0-9-_\s]+)([\,{1}]\w+[=]{1}[a-zA-Z0-9-_\s]+)*$/;
        }]);

    </script>
    <script nonce="@Context.Items["ScriptNonce"]">
        var itemInfoCtrl = angular.element('[ng-controller=adSettingsController]').scope();
        var defaultAuthentication = "";
        var updateAdSettingsUrl = "@Url.Action("UpdateActiveDirectorySettings", "Administration")";
        var adTestconnectionUrl = "@Url.Action("activedirectorytestconnection", "Administration")";
        var azureadTestconnectionUrl = "@Url.Action("AzureADTestConnection", "Administration")";
        var updateAzureADSettingsUrl = "@Url.Action("UpdateAzureADSettings", "Administration")";
        var saveDbSettingsUrl = "@Url.Action("SaveDatabaseSettings", "Administration")";
        var testConnectionUrl = "@Url.Action("TestDatabaseConnection", "UserManagement")";
        var connectDatabaseUrl = "@Url.Action("ConnectDatabaseToImport", "UserManagement")";
        var getDatabaseUrl = "@Url.Action("GetDatabaseList", "UserManagement")";
        var getTableRelationUrl = "@Url.Action("GetTableRelation", "UserManagement")";
        var addUserDirectoryLogUrl = "@Url.Action("AddSystemLogForUserDirectory", "Administration")";
        var userDirectoryAzure = "@userDirectoryAzureHelpSiteUrl";
        var userDirectoryDatabase = "@userDirectoryDatabaseHelpSiteUrl";
        var userDirectoryWindows = "@userDirectoryWindowsHelpSiteUrl";
        var SystemSettingsProperties = @Json.Serialize(ViewBag.SystemSettings);
        var isAzureApplication = @Json.Serialize(isAzureApplication);
        var enableWindowsAD = @Json.Serialize(enableWindowsAD);
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/javascript">

        $(document)
            .ready(function () {
                var section = window.location.href;                
                $(".system-settings-sidebar li").hide();

                if (section.toLowerCase().indexOf("groups") > 0 ||
                    section.toLowerCase().indexOf("users") > 0 ||
                    section.toLowerCase().indexOf("user-management") > 0) {
                    $("li[data-current-content='groups'],li[data-current-content='users']").show();
                } else {
                    $("li[data-current-content='emailsettings'],li[data-current-content='usersettings'],li[data-current-content='general'],li[data-current-content='activedirectorysettings'],li[data-current-content='notificationsettings'],li[data-current-content='usersettings'],li[data-current-content='databasesettings'],li[data-current-content='licensesettings']").show();
                }
                if (section.toLowerCase().indexOf("groups") > 0) {
                    $("li[data-current-content='groups'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("users") > 0 ||
                    section.toLowerCase().indexOf("user-management") > 0) {
                    $("li[data-current-content='users'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("e-mail-settings") > 0) {
                    $("li[data-current-content='emailsettings'] a").addClass('active');
                    $("#look-and-feel-container, #active-directory-container, #database-settings-container, #user-settings-container").hide();
                    $("#mail-settings-container").show();
                } else if (section.toLowerCase().indexOf("user-settings") > 0) {
                    $("li[data-current-content='usersettings'] a").addClass('active');
                    $("#look-and-feel-container, #active-directory-container, #database-settings-container, #mail-settings-container").hide();
                    $("#user-settings-container").show();
                } else if (section.toLowerCase().indexOf("user-directory-settings") > 0) {
                    $("li[data-current-content='activedirectorysettings'] a").addClass('active');
                    $("#look-and-feel-container, #mail-settings-container,#database-settings-container, #user-settings-container").hide();
                    $("#active-directory-container").show();
                } else if (section.toLowerCase().indexOf("notification-settings") > 0) {
                    $("li[data-current-content='notificationsettings'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("database-settings") > 0) {
                    $("li[data-current-content='databasesettings'] a").addClass('active');
                } else if (section.toLowerCase().indexOf("license-settings") > 0) {
                    $("li[data-current-content='licensesettings'] a").addClass('active');
                    $("#mail-settings-container, #active-directory-container, #user-settings-container").hide();
                } else {
                    $("li[data-current-content='general'] a").addClass('active');
                    $("#look-and-feel-container").show();
                    $("#mail-settings-container, #active-directory-container, #database-settings-container, #user-settings-container").hide();
                    addUserDirectoryLog("site");
                }
                if (!section.includes('?')) {
                    var defaultVisibleTab = $("#ad-tab-nav li.active a").attr("id");

                    if (defaultVisibleTab == ("windows-ad")) {
                        history.pushState(null, '', '?tab=windows-ad');
                    } else if (defaultVisibleTab == ("azure-ad")) {
                        history.pushState(null, '', '?tab=azure-ad');
                    } else if (defaultVisibleTab == ("database-settings")) {
                        history.pushState(null, '', '?tab=database-settings');
                    }
                }                
            });

        function addUserDirectoryLog(tabName) {
            var resultName = "";
            switch (tabName) {
                case "site":
                    resultName = "SiteSettings";
                    break;
                case "windows":
                    resultName = "UserDirectory.Windows";
                    break;
                case "azure":
                    resultName = "UserDirectory.Azure";
                    break;
                case "database":
                    resultName = "UserDirectory.Database";
                    break;
                default:
                    resultName = "";
            }
            $.ajax({
                type: "POST",
                url: addUserDirectoryLogUrl,
                data: { tabName: resultName }
            });
        }
    </script>
    <environment include="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/site-settings.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/site-settings.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/site-settings.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/site-settings.min.js")" crossorigin="anonymous"></script>
    </environment>
}

@section MainSection{
    @await Html.PartialAsync("_AdminMenu")
    <div id="active-directory-container" role="tabpanel" class="col-xs-12 admin-page-container @(ViewBag.ThirdPartyLogins ? string.Empty : "unlock-enterprise-features blur-content")" aria-labelledby="active-directory-settings-link" ng-controller="adSettingsController">

        <div class="col-md-12 import-area admin-page-header">
            <hgroup class="col-lg-6 col-md-6 col-sm-6 col-xs-12 no-padding">
                <h1 class="h2 page-title">[[[USER DIRECTORIES]]]</h1>
                <h5 class="page-description">[[[Configure external user directories.]]]</h5>
            </hgroup>
            @if (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.UserDirectorySettings])))
            {
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 no-padding">
                    <button class="dropdown-toggle primary-button app-btn-primary pull-right" data-toggle="dropdown" id="schedule-synchronization" title="[[[Synchronize schedules]]]">
                        <span>[[[Synchronization]]] </span>
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu multi-level pull-right" role="menu" id="synchronization-options">
                        @if (ServerAppConfig.IsSelfHosted && !isAzureApplication && enableWindowsAD)
                        {
                            <li>
                                <a href="@Url.Action("ScheduleSynchronization", "Administration")" data-toggle="tooltip" data-placement="left" data-container="body" title="[[[Synchronize Active Directory users and groups on a regular schedule]]]">
                                    <span>[[[AD Schedule Synchronization]]]</span>
                                </a>
                            </li>
                        }
                        <li>
                            <a href="@Url.Action("ScheduleAzureSynchronization", "Administration")" data-toggle="tooltip" data-placement="left" title="[[[Synchronize Azure AD users and groups on a regular schedule]]]">
                                <span>[[[Azure AD Schedule Synchronization]]]</span>
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("ScheduleDatabaseSynchronization", "Administration")" data-toggle="tooltip" data-placement="left" title="[[[Synchronize users and groups from database on a regular schedule]]]">
                                <span>[[[Database Schedule Synchronization]]]</span>
                            </a>
                        </li>
                    </ul>
                </div>
            }

        </div>

        <div>
            <ul id="ad-tab-nav" class="nav nav-tabs" role="tablist">
                @if (ServerAppConfig.IsSelfHosted && !isAzureApplication && enableWindowsAD && (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.UserDirectorySettings]))))
                {
                    <li role="presentation" class="active">
                        <a href="#windows-ad-tab" id="windows-ad" aria-controls="windows-ad-tab" role="tab" data-toggle="tab">[[[Windows Active Directory]]]</a>
                    </li>
                }
                @if (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.UserDirectorySettings])))
                {
                    <li role="presentation" class="@(!ServerAppConfig.IsSelfHosted ? "active" : ServerAppConfig.IsSelfHosted && isAzureApplication ? "active" : !enableWindowsAD ? "active" : string.Empty )">
                        <a href="#azure-ad-tab" id="azure-ad" aria-controls="azure-ad-tab" role="tab" data-toggle="tab">[[[Azure Active Directory]]]</a>
                    </li>
                    <li role="presentation">
                        <a href="#database-settings-tab" id="database-settings" aria-controls="database-settings-tab" role="tab" data-toggle="tab">[[[Database]]]</a>
                    </li>
                }
            </ul>

            <div class="tab-content">
                @if (ServerAppConfig.IsSelfHosted && !isAzureApplication && enableWindowsAD && (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.UserDirectorySettings]))))
                {
                    <div role="tabpanel" class="tab-pane active" id="windows-ad-tab">
                        <form autocomplete="off" class="active-directory-form col-lg-12 admin-page-body" name="windowsAdSettingsForm" enctype="multipart/form-data" id="active-directory-setting" method="post">
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    @Html.Label("username", "[[[Username]]]", new { @class = "app-textbox-label col-md-4 no-margin" })

                                    <div class="col-md-8 no-margin form-input-field" ng-class="(windowsAdSettingsForm.userName.$dirty && windowsAdSettingsForm.userName.$invalid) ? 'has-error' : ''">
                                        <input type="text" class="form-control col-md-6 no-margin" name="userName" placeholder="[[[Username]]]" id="username" ng-model="windowsAduserName" ng-init="windowsAduserName='@activeDirectoryUserName'" required />
                                        <span class="validation-message" ng-show="windowsAdSettingsForm.userName.$dirty && windowsAdSettingsForm.userName.$invalid">[[[Please enter username]]]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    @Html.Label("password", "[[[Password]]]", new { @class = "app-textbox-label col-md-4 no-margin" })
                                    <div class="col-md-8 no-margin form-input-field" ng-class="(windowsAdSettingsForm.passWord.$dirty && windowsAdSettingsForm.passWord.$invalid) ? 'has-error' : ''">
                                        <input type="text" style="display: none;">
                                        <input style="visibility: hidden; position: absolute; left: -99999px" type="password" name="fake_passwordfield_to_turnoff_autocomplete">
                                        <input type="password" class="form-control col-md-6 no-margin" value="" name="passWord" placeholder="&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;" id="password" ng-model="passWord" required />
                                        <div class="show-hide-password su su-eye"></div>
                                        <span class="validation-message" ng-show="windowsAdSettingsForm.passWord.$dirty && windowsAdSettingsForm.passWord.$invalid">[[[Please enter password]]]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    @Html.Label("ldapurl", "[[[LDAP URL]]](LDAP://)", new { @class = "app-textbox-label col-md-4 no-margin" })
                                    <div class="col-md-8 no-margin form-input-field" ng-class="(windowsAdSettingsForm.ldapUrl.$dirty && windowsAdSettingsForm.ldapUrl.$invalid) ? 'has-error' : ''">
                                        <input type="text" class="form-control col-md-6 no-margin" name="ldapUrl" placeholder="[[[LDAP URL]]]" id="ldapurl" ng-model="windowsLdapUrl" ng-init="windowsLdapUrl='@ldapUrl'" ng-pattern="@ldapRegEx" required />
                                        <span class="validation-message" ng-show="windowsAdSettingsForm.ldapUrl.$error.required && windowsAdSettingsForm.ldapUrl.$dirty ">[[[Please enter LDAP URL]]]</span>
                                        <span class="validation-message" ng-show="windowsAdSettingsForm.ldapUrl.$error.pattern ">[[[Invalid LDAP URL]]]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    @Html.Label("distinguished-name", "[[[Distinguished Name]]]", new { @class = "app-textbox-label col-md-4 no-margin" })
                                    <div class="col-md-8 no-margin form-input-field" ng-class="(windowsAdSettingsForm.distinguishedName.$dirty && windowsAdSettingsForm.distinguishedName.$invalid) ? 'has-error' : ''">
                                        <input type="text" class="form-control col-md-6 no-margin" name="distinguishedName" placeholder="[[[DC=example,DC=com]]]" id="distinguished-name" ng-model="windowsDistinguishedName" ng-init="windowsDistinguishedName='@distinguishedName'" ng-pattern="distinguishedNameRegex" required />
                                        <span class="validation-message" ng-show="windowsAdSettingsForm.distinguishedName.$error.required && windowsAdSettingsForm.distinguishedName.$dirty ">[[[Please enter Distinguished Name]]]</span>
                                        <span class="validation-message" ng-show="windowsAdSettingsForm.distinguishedName.$error.pattern ">[[[Invalid Distinguished Name]]]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin enablesslcontainer">
                                    @Html.Label("enable-ldap-ssl", "[[[Enable SSL]]]", new { @class = "app-textbox-label col-md-4 no-margin" })

                                    <div class="col-md-8 form-input-field pull-left switch-align">
                                        <span class="material-switch text-left">
                                            <input type="checkbox" id="enable-ldap-ssl" name="enablessl" @((bool)ViewBag.SystemSettings.EnableSsl ? "checked" : string.Empty) />
                                            <label for="enable-ldap-ssl" class="label-primary"></label>
                                        </span>
                                        <span class="validation-message"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    @Html.Label("ldap-port-number", "[[[Port Number]]]", new { @class = "app-textbox-label col-md-4 no-margin" })

                                    <div class="col-md-8 no-margin form-input-field" ng-class="(windowsAdSettingsForm.portNo.$dirty && windowsAdSettingsForm.portNo.$invalid) ? 'has-error' : ''">
                                        <input type="text" class="form-control col-md-6 no-margin" name="portNo" placeholder="[[[Port Number]]]" id="ldap-port-number" ng-model="windowsPortNo" ng-init="windowsPortNo='@ViewBag.SystemSettings.PortNo'" required />
                                        <span class="port-number-info">(Default: SSL: 636, Non-SSL: 389)</span>
                                        <span class="validation-message" ng-show="windowsAdSettingsForm.portNo.$dirty && windowsAdSettingsForm.portNo.$invalid">[[[Please enter Port Number]]]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-margin no-padding">
                                    <input type="button" onclick="ActiveDirectoryFormValidate()" class="primary-button app-btn-primary pull-right test-connection" data-toggle="tooltip" data-placement="top" data-container="body" title="[[[Test Active Directory Connection]]]" value="[[[Test Connection]]]" ng-disabled="windowsAdSettingsForm.$invalid" />
                                </div>
                                <div class="col-md-6 error-message" style="display: none"></div>
                                <div class="col-md-6 success-message" style="display: none"></div>
                            </div>
                        </form>
                    </div>
                }
                @if (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.UserDirectorySettings])))
                {
                    <div role="tabpanel" class="tab-pane @(!ServerAppConfig.IsSelfHosted ? "active" : ServerAppConfig.IsSelfHosted && isAzureApplication ? "active" : !enableWindowsAD ? "active" : string.Empty)" id="azure-ad-tab">
                        <form id="azure-ad-setting" name="azureAdSettingsForm" class="admin-page-body" method="post" enctype="multipart/form-data" autocomplete="off">
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    <label class="app-textbox-label col-md-4 no-margin">[[[Tenant Name]]]</label>
                                    <div class="col-md-8 no-margin form-input-field" ng-class="(azureAdSettingsForm.tenantName.$dirty && azureAdSettingsForm.tenantName.$invalid) ? 'has-error' : ''">
                                        <input type="text" class="form-control col-md-6 no-margin" ng-model="azureTenantName" ng-init="azureTenantName='@ViewBag.AzureADSetting.TenantName'" name="tenantName" placeholder="example.onmicrosoft.com" id="tenantName" ng-pattern="regex" required />
                                        <span class="validation-message" ng-show="azureAdSettingsForm.tenantName.$error.required && azureAdSettingsForm.tenantName.$dirty ">[[[Please enter tenant name]]]</span>
                                        <span class="validation-message" ng-show="azureAdSettingsForm.tenantName.$error.pattern ">[[[Please enter valid URL]]]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    <label class="app-textbox-label col-md-4 no-margin">[[[Client Id]]]</label>
                                    <div class="col-md-8 no-margin form-input-field" ng-class="(azureAdSettingsForm.clientId.$dirty && azureAdSettingsForm.clientId.$invalid) ? 'has-error' : ''">
                                        <input type="text" class="form-control col-md-6 no-margin" ng-model="azureClientId" name="clientId" ng-init="azureClientId='@ViewBag.AzureADSetting.ClientId'" placeholder="[[[Client Id]]]" id="clientId" required />
                                        <span class="validation-message" ng-show="azureAdSettingsForm.clientId.$dirty && azureAdSettingsForm.clientId.$invalid">[[[Please enter client id]]]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin">
                                    <label class="app-textbox-label col-md-4 no-margin">[[[Client Secret Code]]]</label>
                                    <div class="col-md-8 no-margin form-input-field" ng-class="(azureAdSettingsForm.clientKey.$dirty && azureAdSettingsForm.clientKey.$invalid) ? 'has-error' : ''">
                                        <input type="text" style="display: none;">
                                        <input style="visibility: hidden; position: absolute; left: -99999px" type="password" name="fake_passwordfield_to_turnoff_autocomplete">
                                        <input type="password" class="form-control col-md-6 no-margin" value="" ng-model="azureClientKey" name="clientKey" placeholder="&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;" id="clientKey" required />
                                        <div class="show-hide-password su su-eye"></div>
                                        <span class="validation-message" ng-show="azureAdSettingsForm.clientKey.$dirty && azureAdSettingsForm.clientKey.$invalid">[[[Please enter client key]]]</span>
                                    </div>
                                </div>
                            </div>
                          @if (ServerAppConfig.IsSelfHosted)
                          {
                            <div class="col-md-12 form-group">
                                <div class="col-md-6 no-padding no-margin enablesslcontainer">
                                    <label class="app-textbox-label col-md-4 no-margin">[[[Delete Group Users]]]</label>
                                    <div class="col-md-8 form-input-field pull-left switch-align">
                                        <span class="material-switch text-left">
                                            <input type="checkbox" id="delete-group-users" name="deletegroupusers" @((bool)ViewBag.AzureADSetting.DeleteGroupUsers ? "checked" : string.Empty) />
                                            <label for="delete-group-users" class="label-primary"></label>
                                        </span>
                                        <span class="validation-message"></span>
                                    </div>
                                </div>
                            </div>
                           }
                            @if (ViewBag.ThirdPartyLogins)
                            {
                                <div class="col-md-12">
                                    <div class="col-md-6 no-padding no-margin">
                                        <input type="button" id="testAzureConnection" ng-disabled="azureAdSettingsForm.$invalid" onclick="AzureADFormValidate()" class="primary-button app-btn-primary test-connection pull-right" title="[[[Test Azure Active Directory Connection]]]" value="[[[Test Connection]]]" />
                                    </div>
                                    <div class="col-md-6 error-message" style="display: none"></div>
                                    <div class="col-md-6 success-message" style="display: none"></div>
                                </div>
                            }
                        </form>
                    </div>
                }
                @if (isAdmin || (model != null && (model[SettingsScopes.All] || model[SettingsScopes.UserDirectorySettings])))
                {
                    <div role="tabpanel" class="tab-pane" id="database-settings-tab">
                        <div id="import-database-container" class="">
                            <div class="col-lg-12 connection-properties-form admin-page-body">
                                <div id="connect-properties">
                                    <form class="no-padding form-horizontal" method="post">
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <div id="databasetype-holder" class="no-padding">
                                                    <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                        [[[Database type]]]
                                                    </label>
                                                    <div class="col-md-8 connect-database-padding txt-holder">
                                                        <select id="database-type" class="selectpicker">
                                                            @if (ViewBag.DbSettings.DatabaseName != null)
                                                            {
                                                                if (ViewBag.DbSettings.ServerType.ToString() == "MSSQL")
                                                                {
                                                                    <option value="MSSQL" selected="selected">[[[SQL Server]]]</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="MSSQL">[[[SQL Server]]]</option>
                                                                }
                                                                if (ViewBag.DbSettings.ServerType.ToString() == "PostgreSQL")
                                                                {
                                                                    <option value="PostgreSQL" selected="selected">[[[PostgreSQL]]]</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="PostgreSQL">[[[PostgreSQL]]]</option>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <option value="MSSQL">[[[SQL Server]]]</option>
                                                                <option value="PostgreSQL">[[[PostgreSQL]]]</option>
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                    <form id="sql-content-holder" class="no-padding content-display show-sql-content form-horizontal" method="post">
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">

                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Server name]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" id="txt-servername" name="servername" class="form-control" placeholder="[[[Server name]]]" value="@serverName" />
                                                    <span class="validation-txt-errors"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Authentication]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <select id="check-windows" class="selectpicker">
                                                        @if (ViewBag.DbSettings.AuthenticationType == AuthenticationType.SqlServer)
                                                        {
                                                            <option value="sql" selected="selected">[[[SQL authentication]]]</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="sql">[[[SQL authentication]]]</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Username]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" id="txt-login" name="username" class="form-control" placeholder="[[[Username]]]" value="@userName" />
                                                    <span class="validation-txt-errors"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Password]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" style="display: none;">
                                                    <input type="password" id="txt-password-db" name="password" class="form-control" placeholder="&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;" autocomplete="off" />
                                                    <span id="password-field" class="validation-txt-errors"></span>
                                                    <div class="su su-eye show-hide-password"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Database name]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" id="txt-dbname" name="dbname" class="form-control system-settings-startup-page-fields dbname-fields db-fields" value="@databaseName" placeholder="[[[Existing Database name]]]" autocomplete="off">
                                                    <div class="loader-blue loader-icon database-select-loader-icon display-none " id="sql-loader-icon">
                                                        <svg class="circular">
                                                            <circle class="path" cx="27" cy="27" r="20" fill="none" stroke-width="4" stroke-miterlimit="10"></circle>
                                                        </svg>
                                                    </div>
                                                    <span class="validation-txt-errors"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 form-group">
                                            @Html.Label("secure-sql-connection", "[[[Enable SSL]]]", new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4" })
                                            <div class="form-input-field col-lg-4 col-md-5 col-sm-6 col-xs-8 switch-align">
                                                <span class="material-switch text-left">
                                                    <input type="checkbox" id="secure-sql-connection" name="secure-sql-connection" @((bool)@ViewBag.DbSettings.SslEnabled ? "checked" : string.Empty) />
                                                    <label for="secure-sql-connection" class="label-primary"></label>
                                                </span>
                                            </div>
                                        </div>
                                    </form>
                                    <form id="postgresql-content-holder" class="no-padding content-display show-postgresql-content form-horizontal" method="post">
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Server name]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" id="postgresql-servername" name="servername" class="form-control" placeholder="[[[Server name]]]" value="@ViewBag.DbSettings.ServerName" />
                                                    <span class="validation-txt-errors"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Port]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" id="postgresql-port" name="port" class="form-control" placeholder="[[[Port]]]" value="@ViewBag.DbSettings.Port" />
                                                    <span class="validation-txt-errors"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Username]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" id="postgresql-login" name="username" class="form-control" placeholder="[[[Username]]]" value="@userName" />
                                                    <span class="validation-txt-errors"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Password]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" style="display: none;">
                                                    <input type="password" id="postgresql-password-db" name="password" class="form-control" placeholder="&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;" autocomplete="off" />
                                                    <span id="password-field" class="validation-txt-errors"></span>
                                                    <div class="su su-eye show-hide-password"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 form-group">
                                            <div class="col-md-6 no-padding no-margin">
                                                <label class="col-md-4 connect-database-padding txt-holder app-textbox-label">
                                                    [[[Database name]]]
                                                </label>
                                                <div class="col-md-8 connect-database-padding txt-holder">
                                                    <input type="text" id="postgresql-dbname" name="dbname" class="form-control system-settings-startup-page-fields dbname-fields db-fields" value="@databaseName" placeholder="[[[Existing Database name]]]" autocomplete="off">
                                                    <div class="loader-blue loader-icon database-select-loader-icon display-none " id="postgresql-loader-icon">
                                                        <svg class="circular">
                                                            <circle class="path" cx="27" cy="27" r="20" fill="none" stroke-width="4" stroke-miterlimit="10"></circle>
                                                        </svg>
                                                    </div>
                                                    <span class="validation-txt-errors"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group">
                                            @Html.Label("secure-postgresql-connection", "[[[Enable SSL]]]", new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4" })
                                            <div class="form-input-field col-lg-4 col-md-5 col-sm-6 col-xs-8 switch-align">
                                                <span class="material-switch text-left">
                                                    <input type="checkbox" id="secure-postgresql-connection" name="secure-postgresql-connection" @((bool)@ViewBag.DbSettings.SslEnabled ? "checked" : string.Empty) />
                                                    <label for="secure-postgresql-connection" class="label-primary"></label>
                                                </span>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                @if (ViewBag.ThirdPartyLogins)
                                {
                                    <div class="col-md-12 connection-properties-form">
                                        <div class="col-md-6">
                                            <button type="button" id="test-connection" class="primary-button app-btn-primary pull-right" disabled="disabled">[[[Test Connection]]]</button>
                                        </div>
                                        <div class="col-md-6 text-left connection-validation">
                                            <span id="test-connection-validation"></span>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div id="selected-schema-container" class="col-xs-12 selected-schema-container admin-page-body" style="display: none">
                            </div>
                        </div>
                    </div>

                }

                <div id="select-existing-join">
                    <div class="col-xs-12 no-padding">
                        <div class="col-xs-12 no-padding">
                            <h3>[[[Select Relation]]]</h3>
                        </div>
                        <div class="col-xs-12 no-padding table-content">
                            <table class="relation-list"></table>
                        </div>
                    </div>
                    <div class="col-xs-12 btn-relation-holder">
                        <button type="button" id="select-relation" class="primary-button app-btn-primary pull-right">[[[Apply]]]</button>
                    </div>
                </div>

                <div id="get-join-details">
                    <div class="col-xs-12 no-padding">
                        <div class="col-xs-12 no-padding">
                            <span class="join-dialog-title">[[[Form Relation]]]</span>
                        </div>
                        <div class="col-xs-12 no-padding relation-select-content">
                            <div class="col-xs-5 no-padding">
                                <h5>[[[Left table]]]</h5>
                                <div class="col-xs-12 no-padding">
                                    <select id="left-table-selection" class="selectpicker"></select>
                                </div>
                                <div id="left-table-columnlist" class="col-xs-12 no-padding column-list">
                                    <ul></ul>
                                </div>
                            </div>
                            <div class="col-xs-2 no-padding">
                                <div id="join-type-holder">
                                    <select id="join-type" class="selectpicker">
                                        <option value="inner join">[[[Inner Join]]]</option>
                                        <option value="left join">[[[Left Join]]]</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-xs-5 no-padding">
                                <h5>[[[Right table]]]</h5>
                                <div class="col-xs-12 no-padding">
                                    <select id="right-table-selection" class="selectpicker" disabled="disabled"></select>
                                </div>
                                <div id="right-table-columnlist" class="col-xs-12 no-padding column-list">
                                    <ul></ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 btn-relation-holder">
                        <button type="button" id="apply-relation" class="primary-button app-btn-primary pull-right" disabled="disabled">[[[Apply]]]</button>
                    </div>
                </div>

            </div>
        </div>

        @if (ViewBag.ThirdPartyLogins)
        {
            <div class="admin-page-actions col-lg-12 col-md-12">
                <a href="@Url.Action("Index","Home")" class="secondary-button app-btn-secondary pull-right" id="cancel-active-dir-settings" title="">[[[Cancel]]]</a>
                @if (!isAzureApplication && enableWindowsAD)
                {
                    <button type="button" title="" id="update-active-dir-settings" name="UpdateSystemSettings" class="primary-button app-btn-primary pull-right update-system-settings  @(!ServerAppConfig.IsSelfHosted ? " hidden" : string.Empty )" ng-disabled="windowsAdSettingsForm.$invalid" ng-click="">[[[Save]]]</button>
                }
                <button type="button" title="" id="UpdateAzureADSettings-bottom" name="UpdateSystemSettings" class="primary-button app-btn-primary pull-right @(ServerAppConfig.IsSelfHosted ? " hidden" : string.Empty)" ng-disabled="azureAdSettingsForm.$invalid" ng-click="" style="display:none">[[[Save]]]</button>
                <button type="button" title="" id="save-db-settings" disabled="disabled" name="UpdateSystemSettings" class="primary-button app-btn-primary pull-right" style="display:none">[[[Save]]]</button>
                <button type="button" id="connect-database" class="primary-button app-btn-primary pull-right connect-database-button" disabled="disabled" style="display:none">[[[Next]]]</button>
                <button type="button" id="change-connection" class="primary-button app-btn-primary  pull-right" style="display:none">[[[Back]]]</button>
            </div>
        }

    </div>
}
