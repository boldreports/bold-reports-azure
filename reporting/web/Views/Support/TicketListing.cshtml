@inject ServerPrincipal _identityResponse
@{
    var userId = _identityResponse.User.UserId;
    var isMobile = new DeviceDetection(Context).IsMobile;
    var idPAvatarUrl = ServerAppConfig.InternalAppIdpUrl + "/User/Avatar";
    var globalAppSettings = _globalAppSettings;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    ViewBag.Title = "[[[Support Incidents]]] - Syncfusion Dashboards";
    ViewBag.helpSiteUrl = "/?id=3&mode=cloud";
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/list-tickets.css" />
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/list-tickets.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/list-tickets.min.css" />
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/list-tickets.min.js"></script>
    </environment>
    <script>
        var uploadDashboardUrl = "@Url.Action("AddDashboard", "SharedDashboard")";
        var updateDashboardUrl =  "@Url.Action("UpdateDashboard", "SharedDashboard")";
        var fileUploadUrl = "@Url.Action("Upload", "fileupload")";
        var getSharedDashboardDetailsUrl = "@Url.Action("GetSharedDashboardDetails", "SharedDashboard")";
    </script>

    <script type="text/x-jsrender" id="incident-item">
        <a href="@Url.Action("ViewIncident", "Support")/{{:IncidentId}}">
            <div class="col-lg-12 col-md-12 col-sm-12 info-template">
                <h3 class="ticket-title">
                    <b>{{:Title}}</b>
                </h3>
                <div class="ticket-message">
                    {{:Message}}
                </div>
                <div>
                    <ul class="list-inline info-area">
                        <li>
                            <b>#{{:IncidentId}}</b>
                        </li>
                        <li>
                            <span class="divider-margin">/</span>
                        </li>
                        <li>
                            <span>{{:CreatedDate}}</span>
                        </li>
                        <li>
                            <span class="divider-margin">/</span>
                        </li>
                        <li>
                            {{if Status == "OPEN" || Status == "Customer Open"}}
                            <span class="status open-status">[[[OPEN]]]</span>
                            {{else Status == "CLOSED"}}
                            <span class="status closed-status">[[[CLOSED]]]</span>
                            {{/if}}
                        </li>
                    </ul>
                </div>
            </div>
        </a>
    </script>

    <script type="text/javascript" language="javascript">

        var filters = { filterType: "menu" };

    $(document).ready(function () {
        ej.support.enableLocalizedSort = true;
        $("#items").ejGrid({
            dataSource: ej.DataManager({ url: "@Url.Action("ListTickets", "Support")", adaptor: "UrlAdaptor" }),
            gridLines: ej.Grid.GridLines.None,
            allowPaging: true,
            pageSettings: { pageSize: 20 },
            enableAltRow: false,
            allowFiltering: false,
            allowSelection: false,
            allowPaging: true,
            filterSettings: filters,
            actionComplete: "fnActionComplete",
            enableRowHover: false,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: ej.Grid.WrapMode.Both },
            dataBound: function (args) {
                $('[data-toggle="tooltip"]').tooltip();
            },
            columns: [
                {
                    template: true,
                    headerTemplateID: "#incidentheader",
                    templateID: "#incident-item",
                    width: 400,
                    allowFiltering: true
                }
            ]
        });
        });

        function fnActionComplete() {
            var value = "";
            value = $("#items").ejGrid("option", "pageSettings.totalRecordsCount");
            if (value != null)
            {
                document.getElementById("ticket-count").innerText = "(" + value + ")";
            }

            setTimeout(function () {
                $("#items .e-table tr .info-template").last().css("border", "none");
            }, 300);
        }
    </script>
}
@section MainSection{

    @await Html.PartialAsync("~/Views/User/_ProfileMenu.cshtml")
    <div id="tickets-container" class="admin-page-container">
        <div class="admin-page-header col-xs-12">
            <hgroup class="col-xs-8 no-padding">
                <h1 class="page-title">[[[SUPPORT INCIDENTS]]]<span id="ticket-count"></span></h1>
            </hgroup>
            @*<button type="button" id="create-ticket-button" class="ticket-button pull-right" onclick="openSupportDialog(); isToRefreshGrid = true;">[[[Create Incident]]]</button>*@
        </div>
        <div class="tickets-grid-container admin-page-body">
            <div id="items" class="item-grid">
            </div>
        </div>
    </div>
}
