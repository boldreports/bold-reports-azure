@using System.Configuration
@using Syncfusion.Server.Base.Helpers

@{
    Layout = null;
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = "[[[Access Denied]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var cdnLink = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var ipAddress = Context.Connection.RemoteIpAddress;
    var embedConfig = ViewBag.EmbedConfig as EmbedConfig;
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());
    bool isEmbedSignature = Convert.ToBoolean(requestUrl.Query.ToLower().Contains("embed_signature"));
    bool isEmbedUserToken = Convert.ToBoolean(requestUrl.Query.ToLower().Contains("embed_user_token"));
    var isEmbedExpired = ViewBag.IsEmbedExpired == null ? false : ViewBag.IsEmbedExpired;
    var nonce = ViewBag.Nonce == null ? false : ViewBag.Nonce;
    var isEmbedEnabled = ViewBag.IsEmbedEnabled == null ? false : ViewBag.IsEmbedEnabled;
    var accessPermission = ViewBag.NoAccess == null ? false : ViewBag.NoAccess;
    var publishedItemIsLocked = ViewBag.IsPublishedItemLocked == null ? false : ViewBag.IsPublishedItemLocked;
    var publishedDatasetIsLocked = ViewBag.IsDatasetLocked == null ? false : ViewBag.IsDatasetLocked;
    var reportServerResourceUrl = string.Empty;
    if (ServerAppConfig.IsSelfHosted)
    {
        reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    }
    else
    {
        reportServerResourceUrl = ServerAppConfig.AppSettings.EndPoints.CdnLink.TrimEnd('/');
    }
    var faviconFallbackPath = reportServerResourceUrl + "/cdn/images/application/" + ServerAppConfig.AppSettings.AppBranding.Identifier + "/" + IconFileNames.Favicon;
    var loginLogoFallbackPath = reportServerResourceUrl + "/cdn/images/application/" + ServerAppConfig.AppSettings.AppBranding.Identifier + "/" + IconFileNames.LoginLogo;
}
<!DOCTYPE html>
<html class="report-server">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/theme/light.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/theme/light.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/layout.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/layout.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/error-page-new.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/error-page-new.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@ServerAppConfig.CustomFontUrl(globalAppSettings?.SystemSettings?.FontPreference, reportServerResourceUrl)" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/error-page.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/error-page.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/theme/light.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/theme/light.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/layout.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/layout.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/error-page-new.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/error-page-new.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@ServerAppConfig.CustomFontUrl(globalAppSettings?.SystemSettings?.FontPreference, reportServerResourceUrl)" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/error-page.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/error-page.min.js")" crossorigin="anonymous"></script>
    </environment>
    <script nonce="@Context.Items["ScriptNonce"]">
        var setPermissionUrl = "@Url.Action("SetCookieStoragePermission", "Accounts")";

        document.addEventListener("DOMContentLoaded", function () {
            var faviconLinkElement = document.getElementById("favicon-link");
            var fallbackFaviconPath = '@faviconFallbackPath';
            var fallbackImagePath = '@loginLogoFallbackPath';
            var loginLogoImageElement = document.getElementById("login-logo-error-image");
            var faviconValidationImageObj = new Image();
            faviconValidationImageObj.src = faviconLinkElement.href;

            faviconValidationImageObj.addEventListener("error", function () {
                faviconLinkElement.href = fallbackFaviconPath;
            });
            loginLogoImageElement.addEventListener("error", function () {
                this.src = fallbackImagePath;
            });
        });
    </script>
    <link rel="icon" href="@globalAppSettings.SystemSettings.FavIcon" id="favicon-link" />
    @await Html.PartialAsync("~/Views/Shared/_LoaderIcon.cshtml")
</head>
<body class="error-full-content">
    <div class="error-page-outer">
        <div class="error-page-content">
            <div class="error-inside">
                <div class="error-image-center-1">
                    <img src="@globalAppSettings.SystemSettings.LoginLogo" id="login-logo-error-image" class="error-image-1">
                </div>
                <div class="error-image-center-2">
                    <img src="@GlobalAppSettings.CdnDomain/static/error-pages/v1/access-denied.svg" class="error-image-2">
                </div>
                <div class="error-type">[[[Access Denied]]]</div>
                @if (publishedItemIsLocked)
                {
                    <div class="error-text">
                        [[[Editing access is denied because the report was published from another site and editing has been disabled.]]] <br> [[[Please contact the site administrator for help.]]]
                    </div>
                }
                else if (publishedDatasetIsLocked)
                {
                    <div class="error-text">
                        [[[Editing access is denied for the dataset because it was published from another site and editing has been disabled.]]] <br> [[[Please contact the site administrator for help.]]]
                    </div>
                }
                else if (isEmbedEnabled)
                {
                    <div class="error-text">
                        [[[Embed authentication is disabled.]]] <br> [[[Please contact the site administrator for help.]]]
                    </div>
                }
                else if (isEmbedExpired || nonce)
                {
                <div class="error-text">
                    [[[The embed report link is invalid or expired.]]] <br> [[[Please contact the site administrator for help.]]]
                </div>
                }
                else if (embedConfig != null && (isEmbedSignature || isEmbedUserToken))
                {
                    <div class="error-text">
                        [[[You do not have permission to view this report.]]]<br>[[[Please contact your administrator.]]]
                    </div>
                }
                else if (!accessPermission)
                {
                    <div class="error-text">
                        [[[You do not have permission to view this report.]]] <br> [[[Please contact your administrator.]]]
                    </div>
                }
                else
                {
                    <div class="error-text">
                        [[[Oops! The report you are trying to access is restricted from viewing from the current IP address:]]] <b>@ipAddress</b><br>
                        [[[Please contact the site administrator for help.]]]
                    </div>
                    <div class="take-me-back-to-home-page"><span class="error-page-cursor"><a class="error-to-beck-text-color" href="@Url.Action("Reports", "Reports")">[[[Go to home page]]]</a></span></div>
                }
            </div>
        </div>
    </div>
    @await Html.PartialAsync("../Shared/_Footer", new ViewDataDictionary(ViewData) { { "appsettings", globalAppSettings } })
</body>
</html>