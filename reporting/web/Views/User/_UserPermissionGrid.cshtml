@using Newtonsoft.Json;

@model List<Permission>
@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = globalAppSettings.SystemSettings.OrganizationName + " - [[[View My Permissions]]]";
    ViewBag.MessageBox = false;
    var jsondata = JsonConvert.SerializeObject(Model);
    var gridName = ViewBag.gridName;
}

<script type="text/x-jsrender" id="itemNameHeader">
    <div class="item-name">[[[Scope]]]</div>
</script>

<script type="text/x-jsrender" id="itemName">
    <div class="item-name" data-placement="top">
        {{if ItemType=="@((int)ItemType.Report)" && ItemName!="-"}}
            {{if IsDraft}}
                <span><a href="@Url.Action("ReportDesigner", "Designer")/{{:ItemId}}/draft/{{:ItemName}}" target="_blank">{{:ItemName}}</a></span>
            {{else}}
                <span><a href="@Url.Action("Reports", "Reports")/{{:ItemId}}/{{:CategoryName}}/{{:ItemName}}" target="_blank">{{:ItemName}}</a></span>        
            {{/if}}
        {{else ItemType=="@((int)ItemType.Widget)" && ItemName!="-"}}
        <span><a href="@Url.Action("Widgets", "FileRender")/{{:ItemId}}/{{:ItemName}}" target="_blank">{{:ItemName}}</a></span>
        {{else ItemType=="@((int)ItemType.Category)" && ItemName!="-"}}
        <span><a href="@Url.Action("Reports", "Reports")?category={{:ItemName}}" target="_blank">{{:ItemName}}</a></span>
        {{else ItemType=="@((int)ItemType.Slideshow)" && ItemName!="-"}}
        <span><a href="@Url.Action("SlideshowPreview", "Slideshow")/{{:ItemId}}/{{:ItemName}}" target="_blank">{{:ItemName}}</a></span>
        {{else ItemType=="@((int)ItemType.Schedule)"}}
        <span>{{:ItemName}}</span>
        @*{{else ItemType=="@((int)ItemType.File)"}}
        <span><a href="@UrlHelper.GenerateUrl("ItemDownload", "Download", "FileRender", null, RouteTable.Routes, HttpContext.Current.Request.RequestContext, false)/{{:ItemTypeDescription}}/{{:ItemName}}" target="_blank">{{:ItemName}}</a></span>*@
        {{else}}
        <span>{{:ItemName}}</span>
        {{/if}}
    </div>
</script>

<script type="text/javascript">
    function onQueryCellInfo(args) {
        if(args.data[args.column.field] !=="-"){
            $(args.cell).attr({
                "data-toggle": "tooltip",
                "data-container": "body",
                "title": args.data[args.column.field]
            });
        }
    }

    function refreshTooltipAndPositionForGrid(args) {
        $("[data-toggle=tooltip]").tooltip();

    }

    $.views.helpers({
        urlEncode: function (category, item) {
            return encodeURI("@Url.Action("Reports", "Reports")/" + category + "/" + item);
        },
        widgetUrlEncode: function (item) {
            return encodeURI("@Url.Action("widgets", "FileRender")/" + item);
        }
    });
    $(document).ready(function () {
        $("#PermissionGrid").ejGrid({
            dataSource:@Html.Raw(jsondata),
            allowPaging: true,
            pageSettings: { pageSize: "20" },
            allowFiltering: true,
            allowSorting: true,
            allowSearching: true,
            allowSelection: false,
            enableAltRow: false,
            filterSettings: {
                filterType: "excel"
            },
            allowGrouping: true,
            groupSettings: {
                showDropArea:false,
                showUngroupButton:false,
                showGroupedColumn: false,
                groupedColumns: ["ItemTypeDescription"]
            },
            columns:[
                {field:"PermissionAccessDescription", headerText:"[[[Access Mode]]]", width: 130 },
                {field:"PermissionEntityDescription", headerText:"[[[Entity]]]", width: 80 },
                {field:"ItemName",
                    headerText:"[[[Scope]]]",
                    template: true,
                    headerTemplateID: "#itemNameHeader",
                    templateID:"#itemName",
                    type: "string",
                    width: 240
                },
                {field:"GroupName", headerText:"[[[Inherited from Group]]]", width: 120 },
                {field:"ItemTypeDescription", headerText:"[[[Resources]]]", allowSorting:false, allowFiltering:false }
            ],
            queryCellInfo: "onQueryCellInfo",
            dataBound: "refreshTooltipAndPositionForGrid",
            actionComplete: "refreshTooltipAndPositionForGrid"
        });
    });
</script>

<div id="PermissionGrid"></div>
