@using System.Configuration
@{
    var globalAppSettings = _globalAppSettings;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');

    var userDetail = (User)ViewBag.UserDetail;
    var isAduser = ViewBag.IsAdUser;
    var showResendButton = !userDetail.IsActivated ? "show" : "hide";
    var showActivationButton = (userDetail.Status.ToString() == "InActive") ? "show" : "hide";
    var showDeactivateButton = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower()) ? "show" : "hide";
    var showDropdown = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower() && !ViewBag.isAdUser) ? "show" : "hide";
    var showActive = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() == ViewBag.LoggedUser.ToLower()) ? "show" : "hide";
    var showActiveUser = (userDetail.Status.ToString() == "Active" && ViewBag.IsAdUser) ? "show" : "hide";
    var showInactive = (showDropdown == "hide" && showActive == "hide" && showActiveUser == "hide") ? "show" : "hide";
    var groupList = ViewBag.GroupList;
    ViewBag.Title = " [[[User Profile]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var idpreferenceId = Context.Session.GetString("idpReferenceId") != null ? Context.Session.GetString("idpReferenceId").ToString() : string.Empty;
    var idPUrl = ServerAppConfig.InternalAppIdpUrl;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.EditUsers);
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-management-profile.css" />
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-management-profile.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-management-profile.min.css" />
        <script asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-management-profile.min.js"></script>
    </environment>

    <script type="text/javascript">
        var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
        var checkMailSettingUrl = "@Url.Action("checkmailsettingsexist", "Administration")";
        var activateDeactivateUserUrl = "@Url.Action("ActivateDeactivateUser", "UserManagement")";
        var resendactivationcodeUrl = "@Url.Action("resendactivationcode", "UserManagement")";
        var updateprofilepictureUrl = "@Url.Action("updateprofilepicture", "user")";
        var fileUploadUrl = "@Url.Action("Upload", "fileupload")";
        var UpdatePasswordUrl = "@Url.Action("UpdatePassword", "UserManagement")";
        var updateUserProfileUrl = "@Url.Action("UpdateUserProfile", "UserManagement")";
        var emailSettingsUrl = "@Url.Action("e-mail-settings", "administration")";
        var deleteSingleFromUserListUrl = "@Url.Action("DeleteSingleFromUserList", "UserManagement")";
        var userPageUrl = "@Url.Action("Index", "UserManagement")";
        var avatarUrl = "@(idPUrl + Url.Action("Avatar", "User"))";
        var deleteavatarUrl = "@Url.Action("deleteavatar", "UserManagement")";
        var getdefaultavatarUrl = "@Url.Action("getdefaultavatar", "User")";
        var isPresentEmailId = "@Url.Action("IsPresentEmailId", "UserManagement")";
        var isUsernameExistsUrl = "@Url.Action("IsUsernameExists", "UserManagement")";
        var showDropdown = "@showDropdown";
        var isEmailRequired = @Json.Serialize(globalAppSettings.SystemSettings.IsEmailRequired);

        $(document).ready(function () {
            $("#avatar-button-click, #avatar-delete-click").css("display","none");
            $("#status-dom").hide();

            window.dateFormat = "@globalAppSettings.SystemSettings.DateFormat";
            var fulldata=@Html.Raw(Json.Serialize(ViewBag.UserDetail));
            editUser(fulldata,"@globalAppSettings.SystemSettings.DateFormat");
            if (@ViewBag.EditUserProfile > 0) {
                $("#edit").trigger("click");
                if(showDropdown == "show"){
                    $("#status-div").addClass("line-spacing");
                }
            }
            $('[data-toggle="tooltip"]').tooltip();
            $(document).on("click", ".popup-close", function (e) {
                $(".edit-profile-field").attr("value","updateUserProfileUrl");
                $("#profile-picture").attr("src", "@globalAppSettings.SystemSettings.CDNLink/images/preview.jpg");
                $('#upload-image').attr("disabled", "disabled");
                if ($(".img-container").children().hasClass("jcrop-active")) {
                    $('#profile-picture').data("Jcrop").destroy();
                }
                $(function () {
                    $("#avatar-upload-box").ejDialog({
                        showOnInit: false,
                        allowDraggable: true,
                        enableResize: false,
                        width: "600px",
                        enableModal: true,
                        showHeader: false,
                        close: "DialogBoxClose",
                        closeOnEscape: true
                    });
                });
                eDialog = $("#avatar-upload-box").data("ejDialog");
                eDialog.close();
            });
        });
    </script>
}

@section MainSection {
    @await Html.PartialAsync("_UserMenu")
    <environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
    <div id="view-user-profile">
        <div id="view-profile-info">
            <span id="is-aduser">@ViewBag.IsAdUser</span>
            <span id="logged-user">@ViewBag.LoggedUser</span>
            <div id="edit-user-profile-master" role="tabpanel" class="admin-page-container user-permission">
                <div class="col-lg-12 col-md-12 co-sm-12 col-xs-12 admin-page-header">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 no-padding header">
                        <a class="back-button pull-left" href="@Url.Action("Index","UserManagement")" data-toggle="tooltip" data-placement="top" title="[[[Users]]]" data-container="body">
                            <i class="su su-arrow-back back-navigaion img-size"> </i>
                        </a>
                        <hgroup>
                            <h2 class="page-title adjust-style-for-backarrow no-margin" id="display-name">@ViewBag.UserDetail.DisplayName</h2>
                        </hgroup>
                    </div>
                    <div class="col-md-6 col-xs-12 col-sm-6 col-xs-12 no-padding">
                        @if (userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower())
                        {
                            @*<input class="primary-button password-save-button pull-right @showDeactivateButton" type="button" id="deactivate-button-click" value="[[[Deactivate User]]]" title="" />
                                <input class="primary-button pull-right @showResendButton" type="button" id="resend-button-click" value="[[[Resend Activation Code]]]" title="" />
                                <input class="primary-button password-save-button pull-right @showActivationButton" type="button" id="activate-button-click" value="[[[Activate User]]]" title="" />*@

                            <div id="profile-action-section" class="dropdown pull-right no-padding">
                                <a class="dropdown-toggle" data-toggle="dropdown">
                                    <span class="su su-options-menu"></span>
                                </a>
                                <ul class="dropdown-menu" role="menu" id="profile-action-menus">
                                    <li class="deactivate-user-option dropdown-submenu pull-left @showDeactivateButton" onclick="activateDeactivateUser(false)">
                                        <a class="dropdown-option">
                                            <span>
                                                [[[Deactivate User]]]
                                            </span>
                                        </a>
                                    </li>
                                    <li class="activate-user-option dropdown-submenu pull-left @showActivationButton" onclick="activateDeactivateUser(true)">
                                        <a class="dropdown-option">
                                            <span>
                                                [[[Activate User]]]
                                            </span>
                                        </a>
                                    </li>
                                    <li class="dropdown-submenu pull-left @showResendButton" onclick="onResendActivationClick()">
                                        <a class="dropdown-option">
                                            <span>
                                                [[[Resend Activation Code]]]
                                            </span>
                                        </a>
                                    </li>
                                    <li class="dropdown-submenu pull-left" onclick="onDeleteDialogOpen()">
                                        <a class="dropdown-option">
                                            <span>
                                                [[[Delete User]]]
                                            </span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        }

                        <a href="@Url.Action("userpermission", "permission")?userId=@userDetail.UserId" title="">
                            <input type="button" class="link-button pull-right" value="[[[Manage Permissions]]]">
                        </a>
                    </div>
                </div>
                <div class="user-profile-section col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding">
                    <div class="img-view-holder col-lg-12 col-md-12 col-sm-10 col-xs-12" style="border: 0px">
                        <div class="profile-pic-tag" data-id="@idpreferenceId" data-type="user" data-display-name="@userDetail.DisplayName" data-image-size="120" data-toggle="tooltip" title="@userDetail.DisplayName" data-placement="top"></div>
                    </div>
                    <div id="edit-user-profile-form-div" class="col-xs-12 col-sm-7 col-md-7 col-lg-7 no-padding validation">
                        <form class="form-horizontal edit-user-profile-form" autocomplete="off">
                            <div class="form-group no-padding line-spacing">
                                <label class="label-panel text-right app-textbox-label">[[[Username]]]<span class="mandatory">*</span> </label>
                                <div class="col-sm-5  col-xs-12 group-list">
                                    @Html.TextBox("user-username", userDetail.Username, new { id = "user-username", placeholder = "[[[Please enter username]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled", maxlength = "254", minlength = "3" })
                                    <span id="user-name-validation" class="alert-messages validation-message"></span>
                                </div>
                            </div>
                            <div class="form-group no-padding line-spacing">
                                <label class="label-panel text-right app-textbox-label">[[[First Name]]]<span class="mandatory">*</span> </label>
                                <div class="col-sm-5  col-xs-12 group-list">
                                    @Html.TextBox("user-firstname", userDetail.FirstName, new { id = "user-firstname", placeholder = "[[[Please enter first name]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                    <span id="first-name-validation" class="alert-messages validation-message"></span>
                                </div>
                            </div>
                            <div class="form-group no-padding line-spacing">
                                <label class="label-panel text-right app-textbox-label">
                                    [[[Last Name]]]
                                </label>
                                <div class="col-sm-5 col-xs-12 group-list">
                                    @Html.TextBox("user-lastname", userDetail.LastName, new { id = "user-lastname", placeholder = "[[[Please enter last name]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                    <span id="last-name-validation" class="alert-messages validation-message"></span>
                                </div>
                            </div>
                            <div class="form-group no-padding line-spacing">
                                <label class="label-panel text-right app-textbox-label">[[[Email]]]<span class="mandatory"></span> </label>
                                <div class="col-sm-5  col-xs-12 group-list">
                                    @if (ServerAppConfig.IsSelfHosted)
                                    {
                                @Html.TextBox("user-email", userDetail.CanShowEmail ? userDetail.Email : string.Empty, new { id = "user-email", placeholder = "[[[Please enter email address]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled", style = "margin-top:0" }) }
                                                else
                                                {
                                <a class="back-button pull-left" id="user-email" href="mailto:@userDetail.Email">@(userDetail.CanShowEmail ? userDetail.Email : string.Empty)</a>}
                                    <span id="email-duplicate-validation" class="alert-messages validation-message"></span>
                                </div>
                            </div>
                            <div class="form-group no-padding line-spacing">
                                <label class="label-panel text-right app-textbox-label">
                                    [[[Phone]]]
                                </label>
                                <div class="col-sm-5  col-xs-12 group-list">
                                    @Html.TextBox("user-phonenumber", userDetail.ContactNumber, new { id = "user-phonenumber", placeholder = "[[[Please enter phone number]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                    <span id="contact-validation" class="alert-messages validation-message"></span>
                                </div>
                            </div>
                            <div class="form-group no-padding margin-top20" id="group-div">
                                <label class="label-panel text-right app-textbox-label" id="groups">
                                    [[[Groups]]]
                                </label>
                                <div class="col-sm-5  col-xs-12 group-list groups">
                                    @{
                                        for (var group = 0; group < ViewBag.GroupList.Count; group++)
                                        {
                                            <div class="content-size" title="@ViewBag.GroupList[group].Name" data-html="false" data-container="body" data-toggle="tooltip" data-placement="right">
                                                @ViewBag.GroupList[group].Name
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                            <div class="form-group no-padding margin-top10" id="activation-status-div">
                                <label class="label-panel text-right app-textbox-label">[[[Email Verification]]]</label>
                                @if (userDetail.IsActivated)
                                {
                                    <div id="completed-status" class="col-sm-5 col-xs-12 group-list">
                                        <span class="label label-success">[[[Completed]]]</span>
                                    </div>
                                }
                                else
                                {
                                    <div id="pending-status" class="col-sm-5 col-xs-12 group-list"><span class="label label-warning">[[[Pending]]]</span></div>
                                }
                            </div>
                            <div class="form-group no-padding margin-top10" id="status-div">
                                <label class="label-panel text-right app-textbox-label">[[[Status]]]</label>
                                <div id="status-show" class="col-sm-5 col-xs-12 group-list">
                                    @Html.TextBox("status-user", "", new { id = "status-user", @class = "content-size status", @readonly = "readonly" })
                                </div>
                            </div>
                        </form>
                    </div>
                    @if (!ViewBag.IsAdUser)
                    {
                        <div id="edit-button">
                            <input type="button" class="secondary-button pull-right" id="edit" title="" value="[[[Edit Profile]]]">
                            <input type="button" class="secondary-button pull-right popup-close" title="" id="cancel-button" value="[[[Cancel]]]">
                            <input type="button" class="primary-button pull-right inactive-content" id="save-button" title="" onclick="SaveUserdetails()" value="[[[Save]]]">
                        </div>
                    }
                    <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
                        <h5 id="updation-validation-message"></h5>
                    </div>
                </div>
                @if (ViewBag.IsAdUser)
                {
                    if (ServerAppConfig.IsSelfHosted)
                    {
                        <div id="azure-user-info" class="col-xs-12 no-padding">* [[[Profile editing is not currently supported for Azure Active Directory, Windows Active Directory, Office 365, database, JWT SSO, OAuth and OpenID Connect accounts.]]]</div>
                    }
                    else
                    {
                        <div id="azure-user-info" class="col-xs-12 no-padding">* [[[Profile editing is not currently supported for]]] Azure Active Directory, Office 365 [[[and]]] database [[[accounts.]]]</div>
                    }
                }
            </div>
            <input type="hidden" id="image" value="" />
            <input type="hidden" id="user-id" value="@ViewBag.UserDetail.UserId" />
        </div>
        @*@if (!ViewBag.IsAdUser)
            {
                <div id="change-password" class="change-password-div">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" id="change-password-content">
                        <form class="col-xs-11 col-sm-11 col-md-11 col-lg-11 change-password-form no-padding">
                            <div class="user-profile-table" cellpadding="20">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding password-div">
                                    <div class="col-xs-12 col-sm-5 col-md-5 col-lg-4 no-padding label-section text-right">
                                        @Html.Label("new-password", "[[[New Password]]]", new { @class = "password-label" })
                                        <span class="mandatory">*</span>
                                    </div>
                                    <div class="col-xs-11 col-sm-6 col-md-4 col-lg-3 password-section">
                                        @Html.Password("fake-password", new { id = "fake-password", @class = "fake-password-avoid-autocomplete" })
                                        @Html.Password("new-password", "", new { @class = "form-control password-fields-user-profile-edit", id = "new-password", name = "new-password", maxlength = "4000" })
                                        <span class="su su-eye view-green show-hide-password"></span>
                                        <span id="new-password-validate" class="password-validate-holder"></span>
                                    </div>
                                </div>
                                <div id="confirm-password-section" class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding password-div">
                                    <div class="col-xs-12 col-sm-5 col-md-5 col-lg-4 no-padding confirm-section label-section text-right">
                                        @Html.Label("confirm-password", "[[[Confirm Password]]]", new { @class = "password-label" })
                                        <span class="mandatory">*</span>
                                    </div>
                                    <div class="col-xs-11 col-sm-6 col-md-4 col-lg-3 confirm-section password-section">
                                        @Html.Password("confirm-password", "", new { @class = "form-control password-fields-user-profile-edit", id = "confirm-password", name = "confirm-password", maxlength = "4000" })
                                        <span class="su su-eye view-green show-hide-password"></span>
                                        <span id="confirm-password-validate" class="password-validate-holder"></span>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div class="col-xs-1 no-padding button-section">
                            <input type="button" class="primary-button password-save-button profile-save-button pull-right" value="[[[Update]]]" onclick="onUserChangePasswordClick()">
                        </div>
                        <div class="col-xs-12 col-sm-3 col-md-2 col-lg-2 no-padding validation">
                            <h5 id="password-validation" class="password-validate-holder"></h5>
                        </div>
                    </div>
                </div>
            }*@
    </div>
    <div id="userprofile-delete-confirmation" class="no-padding">
        <div class="col-lg-12 no-padding modal-content" id="popup-container">
            <div class="col-md-12 modal-header">
                <div class="col-xs-8 no-padding">
                    <span class="su su-delete head-icon"></span>
                    <span class="modal-title">[[[Delete User]]]</span>
                </div>
                <div class="col-xs-4 no-padding">
                    <a href="javascript:void(0);" onclick="onDeleteDialogClose()" class="popup-close pull-right">
                        <span class="su su-close"></span>
                    </a>
                    <div id="folder-setting-arrow" class="downArrow" style="left: 37px;"></div>
                </div>
            </div>
            <div class="modal-body col-xs-12 no-padding">
                <div class="col-xs-12 no-left-padding no-bottom-padding no-right-padding">
                    <div class="delete-msg">[[[Are you sure you want to delete the User?]]]</div>
                </div>
            </div>
            <div class="col-xs-12 modal-footer">
                <div class="col-xs-12 no-padding margin-top pull-right">
                    <input type="button" id="delete-item" onclick="deleteSingleUser(@ViewBag.UserDetail.UserId)" class="critical-action-button margin-right" value="[[[Yes]]]" tabindex="1" autofocus />
                    <input type="button" onclick="onDeleteDialogClose()" class="secondary-button popup-close" value="[[[No]]]" tabindex="2" />
                </div>
            </div>
        </div>
    </div>

    <span id="baseurl" data-url="@Url.Content("~/")"></span>
    @await Html.PartialAsync("_ProfilePictureUploadBox", globalAppSettings.SystemSettings.CDNLink)

    @await Html.PartialAsync("../UserManagement/_LimitUserCreation")
}