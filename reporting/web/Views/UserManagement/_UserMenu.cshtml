@using Microsoft.AspNetCore.Http.Extensions;
@{
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());
    var currentUrl = requestUrl.LocalPath.TrimEnd('/');
    var userHomeUrl = Url.RouteUrl(new { controller = "UserManagement", action = "Index" });
    var userListUrl = Url.Action("index", "UserManagement");
    var groupListUrl = Url.Action("group", "group");
    var model = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var isAdmin = _identityResponse.IsAdmin;
    var canShowuserMenu = isAdmin || model[PermissionEntity.UsersandGroups];
}

<nav id="admin-nav">
    <ul>
        @if (isAdmin || (model != null && model[PermissionEntity.UsersandGroups]))
        {
            <li>
                <a class="admin-menu-item @(currentUrl.Contains("users") || currentUrl.Equals(userHomeUrl, StringComparison.CurrentCultureIgnoreCase) ? "active" : string.Empty)" href="@userListUrl" role="tab">
                    <i class="su su-user-1"></i>
                    <span>[[[Users]]]</span>
                </a>
            </li>
        }
        @if (isAdmin || (model != null && model[PermissionEntity.UsersandGroups] || model[PermissionEntity.SpecificGroup]))
        {
            <li>
                <a class="admin-menu-item @(currentUrl.Contains("groups") ? "active" : string.Empty)" href="@groupListUrl" role="tab">
                    <i class="su su-group-1"></i>
                    <span>[[[Groups]]]</span>
                </a>
            </li>
        }
        </ul>
</nav>