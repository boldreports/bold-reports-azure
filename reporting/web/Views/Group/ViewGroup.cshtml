@using Syncfusion.Server.Base.Helpers

@addTagHelper *, Microsoft.FeatureManagement.AspNetCore
@{
    var globalAppSettings = _globalAppSettings;

    ViewBag.Title = "[[[Groups]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.ManageGroups);
    var isGeneralTab = ViewBag.ActiveTab == null || ViewBag.ActiveTab == "general" ? "active" : string.Empty;
    var isAttributeTab = ViewBag.ActiveTab != null && ViewBag.ActiveTab == "attributes" ? "active" : string.Empty;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var granularPermissions = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var isAdmin = _identityResponse.IsAdmin;
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/viewgroup.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/viewgroup.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/deleteconfirm.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/deleteconfirm.css")" crossorigin="anonymous" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/viewgroup.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/viewgroup.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/viewgroup.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/viewgroup.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/deleteconfirm.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/deleteconfirm.min.css")" crossorigin="anonymous" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/viewgroup.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/viewgroup.min.js")" crossorigin="anonymous"></script>
    </environment>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/javascript">
        var groupDetails = @Json.Serialize(ViewBag.groupDetails);
        var groupId = @ViewBag.groupId;
        var groupAttributesUrl = "@Url.Action("GetGroupAttributes", "CustomAttribute")";
        groupDetails.GroupName = decodeHtmlAsString(groupDetails.GroupName);
        groupDetails.GroupDescription = decodeHtmlAsString(groupDetails.GroupDescription);
        serverApp.controller('GroupEditController', function ($scope) {
            $scope.selectedRow = 1;
            $scope.page = 0;
            $scope.allGroupDetails = groupDetails;
        });
        $(document).ready(function () {
            $("#search-group-users").val("");
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({ url: "@Url.Action("RefreshGroupUsers", "Group")?groupId="+groupId, adaptor: "UrlAdaptor" }),
                gridLines: ej.Grid.GridLines.None,
                allowPaging: true,
                pageSettings: { pageSize: 20 },
                allowSorting: true,
                enableAltRow: false,
                allowSearching: true,
                allowFiltering: true,
                allowSelection: true,
                locale: "en-us",
                filterSettings: { filterType: "menu" },
                actionBegin: "fnOnEditGroupActionBegin",
                actionComplete: "fnOnUserGridActionComplete",
                dataBound: function (args) {
                    if (location.pathname.toLowerCase() === "/" || location.pathname.split("/")[location.pathname.split("/").length-1].toLowerCase() == "dashboards") {
                        refreshScroller();
                    }
                    $('[data-toggle="tooltip"]').tooltip();
                },
                enableRowHover: true,
                columns: [
                    {
                        allowSorting: true,
                        headerText: "[[[Name]]]",
                        width: 100,
                        field: "DisplayName",
                        templateID: "#NameTemplate",
                        headerTemplateID: "#NameHeader",
                        type: "string",
                        allowFiltering: true,
                    },
                    {
                        allowSorting: true,
                        headerText: "[[[Username]]]",
                        width: 100,
                        field: "Username",
                        templateID: "#UsernameTemplate",
                        headerTemplateID: "#UsernameHeader",
                        type: "string",
                        allowFiltering: true,
                        visible: isSelfHosted
                    },
                    {
                        field: "Email",
                        headerText: "[[[Email Address]]]",
                        templateID: "#EmailTemplate",
                        width: 180,
                        headerTemplateID: "#emailHeader",
                        type: "string",
                        allowFiltering: true
                    }
                ]
            });

            $(document).ready(function () {
                $("#GroupAttributesGrid").ejGrid({
                    dataSource: null,
                    gridLines: ej.Grid.GridLines.None,
                    allowSorting: true,
                    allowSearching: true,
                    allowPaging: true,
                    allowSelection: true,
                    allowFiltering: true,
                    filterSettings: { filterType: "menu" },
                    pageSettings: { pageSize: 8 },
                    enableRowHover: true,
                    enableAltRow: false,
                    create: "initialGroupGridCreate",
                    dataBound: function (args) {
                        $('[data-toggle="tooltip"]').tooltip();
                    },
                    columns: [
                        { field: 'Name', templateID: "#attribute-name-template", headerText: '[[[Name]]]', width: 40, allowSorting: true, allowFiltering: true },
                        { field: 'Value', templateID: "#attribute-value-template", headerText: '[[[Value]]]', width: 60, allowSorting: true, allowFiltering: true },
                        { field: 'Description', templateID: "#attribute-description-template", headerText: '[[[Description]]]', width: 50, allowSorting: true, allowFiltering: true },
                        { field: 'ModifiedDateString', headerText: '[[[Last Modified]]]', width: 40, allowSorting: true, allowFiltering: false },
                        { field: 'InheritedFrom', headerText: '[[[Inherited From]]]', templateID: "#inherited", width: 40, allowSorting: true, allowFiltering: false },
                        { field: 'Options', headerText: '', templateID: "#options", width: 20, allowSorting: false, allowFiltering: false }
                    ]
                });
            });

            $("#delete-group-area").ejDialog({
                width: "499px",
                showOnInit: false,
                allowDraggable: true,
                enableResize: false,
                showHeader: false,
                title: "[[[Add New Group]]]",
                enableModal: true,
                closeOnEscape: true,
                close: ''
            });
            var deleteGroupWaitingPopupTemplateId = createLoader("delete-group-area_wrapper");
            $("#delete-group-area_wrapper").ejWaitingPopup({ template: $("#" + deleteGroupWaitingPopupTemplateId) });

            $.ajax({
                type: "GET",
                url: groupAttributesUrl,
                data: { id: groupId },
                success: function (result) {
                    if (result.Status) {
                        var groupAttributesGrid = $("#GroupAttributesGrid").data("ejGrid");
                        groupAttributesGrid.dataSource(result.Attributes);
                    }
                    $("#GroupAttributesGrid").ejWaitingPopup("hide");
                }
            });
        });
        $("#userList").selectpicker("refresh");
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="attribute-name-template">
        <span class="grid-content" title="{{:Name}}" data-toggle="tooltip">{{:Name}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="attribute-description-template">
        <span class="grid-content" title="{{:Description}}" data-toggle="tooltip">{{:Description}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="attribute-value-template">
        <span class="grid-content" title="{{:Value}}" data-toggle="tooltip">{{:Value}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="NameTemplate">
        <span class="item-name" title="{{:DisplayName}}" data-toggle="tooltip">{{:DisplayName}}</span>
    </script>
    <feature name=@FeatureManagement.Yokogawa>
        <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="NameTemplate">
            <a class="item-name grid-content" title="{{:DisplayName}}" data-toggle="tooltip" href="@Url.Action("ViewProfile", "UserManagement")?id={{:UserId}}">{{:DisplayName}}</a>
        </script>
    </feature>
    <feature name=@FeatureManagement.Yokogawa negate="true">
        <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="NameTemplate">
            <span class="item-name grid-content" title="{{:DisplayName}}" data-toggle="tooltip">{{:DisplayName}}</span>
        </script>
    </feature>    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="UsernameTemplate">
        <span class="grid-content" title="{{:Username}}" data-toggle="tooltip">{{:Username}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="EmailTemplate">
        <span class="grid-content" title="{{:Email}}" data-toggle="tooltip">{{:CanShowEmail ? Email : ""}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="NameHeader">
        <div class="item-name">[[[Name]]]</div>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="UsernameHeader">
        <div class="item-name">[[[Username]]]</div>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="emailHeader">
        <div class="item-header">[[[Email Address]]]</div>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]">
        var checkGroupnameUrl = "@Url.Action("CheckGroupname", "group")";
        var addGroupUrl = "@Url.Action("AddGroup", "group")";
        var deleteGroupViewUrl = "@Url.Action("DeleteGroupView", "group")";
        var addGroupViewUrl = "@Url.Action("AddGroupView","group")";
        var deleteGroupUrl = "@Url.Action("DeleteGroup", "group")";
        var groupPageUrl = "@Url.Action("group", "group")";
    </script>
}

@section MainSection{
    @await Html.PartialAsync("../UserManagement/_UserMenu")

    <div id="view-page-container" class="admin-page-container" ng-controller="GroupEditController">
        <div id="group-header" class="col-md-12 import-area admin-page-header pull-left">
            <a href="@Url.Action("group","group")" title="[[[Groups]]]" class="back-button pull-left" data-toggle="tooltip" data-placement="top" data-container="body">
                <i class="su su-arrow-back"> </i>
            </a>
            <hgroup class="col-md-5 col-xs-12 wrapper">
                <h2 class="page-title"><span ng-bind="allGroupDetails.GroupName" title="{{allGroupDetails.GroupName}}"></span></h2>
            </hgroup>
            <div class="col-md-6 col-xs-12 group-buttons pull-right no-padding">
                @if (isAdmin || granularPermissions[PermissionEntity.AllPermissions] || granularPermissions[PermissionEntity.SpecificPermissions])
                {
                    <a type="button" class="link-button app-btn-link manage-permissions" title="" href="@Url.Action("grouppermission", "permission")?groupId=@ViewBag.groupId">[[[Manage Permissions]]]</a>
                }
                @if (!ViewBag.IsActiveDirectory && !ViewBag.IsAzureADGroup)
                {
                    <a type="button" class="link-button app-btn-link" href="@Url.Action("editgroup","group")?groupId=@ViewBag.groupId">[[[Edit Group]]]</a>
                }
                <input type="button" class="primary-button app-btn-primary pull-right" id="add-custom-attribute" title="" value="[[[Add Attribute]]]" data-id="@ViewBag.groupId" onclick="addCustomAttribute('group')">
                @if ((isAdmin || granularPermissions[PermissionEntity.UsersandGroups] || granularPermissions[PermissionEntity.SpecificGroup]) && ViewBag.groupId != 1)                {
                    <input type="button" class="critical-action-button app-btn-danger delete-group delete" title="" data-groupid="@ViewBag.groupId" value="[[[Delete Group]]]" data-groupname="{{allGroupDetails.GroupName}}" />
                }
            </div>
        </div>
        <nav>
            <ul id="ad-tab-nav" class="nav nav-tabs" role="tablist">
                <li id="general-tab" role="presentation" class='@isGeneralTab'>
                    <a href="#group-general-tab" id="group-general" aria-controls="group-general-tab" role="tab" data-toggle="tab">[[[General]]]</a>
                </li>
                <li id="attribute-tab" role="presentation" class='@isAttributeTab'>
                    <a href="#group-attribute-tab" id="group-attribute" aria-controls="group-attribute-tab" role="tab" data-toggle="tab">[[[Attributes]]]</a>
                </li>
            </ul>
        </nav>
        <div class="tab-content">
            <div id="group-general-tab" role="tabpanel" class='tab-pane @isGeneralTab'>
                <div class="col-lg-12 admin-page-body">
                    <form class="col-xs-12 group-form" id="info-container" autocomplete="off">
                        <div class="row">
                            <div class="col-xs-2 pull-left">[[[Name]]]</div>
                            <div class="group-info-text col-md-4 col-xs-6 pull-left" id="group-name">
                                {{allGroupDetails.GroupName}}
                            </div>
                            <div class="col-md-6 col-xs-4 no-padding"><span id="invalid-groupname" class="error-message" title="[[[Please enter group name]]]" data-content=""></span></div>
                        </div>
                        <div class="row">
                            <div class="col-md-2 col-xs-2 pull-left">[[[Description]]]</div>
                            <div class="group-info-text col-md-7 col-xs-10 pull-left">
                                {{allGroupDetails.GroupDescription}}
                            </div>
                        </div>
                    </form>
                    <input type="hidden" name="hiddengroupId" id="hidden-group-id" value="@ViewBag.groupId" />
                    <div id="people-container" class="col-lg-12 col-xs-12">
                        <div class="col-xs-12 right-align no-padding">
                            <div id="search-area" class="pull-right">
                                <input type="text" id="search-group-users" class="pull-left no-margin" placeholder="[[[Search users]]]" />
                                <span class="su close-icon su-inner-close pull-left no-margin" id="clear-search" title="[[[Clear search]]]"></span>
                                <span class="su su-search search-group-users pull-left no-margin" title="[[[Search users]]]"></span>
                            </div>
                        </div>
                        <div id="Grid" class="col-lg-12 no-padding pull-left" data-gridname="EditGroup">
                        </div>
                    </div>

                </div>
            </div>
            <div id="group-attribute-tab" role="tabpanel" class='tab-pane @isAttributeTab'>
                <div class="col-lg-12 admin-page-body">
                    <div id="GroupAttributesGrid"></div>
                </div>
                <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="inherited">
                    {{if AttributeType == @((int)AttributeType.Site)}}
                    <div title="{{:Inherited}}">
                        {{:Inherited}}
                    </div>
                    {{/if}}
                </script>
                <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="options">
                    <div class="user-hover-options">
                        {{if AttributeType ==  @((int)AttributeType.Group)}}
                        <a href="javascript:void(0);" id="edit-group-attribute" title="[[[Edit]]]" data-toggle="tooltip" data-id="{{:Id}}" data-name="group" onclick="editCustomAttribute(this)">
                            <i class="su su-edit"></i>
                        </a>
                        <a class="delete-class" href="javascript:void(0);" id="remove-group-attribute" title="[[[Remove]]]" data-toggle="tooltip" data-id="{{:Id}}" data-name="group" onclick="deleteConfirmation(this)">
                            <i class="su su-delete"></i>
                        </a>
                        {{else}}
                        <a href="javascript:void(0);" title="[[[Edit]]]" data-toggle="tooltip" data-content="{{:Id}}">
                            <i class="su su-edit disabled-icon-color"></i>
                        </a>
                        <a class="delete-class" href="javascript:void(0);" title="[[[Remove]]]" data-toggle="tooltip" data-content="{{:Id}}">
                            <i class="su su-delete disabled-icon-color"></i>
                        </a>
                        {{/if}}
                    </div>
                </script>
            </div>
        </div>
        <div id="delete-group-area" class="no-padding">
            <div id="delete-group-wrap"></div>
        </div>
    </div>
    @await Html.PartialAsync("../CustomAttribute/_CustomAttribute")
}