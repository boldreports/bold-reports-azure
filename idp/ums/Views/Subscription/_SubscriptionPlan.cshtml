@model Syncfusion.Server.Base.DataClasses.Subscription
﻿@{
    var tenantInfoId = ViewBag.TenantInfoId;
    var tenantInfo = ViewBag.TenantInfo as TenantInfo;
    LicenseSettings licenseSettings = tenantInfo.LicenseSettings;
    var isadditionalStoragePresent = licenseSettings.Addons.Where(x => x.PlanId == GlobalAppSettings.GetDescription(AddOnProducts.AdditionalDataStorage)).FirstOrDefault();
    var quantity = isadditionalStoragePresent != null ? isadditionalStoragePresent.Quantity.ToString() : string.Empty;
    var tenantStatus = licenseSettings.TenantStatus;
    var isCardExist = ViewBag.IsCardExist;
    var globalAppSettings = new GlobalAppSettings();
    var productName = GlobalAppSettings.GetDescription((TenantType)tenantInfo.TenantTypeId);
    //var isDeveloperLicense = CloudAppConfig.IsSDKPlan((SaaSPlan)int.Parse(Model.PlanId));
    var isDeveloperLicense = false;////temporarily hided developer based configuration
    var isInternalUser = ViewBag.IsInternalUser; //syncfusion user
}
<div id="stripePublicKey" style="display:none">
    @CloudAppConfig.StripePublicKey
</div>

<div id="subscription-plan-container" class="admin-page-container col-xs-12">
    <div id="subscription-plan-block" class="col-xs-12 no-padding">
        <div class="col-md-12 import-area admin-page-header">
            <hgroup class="col-lg-6 col-md-6 col-sm-6 col-xs-12 no-padding">
                <h1 class="h2 page-title">SUBSCRIPTION</h1>
                <h5 class="page-description">Manage the subscription and plan for the application</h5>
            </hgroup>
        </div>
        <form id="tenant-information-form" class="col-md-12 form-horizontal no-padding" autocomplete="off">
            <div id="tenantId" style="display: none">@tenantInfo.Tenant.TenantId</div>
            <div class="col-xs-12 admin-page-body">
                <h3 class="title col-xs-12 sub-section-heading">General Information</h3>
                <div class="col-xs-6 no-margin no-padding" id="tenant-information">
                    <div class="form-group blur-whitelable-content" style="margin-top:15px">
                        @Html.Label("portal name", "Portal name", new { @class = "col-xs-2 app-textbox-label" })
                        <div class="col-xs-4">
                            <input disabled type="text" id="portal-name" class="form-control edit-profile-field" placeholder="Enter your portal name" value="@tenantInfo.Tenant.DNS" onchange="onChangeName()" />
                        </div>
                        <span id="portal-name-validation" class="alert-messages validation-message"></span>
                    </div>
                    <div class="form-group blur-whitelable-content" style="margin-top:15px">
                        @Html.Label("portal url", "Portal url", new { @class = "col-xs-2 app-textbox-label" })
                        <div class="col-xs-4">
                            <input disabled type="text" id="portal-url" class="form-control edit-profile-field" placeholder="Enter your portal url" value="@tenantInfo.Tenant.CustomDomain" onchange="onChangeUrl()" />
                        </div>
                        <span id="portal-url-validation" class="alert-messages validation-message"></span>
                    </div>
                    <div class="form-group blur-whitelable-content" style="margin-top:15px">
                        @Html.Label("portal type", "Portal type", new { @class = "col-xs-2 app-textbox-label" })
                        <div class="col-xs-4" style="margin-top: 8px">
                            <span id="portal-type">@productName</span>
                        </div>
                    </div>
                </div>
                @if (!ViewBag.IsSubscriptionCancel)
                {
                    <div id="edit-button" class="admin-page-actions col-lg-12 col-md-12 no-margin">
                        <input type="button" class="secondary-button pull-right" id="edit" title="" value="Edit">
                        <input type="button" class="secondary-button pull-right popup-close" title="" id="cancel-button" value="Cancel">
                        <input type="button" class="primary-button pull-right inactive-content" id="save-button" title="" onclick="updateTenant()" value="Save">
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
                        <h5 id="success-message"></h5>
                    </div>
                }
            </div>
        </form>
        <form id="subscription-plan-form" class="col-md-12 form-horizontal no-padding" autocomplete="off">
            <div id="issubscriptioncancel" style="display:none">@ViewBag.IsSubscriptionCancel</div>
            <div id="currentPlanId" style="display: none">@Model.PlanId</div>
            <div class="col-xs-12 admin-page-body">
                <h3 class="title col-xs-12 sub-section-heading">Subscription Information</h3>
                <div class="col-xs-6 no-margin no-padding" id="subscription-information">
                    <table class="table table-section">
                        <tr>
                            @if (tenantInfo.TenantTypeId == (int)TenantType.BoldBI || tenantInfo.TenantTypeId == (int)TenantType.BoldReports)
                            {
                                <td>Site</td>
                                <td>
                                    @tenantInfo.Tenant.DNS
                                </td>
                            }
                            else if (tenantInfo.TenantTypeId == (int)TenantType.BoldBIOnPremise || tenantInfo.TenantTypeId == (int)TenantType.BoldReportsOnPremise)
                            {
                                <td>Portal Name</td>
                                <td>
                                    @tenantInfo.Tenant.Subdomain
                                </td>
                            }
                        </tr>
                        <tr>
                            <td>Plan</td>
                            <td>
                                @if (tenantStatus != TenantStatus.MarkedForSuspension)
                                {
                                    <span style="float: left; padding: 6px 10px 0px 0px;">
                                        @Model.PlanName
                                    </span>
                                    if (((TenantType)tenantInfo.TenantTypeId != TenantType.BoldBIOnPremise && (TenantType)tenantInfo.TenantTypeId != TenantType.BoldReportsOnPremise) && !licenseSettings.IsKcBenefit && !Model.IsCustomPlan && !isDeveloperLicense)
                                    {
                                        <button type="button" title="" id="change-plan-settings" name="ChangePlanSettings" onclick="openPlanPickupPartial();" class="primary-button">
                                            Change Plan
                                        </button>

                                    }
                                }
                                else
                                {
                                    <span>
                                        @Model.PlanName
                                    </span>
                                    <div class="alert-note">(Note: Subscription plan cannot be changed due to failed payments. <a href='@Url.Action("GetCardDetail", "Payment")' id=''>Update your payment details.</a>)</div>
                                }
                            </td>
                        </tr>
                        @if (isDeveloperLicense)
                        {
                            <tr>
                                <td>
                                    No.of Developers
                                </td>
                                <td>
                                    <span style="float: left; padding: 6px 10px 0px 0px;">
                                        @tenantInfo.Quantity
                                    </span>
                                    <button type="button" onclick="openBuyAdditionalDeveloperQuantityPartial()" class="primary-button">
                                        ADD DEVELOPER COUNT
                                    </button>
                                </td>
                            </tr>
                        }

                        <tr>
                            <td>Price</td>
                            <td>
                                @{
                                    if (licenseSettings.IsKcBenefit || licenseSettings.PlanId == (int)SaaSPlan.SingleUserPlan || licenseSettings.PlanId == (int)SaaSPlan.BoldReports_Cloud_SingleUserPlan)
                                    {
                                        <span>Free subscription</span>
                                    }
                                    else
                                    {
                                        if (@Model.Status.ToLower() == "trialing" || @Model.Status.ToLower() == GlobalAppSettings.GetDescription(TenantStatus.Trial).ToLower() || @Model.Status.ToLower() == GlobalAppSettings.GetDescription(TenantStatus.ActivePaymentRequired).ToLower())
                                        {
                                            <span>Free until @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo).</span>
                                            if (!ViewBag.IsSubscriptionCancel)
                                            {
                                                if (Model.IsDynamicPricing)
                                                {
                                                    <span> Will be charged $@Model.Price on the month @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo)</span>
                                                }
                                                else
                                                {
                                                    <span>Will be charged $@Model.Price from @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo) every @Model.Interval.</span>
                                                }
                                            }
                                        }
                                        else if (@Model.Status.ToLower() == GlobalAppSettings.GetDescription(TenantStatus.TrialNotStarted).ToLower())
                                        {
                                            if (Model.Interval.ToLower() == GlobalAppSettings.GetDescription(BillingInterval.Monthly).ToLower() || Model.Interval.ToLower() == GlobalAppSettings.GetDescription(BillingInterval.Yearly).ToLower())
                                            {
                                                if (Model.IsDynamicPricing)
                                                {
                                                    <span>Will be charged $@Model.Price for upcoming @Model.Interval</span>
                                                }
                                                else
                                                {
                                                    <span>$@Model.Price / @Model.Interval</span>
                                                }
                                            }
                                            else
                                            {
                                                <span>$@Model.Price every @Model.Interval</span>
                                            }
                                            <span>Your trial period has not yet started.</span>
                                        }
                                        else
                                        {
                                            if (!Model.IsDynamicPricing)
                                            {
                                                if (Model.Interval.ToLower() == GlobalAppSettings.GetDescription(BillingInterval.Monthly).ToLower() || Model.Interval.ToLower() == GlobalAppSettings.GetDescription(BillingInterval.Yearly).ToLower())
                                                {
                                                    <span>$@Model.Price / @Model.Interval</span>
                                                }
                                                else
                                                {
                                                    <span>$@Model.Price every @Model.Interval</span>
                                                }
                                            }
                                            if (!ViewBag.IsSubscriptionCancel)
                                            {
                                                if (Model.IsDynamicPricing)
                                                {
                                                    <span> Will be charged $@Model.Price on the month @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo)</span>
                                                }
                                                else
                                                {
                                                    <span>Will be charged next on @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo) and after every @Model.Interval.</span>
                                                }
                                            }
                                        }
                                    }
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>Created</td>
                            <td>@globalAppSettings.GetDateFormat(Model.CreatedDate, _clientDateTimeInfo)</td>
                        </tr>
                        <tr>
                            <td>Billing cycle</td>
                            @if (licenseSettings.IsKcBenefit || (licenseSettings.PlanId == (int)SaaSPlan.SingleUserPlan && !isCardExist) || Model.Status.ToLower() == GlobalAppSettings.GetDescription(TenantStatus.TrialNotStarted).ToLower() || Model.Status.ToLower() == GlobalAppSettings.GetDescription(TenantStatus.Trial).ToLower() || (ViewBag.IsSubscriptionCancel && !isCardExist))
                            {
                                <td>-</td>
                            }
                            else
                            {
                                <td>@globalAppSettings.GetDateFormat(Model.BillingCycle.StartDate, _clientDateTimeInfo) to @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo)</td>
                            }
                        </tr>
                        <tr>
                            <td>Last payment</td>
                            @if (Model.LastPaymentDate != null && !licenseSettings.IsKcBenefit && isCardExist)
                            {
                                <td>@globalAppSettings.GetDateFormat(Model.LastPaymentDate.Value, _clientDateTimeInfo)</td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                        </tr>
                        <tr>
                            <td>Status</td>
                            @if (tenantStatus == TenantStatus.Trial || tenantStatus == TenantStatus.ActivePaymentRequired || tenantStatus == TenantStatus.TrialNotStarted)
                            {
                                <td><span class="label label-primary status-label">Trial / Benefits</span></td>
                            }
                            else if (tenantStatus == TenantStatus.MarkedForSuspension || tenantStatus == TenantStatus.Suspended)
                            {
                                <td><span class="label label-warning status-label">Suspended</span></td>
                            }
                            else if (tenantStatus == TenantStatus.Active || tenantStatus == TenantStatus.ActiveBenefits || tenantStatus == TenantStatus.ActiveDTPayment)
                            {
                                <td><span class="label label-success status-label">Active</span></td>
                            }
                            else if (tenantStatus == TenantStatus.MarkedForDeletion)
                            {
                                <td><span class="label label-danger status-label">Marked for deletion</span></td>
                            }
                            else if (tenantStatus == TenantStatus.SubscriptionCancelled)
                            {
                                <td><span class="label label-warning status-label">Subscription Cancelled</span></td>
                            }
                            else
                            {
                                <td>-</td>
                            }
                        </tr>
                    </table>
                </div>
                <div class="admin-page-actions col-lg-12 col-md-12 no-margin">
                    <button type="button" title="" id="change-subscription-settings" name="ChangeSubscriptionSettings" onclick="openSubscriptionSettings();" class="secondary-button cancel-subscription-button pull-right disable-subscription">
                        Cancel my subscription
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>
<div id="subscription-settings-container">
    <div id="cancel-subscription-container" class="admin-page-container hide-block">
        <div id="cancel-subscription-block" class="col-xs-12 no-padding">
            <div class="col-md-12 import-area admin-page-header">
                <hgroup class="col-lg-6 col-md-6 col-sm-6 col-xs-12 no-padding">
                    <h1 class="h2 page-title">CANCEL MY SUBSCRIPTION</h1>
                    <h5 class="page-description">Cancel your subscription to @productName</h5>
                </hgroup>
            </div>
            <form id="cancel-subscription-form" class="col-md-12 form-horizontal no-padding" autocomplete="off">
                <div class="admin-page-body subscription-content">
                    <span>Please click on the cancel subscription button below to end your subscription.</span>
                    <span>Your subscription will terminate at the end of this billing period. You will continue to have access until your subscription end date – @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo).</span>
                    <span>You can reactivate your account before @globalAppSettings.GetDateFormat(Model.BillingCycle.EndDate, _clientDateTimeInfo). <b>After this date your subscription and all data stored under it will be completely deleted from our system.</b></span>
                    <span>We are sad to see you go.  Please consider us for your future needs. We appreciate your business.</span>
                    <div class="admin-page-actions col-lg-12 col-md-12 no-margin">
                        <div id="cancelsubscription-group-button">
                            <div class="col-lg-12 col-md-12 no-margin">
                                @Html.CheckBox("deactivesubscription", new { @class = "material-checkbox" })
                                @Html.Label("deactivesubscription", "I choose to cancel my subscription", new { @class = "pull-right toggle-space" })
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 no-margin">
                            <button type="button" title="" name="ChangeSubscriptionSettings" onclick="redirectToSubscriptionPlan();" class="primary-button pull-right">
                                Go back
                            </button>
                            <button type="button" title="" id="enable-cancelsubscription" onclick="@(isInternalUser ? "cancelSubscription()" : "cancelSubscriptionFeedback()")" class="secondary-button cancel-subscription-button pull-right disable-subscription">
                                Cancel my subscription
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div id="reactivate-subscription-container" class="admin-page-container hide-block">
        <div id="reactivate-subscription-block" class="col-xs-12 no-padding">
            <div class="col-md-12 import-area admin-page-header">
                <hgroup class="col-lg-6 col-md-6 col-sm-6 col-xs-12 no-padding">
                    <h1 class="h2 page-title">REACTIVATE MY SUBSCRIPTION</h1>
                    <h5 class="page-description">Continue the subscription for @productName</h5>
                </hgroup>
            </div>
            <form id="reactivate-subscription-form" class="col-md-12 form-horizontal no-padding" autocomplete="off">
                <div class="admin-page-body subscription-content">
                    <span>We are happy to see you continue using @productName.</span>
                    @if (isCardExist)
                    {
                        <span>Your billing period and billed amount is not affected by this action as you have already paid for the current billing cycle. Click <b>Reactivate my subscription</b> to continue using @((TenantType)tenantInfo.TenantTypeId == TenantType.BoldBIOnPremise || (TenantType)tenantInfo.TenantTypeId == TenantType.BoldBI ? "dashboards" : "reports").</span>
                    }
                    else
                    {
                        <span>Your billing period and billed amount is not affected by this action if you have already paid for the current billing cycle. Click <b>Reactivate my subscription</b> to continue using @((TenantType)tenantInfo.TenantTypeId == TenantType.BoldBIOnPremise || (TenantType)tenantInfo.TenantTypeId == TenantType.BoldBI ? "dashboards" : "reports").</span>
                    }

                    <div class="admin-page-actions col-lg-12 col-md-12 no-margin">
                        <button type="button" title="" onclick="redirectToSubscriptionPlan();" class="secondary-button pull-right">
                            Go back
                        </button>
                        <button type="button" title="" onclick="activateSubscription();" class="primary-button reactivate-subscription-button pull-right">
                            Reactivate my subscription
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@await Html.PartialAsync("../Subscription/_UpdateQuantity", @Model)
<script>
    var applyKcCouponUrl = "@Url.Action("ApplyKcOffer", "Payment")";
    var createSubscriptionCardUrl = "@Url.Action("AddPaymentDetail", "Payment")";
    var updateSubscriptionUrl = "@Url.Action("UpdateAddonInStripe", "Payment")";
    var isCardExist = "@isCardExist";
    var quantity = "@quantity";
    var tenantQuantity = "@tenantInfo.Quantity";
    $(document).ready(function () {
        $("#issubscriptioncancel").text('@ViewBag.IsSubscriptionCancel');
        validateSubscriptionStatus();
        if ('@Model.Status.ToLower()' != "trialing") {
            $("#subscription-information table").removeClass("table-section");
            $("#subscription-information table").addClass("active-subscription-table-section");
            $("#plan-details-contianer table").removeClass("table-section");
            $("#plan-details-contianer table").addClass("active-subscription-table-section");
        }
    });
</script>
