@{
    var helpLinkData = ViewBag.TenantType == TenantType.BoldBIOnPremise ? "dashboards" : "reports";
    var dbnameHelp = ViewBag.TenantType == TenantType.BoldBIOnPremise ? T["This is where we store the BI tenants, dashboard resources, and data store configuration."] : T["This is where we store the Bold Reports tenants, reports resources and their access permissions."];
    var sqlParameter = await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.MSSQL_Connection_Parameters);
}
<div id="simple_tab_db_name">
    <div class="txt-holder database-name center-align">
        <input type="text" id="txt-dbname" name="dbname" class="" onkeyup="return forceToLower(this);" placeholder="@T["Database name"]" />
        <span class="startup-validation validation-txt-errors"></span>
            <div class="info-content txt-box-info db-name-info">@dbnameHelp</div>
    </div>
    <div class="sql-server-existing-db center-align">
        <div class="txt-holder databse-dropdown text-wrap database-dropdown-margin center-align">
            <input type="text" id="database-name" name="databaseName" class="" placeholder="@T["Database name"]" />
            <span class="startup-validation validation-txt-errors"></span>
                <div class="info-content txt-box-info db-name-info">@dbnameHelp</div>
        </div>
    </div>
</div>

<div id="advanced_tab_db_name">
    <div class="txt-holder database-name center-align">
        <input type="text" id="server-dbname" name="serverdbname" class="" onkeyup="return forceToLower(this);" placeholder="@T["Server database name"]" />
        <span class="startup-validation validation-txt-errors"></span>
        <div class="info-content txt-box-info server-db-info">@Html.Raw(string.Format(T["This is where we store the {0}{1}{2}, users, and their resource access permissions."].Value, "<span class='tenant-content'>", helpLinkData, "</span>"))
        </div>
    </div>
    <div class="sql-server-existing-db center-align">
        <div class="txt-holder  text-wrap database-dropdown-margin center-align">
            <input type="text" id="server-existing-dbname" name="serverexistingdbname" class="" placeholder="@T["Server database name"]" />
            <span class="startup-validation validation-txt-errors"></span>
            <div class="info-content txt-box-info server-db-info">@Html.Raw(string.Format(T["This is where we store the {0}{1}{2}, users, and their resource access permissions."].Value, "<span class='tenant-content'>", helpLinkData, "</span>"))
            </div>
        </div>
    </div>
    <div class="txt-holder database-name center-align data-store-hide">
        <input type="text" id="imdbname" name="designerdbname" class="" onkeyup="return forceToLower(this);" placeholder="@T["Datastore database name"]" />
        <span class="startup-validation validation-txt-errors"></span>
        <div class="info-content txt-box-info imdb-info">@T["This is where we store the authentication information and data extracted from REST data sources."]</div>
    </div>
    <div class="sql-server-existing-db center-align data-store-existing-db-hide">
        <div class="txt-holder  text-wrap database-dropdown-margin center-align">
            <input type="text" id="imdb-existing-dbname" name="designerexistingdbname" class="" placeholder="@T["Datastore database name"]" />
            <span class="startup-validation validation-txt-errors"></span>
            <div class="info-content txt-box-info imdb-info">@T["This is where we store the authentication information and data extracted from REST data sources."]</div>
        </div>
    </div>
</div>