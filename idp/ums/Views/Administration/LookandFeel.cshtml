@using Syncfusion.Server.Base.LicenseManagement.Core
@{
    ViewBag.Title = "[[[Look and Feel]]] - " + GlobalAppSettings.SystemSettings.OrganizationName;
    var fonts = ViewBag.FontList as List<SelectListItem>;
    var selectedFont = fonts.FirstOrDefault(x => x.Selected);
    var applicationThemes = ViewBag.ApplicationTheme as List<SelectListItem>;
    var selectedapplicationTheme = new SelectListItem()
    {
        Text = "Default",
        Value = "Default",
        Selected = true
    };
    if (applicationThemes.FirstOrDefault(x => x.Selected) != null && applicationThemes.FirstOrDefault(x => x.Selected).Selected)
    {
        selectedapplicationTheme = applicationThemes.FirstOrDefault(x => x.Selected);
    }

    var dashboardThemes = ViewBag.DashboardTheme as List<SelectListItem>;
    var selecteddashboardTheme = new SelectListItem()
    {
        Text = "Default",
        Value = "Default",
        Selected = true
    };
    if (dashboardThemes.FirstOrDefault(x => x.Selected) != null && dashboardThemes.FirstOrDefault(x => x.Selected).Selected)
    {
        selecteddashboardTheme = dashboardThemes.FirstOrDefault(x => x.Selected);
    }
}

@section styles{
    <link rel="stylesheet" href="~/bundles/css/look-and-feel.css" asp-append-version="true" />
}
@section scripts{

    <script src="~/bundles/js/look-and-feel.js" asp-append-version="true"></script>
    <script>
        var fontReferenceUrl = "@Url.Action("GetFontCss", "LookFeel")";
        var applicationThemeReferenceUrl = "@Url.Action("GetApplicationTheme", "LookFeel")";
        var updateFontThemeSettingsUrl = "@Url.Action("UpdateLookAndFeelSettings", "Administration")";
        var selectedFontText = "@selectedFont.Text";
        var selectedFontValue = "@selectedFont.Value";
        var selectedApplicationThemeText = "@selectedapplicationTheme.Text";
        var selectedApplicationThemeValue = "@selectedapplicationTheme.Value";
        var selectedDashboardThemeText = "@selecteddashboardTheme.Text";
        var selectedDashboardThemeValue = "@selecteddashboardTheme.Value";
        var applicationThemes = "@applicationThemes";
        var dashboardThemes = "@dashboardThemes";
         var baseRootUrl = "@Url.Content("~/")";
    </script>
}

@section MainSection{

    @await Html.PartialAsync("_AdminMenu")
    @await Html.PartialAsync("_uploadfont")
    @await Html.PartialAsync("_UploadApplicationTheme")
    @await Html.PartialAsync("_UploadDashboardTheme")

    <div id="look-and-feel-container" class="col-xs-12 admin-page-content-container">
        <div class="admin-page-content col-xs-12 no-padding">
            <div id="look-and-feel-header" class="col-xs-12 admin-page-header">
                <hgroup class="admin-page-header-description">
                    <h1 class="h2 page-title">
                        [[[Look and Feel]]]
                    </h1>
                    <h5 class="page-description">
                        [[[Customize the look and feel of the application.]]]
                    </h5>
                </hgroup>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 admin-page-body">
                @await Html.PartialAsync("_FontSection", "", new ViewDataDictionary(ViewData) { { "hasBoldBIOnPremise", GlobalAppSettings.IsBoldBIOnPremise }, { "hasBoldReportsOnPremise", GlobalAppSettings.IsBoldReportsOnPremise }, { "isCommonDeployment", GlobalAppSettings.IsCommonDeployment } })
                @await Html.PartialAsync("_ThemeSection", "", new ViewDataDictionary(ViewData) { { "hasBoldBIOnPremise", GlobalAppSettings.IsBoldBIOnPremise }, { "hasBoldReportsOnPremise", GlobalAppSettings.IsBoldReportsOnPremise }, { "isCommonDeployment", GlobalAppSettings.IsCommonDeployment } })
            </div>
            <div class="admin-page-footer col-xs-12">
                <div class="admin-page-actions col-lg-12 col-md-12">
                    <button class="secondary-button pull-right" id="cancel-settings">[[[Cancel]]]</button>
                    <button type="button" id="update-lookandfeel-settings" name="update-lookandfeel-settings" class="primary-button pull-right">
                        <span>[[[Save]]]</span>
                    </button>
                </div>
            </div>
        </div>
        @await Html.PartialAsync("../Shared/_FooterOnPremise")
    </div>
}