@{
    var urlRegEx = @"/(?:^|[ \t])((https?:\/\/)?(?:localhost|[\w-]+(?:\.[\w-]+)+)(:\d+)?(\/\S*)?)/";
    var enableSigningKeyOptions = !string.IsNullOrEmpty(ViewBag.JwtSettings.JwtSettings.SigningKey);
}
<div role="tabpanel" class="tab-pane" id="jwt-settings-tab">
    <div id="jwt-page-body" class="col-lg-12 col-md-12 col-sm-12 admin-page-body no-padding">
        <form id="jwt-setting" name="jwtSettingsForm" class="auth-settings-form col-lg-12 col-md-12 col-sm-12 no-padding" method="post" enctype="multipart/form-data" autocomplete="off">
            <input type="hidden" name="jwtAuthenticationProvider" value="@ViewBag.JwtSettings.AuthProvider">
            <input type="hidden" name="jwtLogo" value="">
            <div class="col-md-12 form-group">
                <div class="col-md-12 no-padding no-margin enable-jwt-label">
                    @Html.Label("enable-jwt", "[[[Enabled]]]", new { @class = "app-textbox-label col-md-3 no-margin" })
                    <div class="col-md-9 form-input-field pull-left switch-align">
                        <span class="material-switch text-left">
                            @if ((bool)ViewBag.JwtSettings.IsEnabled)
                            {
                                <input type="checkbox" id="enable-jwt" name="jwtIsEnabled" ng-model="jwtSettings.jwtIsEnabled" ng-init="jwtSettings.jwtIsEnabled=true" ng-click="hideValidationMessage(jwtSettings.jwtIsEnabled, 'jwt')" ng-checked=true />
                            }
                            else
                            {
                                <input type="checkbox" id="enable-jwt" name="jwtIsEnabled" ng-model="jwtSettings.jwtIsEnabled" ng-init="jwtSettings.jwtIsEnabled=false" ng-click="hideValidationMessage(jwtSettings.jwtIsEnabled, 'jwt')" />
                            }
                            <label for="enable-jwt" class="label-primary"></label>
                        </span>
                        <span class="validation-message"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="col-md-12 no-padding no-margin">
                    <label class="app-textbox-label col-md-3 no-margin">[[[Name]]]<span class="mandatory">*</span></label>
                    <div class="col-md-5 no-margin form-input-field" ng-class="(jwtSettingsForm.jwtName.$dirty && jwtSettingsForm.jwtName.$invalid) ? 'has-error' : ''">
                        <input type="text" class="form-control col-md-6 no-margin" ng-model="jwtName" ng-init="jwtName='@ViewBag.JwtSettings.JwtSettings.Name'" ng-maxlength="20" name="jwtName" placeholder="[[[Name]]]" id="jwt-provider-name" data-ng-disabled="!jwtSettings.jwtIsEnabled" required />
                        <span class="validation-message top-padding" ng-show="jwtSettingsForm.jwtName.$error.maxlength && jwtSettingsForm.jwtName.$dirty && jwtSettings.jwtIsEnabled">[[[Provider name is too long. Must be no more than 20 characters.]]]</span>
                        <span class="validation-message top-padding" ng-show="jwtSettingsForm.jwtName.$error.required && jwtSettingsForm.jwtName.$dirty && jwtSettings.jwtIsEnabled">[[[Please enter the name.]]]</span>
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="col-md-12 no-padding no-margin">
                    <label class="app-textbox-label col-md-3 no-margin">[[[Provider Logo]]]<span class="mandatory">*</span></label>
                    <div class="col-md-9 logo-container">
                        <div id="jwt-image-upload-box" class="auth-image-upload-box">
                            <div class="js-image-preview" style="background-image:{{jwtLogoUrl}}"></div>
                            <div class="upload-options">
                                <label>
                                    <span>[[[Change logo]]]</span>
                                    <input type="file" class="image-upload" accept="image/png,image/jpeg,image/svg+xml" ng-model="jwtLogoUrl" ng-init="jwtLogoUrl='@ViewBag.JwtSettings.LogoUrl'" name="jwtLogoUrl" data-ng-disabled="!jwtSettings.jwtIsEnabled" required />
                                </label>
                            </div>
                        </div>
                        <span class="validation-message top-padding" ng-show="!jwtSettingsForm.isValidjwtLogoUrl && jwtSettings.jwtIsEnabled"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="col-md-12 no-padding no-margin">
                    <label class="app-textbox-label col-md-3 no-margin">[[[Remote Login URL]]]<span class="mandatory">*</span></label>
                    <div class="col-md-5 no-margin form-input-field" ng-class="(jwtSettingsForm.jwtLoginUrl.$dirty && jwtSettingsForm.jwtLoginUrl.$invalid) ? 'has-error' : ''">
                        <input type="text" class="form-control col-md-6 no-margin" ng-model="jwtLoginUrl" ng-init="jwtLoginUrl='@ViewBag.JwtSettings.JwtSettings.LoginUrl'" ng-pattern="@urlRegEx" name="jwtLoginUrl" placeholder="[[[Remote Login URL]]]" id="jwt-authority" data-ng-disabled="!jwtSettings.jwtIsEnabled" required />
                        <span class="validation-message top-padding" ng-show="jwtSettingsForm.jwtLoginUrl.$error.required && jwtSettingsForm.jwtLoginUrl.$dirty && jwtSettings.jwtIsEnabled">[[[Please enter the login url.]]]</span>
                        <span class="validation-message top-padding" ng-show="jwtSettingsForm.jwtLoginUrl.$error.pattern && jwtSettingsForm.jwtLoginUrl.$dirty && jwtSettings.jwtIsEnabled">[[[Please enter a valid login url.]]]</span>
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="col-md-12 no-padding no-margin">
                    <label class="app-textbox-label col-md-3 no-margin">[[[Remote Logout URL]]]</label>
                    <div class="col-md-5 no-margin form-input-field" ng-class="(jwtSettingsForm.jwtLogOutUrl.$dirty && jwtSettingsForm.jwtLogOutUrl.$invalid) ? 'has-error' : ''">
                        <input type="text" class="form-control col-md-6 no-margin" ng-model="jwtLogOutUrl" ng-init="jwtLogOutUrl='@ViewBag.JwtSettings.JwtSettings.LogOutUrl'" ng-pattern="@urlRegEx" name="jwtLogOutUrl" placeholder="[[[Remote Logout URL(Optional)]]]" id="jwt-client-id" data-ng-disabled="!jwtSettings.jwtIsEnabled" />
                        <span class="validation-message top-padding" ng-show="jwtSettingsForm.jwtLogOutUrl.$error.pattern && jwtSettingsForm.jwtLogOutUrl.$dirty && jwtSettings.jwtIsEnabled">[[[Please enter a valid logout url.]]]</span>
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-group">
                <div class="col-md-12 no-padding no-margin">
                    <label class="app-textbox-label col-md-3 no-margin">[[[Signing Key]]]</label>
                    <div class="col-md-5 no-margin form-input-field" ng-class="(jwtSettingsForm.jwtSigningKey.$dirty && jwtSettingsForm.jwtSigningKey.$invalid) ? 'has-error' : ''">
                        <input type="password" id="jwt-signing-key" readonly="" class="form-control col-md-6 no-margin signing-key-values @(enableSigningKeyOptions ? "signing-key-width" : string.Empty)" name="jwtSigningKey" placeholder="&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;" />
                        <button class="su su-copy copy-signing-key-values @(enableSigningKeyOptions ? string.Empty : "display-none")" id="copy-signing-key" onclick="fnCopySigningKey('#jwt-signing-key','#copy-signing-key')" data-toggle="tooltip" data-original-title="[[[Click to copy]]]"></button>
                        <button class="su su-eye show-hide-password copy-signing-key-values @(enableSigningKeyOptions ? string.Empty : "display-none")" id="show-signing-key" data-toggle="tooltip" data-original-title="[[[Click to view]]]"></button>
                        <button class="su su-sync text focus copy-signing-key-values @(enableSigningKeyOptions ? string.Empty : "display-none")" id="generate-signing-key" onclick="onRegenerateSigningKeyDialogOpen()" data-toggle="tooltip" data-original-title="[[[Click to Regenerate]]]"></button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>