@using Syncfusion.Server.Base.DataClasses.Core;
@using Syncfusion.Server.Base.LicenseManagement.Core;
@using TimeZoneConverter;
@model ManageLicense
@{
    ViewBag.Title = "[[[Manage License - ]]]" + GlobalAppSettings.SystemSettings.OrganizationName;
    var boldBiLicense = Model != null && Model.LicensePlans != null ? Model.LicensePlans.Where(x => x.TenantType == TenantType.BoldBIOnPremise).FirstOrDefault() : null;
    var boldReportsLicense = Model != null && Model.LicensePlans != null ? Model.LicensePlans.Where(x => x.TenantType == TenantType.BoldReportsOnPremise).FirstOrDefault() : null;
    var buildInfoBi = Model != null && Model.BuildInfo != null ? Model.BuildInfo.Where(x => x.Name.ToLower() == AppBranding.Bold.Identifier).FirstOrDefault() : null;
    var buildInfoReports = Model != null && Model.BuildInfo != null ? Model.BuildInfo.Where(x => x.Name.ToLower() == AppBranding.BoldReports.Identifier).FirstOrDefault() : null;
    var isBoldBiLicenseAvailable = boldBiLicense != null;
    var isBoldReportsLicenseAvailable = boldReportsLicense != null;
    var isAzureApplication = string.IsNullOrEmpty(GlobalAppSettings.Configuration.GetSection("AppSettings")["IsAzureApplication"]) ? false : Convert.ToBoolean(GlobalAppSettings.Configuration.GetSection("AppSettings")["IsAzureApplication"]);
    var licenseExpired = await LicenseManagement.ValidateBoldLicense();
}

@section styles{
    <link rel="stylesheet" href="~/bundles/css/license-settings.css" asp-append-version="true" />
}

@section scripts{
    <script src="~/bundles/js/licenese-settings.js" asp-append-version="true"></script>
    <script src="~/bundles/js/offline-license-update.js" asp-append-version="true"></script>

    <script>

        var isBoldBILicenseExpired = @Json.Serialize(licenseExpired.IsBoldBILicenseExpired);
        var updateLicenseKeyUrl = "@Url.Action("ApplyLicenseKey", "Administration")";
        var isBoldBiLicenseAvailable = "@isBoldBiLicenseAvailable";
        var isBoldReportsLicenseAvailable = "@isBoldReportsLicenseAvailable";
        var validateLicenseKeyUrl = "@Url.Action("ValidateLicenseKey", "Administration")";
        var isBoldReportsLicenseExpired = @Json.Serialize(licenseExpired.IsBoldReportsLicenseExpired);
    </script>
}

@section MainSection{
    @await Html.PartialAsync("_AdminMenu")

    <div id="license-settings-container" class="col-xs-12 admin-page-content-container">
        <div class="admin-page-content col-xs-12 no-padding">
            <div class="col-md-12 admin-page-header">
                <hgroup class="admin-page-header-description">
                    <h1 class="h2 page-title">[[[MANAGE LICENSE]]]</h1>
                    <h5 class="page-description">[[[Managing the license and plan for the application]]]</h5>
                </hgroup>
            </div>
            @if (Model != null && Model.LicensePlans != null)
            {
                <div class="col-xs-12 no-padding lic-page-nav-bar">
                    <ul id="license-tab-nav" class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active">
                            <a href="#bold-bi-tab" id="bold-bi" aria-controls="bold-bi-tab" role="tab" data-toggle="tab">Embedded BI</a>
                        </li>
                        <li role="presentation">
                            <a href="#bold-reports-tab" id="bold-reports" aria-controls="bold-reports-tab" role="tab" data-toggle="tab">Enterprise Reporting</a>
                        </li>
                    </ul>
                </div>
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="bold-bi-tab">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 admin-page-body tab-data">
                            @if (boldBiLicense != null && boldBiLicense.TenantInfoId != Guid.Empty)
                            {
                                <form id="license-settings-form" class="col-md-12 form-horizontal no-padding" autocomplete="off">
                                    @if (licenseExpired.IsBoldBILicenseExpired)
                                    {
                                    <div class="renew-container">
                                        <span class="su su-warning-alt"></span>
                                        <span class="renew-content">@licenseExpired.BoldBIValidationMessage</span>
                                        <span><a href="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.LicenseError)">[[[Need help?]]]</a></span>
                                    </div>
                                    }
                                    <div id="details-information">
                                        <div class="col-xs-6 no-margin no-padding">
                                            <h3 class="title sub-title display-inline">[[[Subscription Information]]]</h3>
                                            <a license-service-url="@($"{ViewBag.GetLicenseUrl}{(int)TenantType.BoldBIOnPremise}")" data-offlinelicense-url="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.Downloads, TenantType.BoldBIOnPremise)" data-tenant-type="@((int)TenantType.BoldBIOnPremise)" class="title edit-link display-inline">[[[Edit Subscription]]]</a>
                                        </div>
                                        <div class="col-xs-6 no-margin no-padding" id="subscription-information">
                                            <table class="table active-subscription-table-section">
                                                <tr>
                                                    <td class="heading">[[[Plan & Subscription]]]</td>
                                                    <td class="title">
                                                        <p class="plan">@boldBiLicense.SubscriptionInfo.Plan.PlanName</p>
                                                        <p class="display-none">@boldBiLicense.SubscriptionInfo.TenantId</p>
                                                        <p id="subscription-id-bi"><a class="subscription-link" href="@CloudAppConfig.GetOnPremiseSubscriptionUrl(boldBiLicense.SubscriptionInfo.TenantId)" target="_blank">@boldBiLicense.SubscriptionInfo.TenantId</a></p>
                                                        <button data-toggle="tooltip" class="pull-right secondary-button" data-original-title="[[[Click to copy]]]" onclick="copyToClipboard('#subscription-id-bi', '#subscription-copy-bi')" id="subscription-copy-bi">[[[Copy]]]</button>
                                                        <button class="pull-right secondary-button" id="change-subscription" license-service-url="@($"{ViewBag.GetLicenseUrl}{(int)TenantType.BoldBIOnPremise}")" data-offlinelicense-url="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.Downloads, TenantType.BoldBIOnPremise)" data-tenant-type="@((int)TenantType.BoldBIOnPremise)">[[[Refresh License]]]</button>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>[[[Licensed To]]]</td>
                                                    <td>@boldBiLicense.LicenseSettings["LicensedTo"]</td>
                                                </tr>
                                                @if (!boldBiLicense.SubscriptionInfo.IsPerpetualLicense)
                                                {
                                                    <tr>
                                                        <td>[[[Expiry Date]]]</td>
                                                        <td>@boldBiLicense.SubscriptionInfo.ExpiryDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td>[[[License Version]]]</td>
                                                    <td>@boldBiLicense.SubscriptionInfo.Version</td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </form>
                            }
                            else if (buildInfoBi != null && buildInfoBi.IsCommonLogin)
                            {
                                <div class="new-start-container">
                                    <div class="new-start-container-bg">
                                        <span class="first-content">[[[Welcome to ]]]<span>Embedded BI</span> Server</span>
                                        <span class="second-content">
                                            [[[See Clearly. Act Boldly.]]]
                                        </span>
                                        <div class="btn-holder">
                                            <button type="button" id="online-license-bi" license-service-url="@($"{ViewBag.GetLicenseUrl}{(int)TenantType.BoldBIOnPremise}")" class="primary-button content-display">[[[Login to activate account]]]</button>
                                        </div>
                                        <div class="col-xs-12 align-center">
                                            <span class="link-header">Behind Firewall? <a class="offline-license-acion" data-offlinelicense-url="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.Downloads, TenantType.BoldBIOnPremise)" data-tenant-type="@((int)TenantType.BoldBIOnPremise)">[[[Upload license file]]]</a></span>
                                        </div>
                                        @if (!CloudAppConfig.IsHideHelpLink)
                                        {
                                            <a class="help col-xs-12" href="@(await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.SetupHelp, TenantType.BoldBIOnPremise))" target="_blank">[[[Need setup help?]]]</a>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="no-license-container">
                                    <div class="no-license-container-bg">
                                        <img class="no-license-image" src="@Url.Content("~/images/static/startup/manage-license-bi.png")" />
                                        <p class="no-license-description">[[[You do not have a]]] Embedded BI [[[license.]]]</p>
                                        <p class="no-license-rediect">[[[Don’t have an account?]]] <a class="no-license-signup" target="_blank" href="@GlobalAppSettings.Configuration.GetSection("AppSettings")["documentation:BaseUri"]/?id=64&mode=on-premise">[[[Sign Up]]]</a></p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div role="tabpanel" class="tab-pane" id="bold-reports-tab">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 admin-page-body tab-data">
                            @if (boldReportsLicense != null && boldReportsLicense.TenantInfoId != Guid.Empty)
                            {
                                <form id="license-settings-form" class="col-md-12 form-horizontal no-padding" autocomplete="off">
                                    @if (licenseExpired.IsBoldReportsLicenseExpired)
                                    {
                                        <div class="renew-container">
                                            <p class="renew-content">@licenseExpired.BoldReportsValidationMessage</p>
                                            <span class="su su-warning-alt"></span>
                                        </div>
                                    }
                                    <div id="details-information">
                                        <div class="col-xs-6 no-margin no-padding">
                                            <h3 class="title sub-title display-inline">[[[Subscription Information]]]</h3>
                                            <a license-service-url="@($"{ViewBag.GetLicenseUrl}{(int)TenantType.BoldReportsOnPremise}")" data-offlinelicense-url="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.Downloads, TenantType.BoldReportsOnPremise)" data-tenant-type="@((int)TenantType.BoldReportsOnPremise)" class="title edit-link display-inline">[[[Edit Subscription]]]</a>
                                        </div>                                      
                                        <div class="col-xs-7 no-margin no-padding" id="subscription-information">
                                            <table class="table active-subscription-table-section">
                                                <tr>
                                                    <td class="heading">[[[Plan & Subscription]]]</td>
                                                    <td class="title">
                                                        <p class="plan">@boldReportsLicense.SubscriptionInfo.Plan.PlanName</p>
                                                        <p class="display-none">@boldReportsLicense.SubscriptionInfo.TenantId</p>
                                                        <p id="subscription-id-reports"><a class="subscription-link" href="@CloudAppConfig.GetOnPremiseSubscriptionUrl(boldReportsLicense.SubscriptionInfo.TenantId)" target="_blank">@boldReportsLicense.SubscriptionInfo.TenantId</a></p>
                                                        <button data-toggle="tooltip" class="pull-right secondary-button" data-original-title="[[[Click to copy]]]" onclick="copyToClipboard('#subscription-id-reports', '#subscription-copy-bi')" id="subscription-copy-bi">[[[Copy]]]</button>
                                                        <button class="pull-right secondary-button" id="change-subscription" license-service-url="@($"{ViewBag.GetLicenseUrl}{(int)TenantType.BoldReportsOnPremise}")" data-offlinelicense-url="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.Downloads, TenantType.BoldReportsOnPremise)" data-tenant-type="@((int)TenantType.BoldReportsOnPremise)">[[[Refresh License]]]</button>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>[[[Licensed To]]]</td>
                                                    <td>@boldReportsLicense.LicenseSettings["LicensedTo"]</td>
                                                </tr>
                                                @if (!boldReportsLicense.SubscriptionInfo.IsPerpetualLicense)
                                                {
                                                    <tr>
                                                        <td>[[[Expiry Date]]]</td>
                                                        <td>@boldReportsLicense.SubscriptionInfo.ExpiryDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td>[[[License Version]]]</td>
                                                    <td>@boldReportsLicense.SubscriptionInfo.Version</td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </form>
                            }
                            else if (buildInfoReports != null && buildInfoReports.IsCommonLogin)
                            {
                                <div class="new-start-container">
                                    <div class="new-start-container-bg">
                                        <span class="first-content">[[[Welcome to ]]]<span>Enterprise Reporting</span> Server</span>
                                        <span class="second-content">
                                            [[[See Clearly. Act Boldly.]]]
                                        </span>
                                        <div class="btn-holder">
                                            <button type="button" id="online-license-bi" license-service-url="@($"{ViewBag.GetLicenseUrl}{(int)TenantType.BoldReportsOnPremise}")" class="primary-button content-display">[[[Login to activate account]]]</button>
                                        </div>
                                        <div class="col-xs-12 align-center">
                                            <span class="link-header">[[[Behind Firewall?]]] <a class="offline-license-acion" data-offlinelicense-url="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.Downloads, TenantType.BoldReportsOnPremise)" data-tenant-type="@((int)TenantType.BoldReportsOnPremise)">[[[Upload license file]]]</a></span>
                                        </div>
                                        @if (!CloudAppConfig.IsHideHelpLink)
                                        {
                                            <a class="help col-xs-12" href="@await HelpSiteManager.GetHelpSiteUrl(HelpSiteUrlNames.SetupHelp, TenantType.BoldReportsOnPremise)" target="_blank">[[[Need setup help?]]]</a>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="no-license-container">
                                    <div class="no-license-container-bg">
                                        <img class="no-license-image" src="@Url.Content("~/images/static/startup/manage-license-reports.png")" />
                                        <p class="no-license-description ">[[[You do not have a]]] Enterprise Reporting [[[license.]]]</p>
                                        <p class="no-license-rediect">[[[Don’t have an account?]]] <a class="no-license-signup" target="_blank" href="@GlobalAppSettings.Configuration.GetSection("AppSettings")["documentation:BaseUri"]/?id=4046&mode=on-premise">[[[Sign Up]]]</a></p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else
            {
                <p class="no-license-info">
                    [[[License details not found.]]]
                </p>
            }
        </div>
        @await Html.PartialAsync("../Shared/_FooterOnPremise")
    </div>
    <div id="change-subscription-content" class="custom-template"></div>
    <div id="change-subscription-dialog" class="change-subscription-dialog-content" style="visibility: hidden">
        <div class="col-xs-6 no-margin online-change-subscription-content">
            <h3 class="title col-xs-12">[[[From Online]]]</h3>
            <p class="col-xs-12 no-margin">[[[Log into your account portal to change the subscription.]]]</p>
            <button id="online-license-bi" license-service-url="" class="link-button online-change-subscription col-xs-12 no-padding">[[[Log in]]]</button>
        </div>
        <div class="seperator"></div>
        <div class="offline-change-subscription-content col-xs-6 no-margin">
            <h3 class="title col-xs-12">[[[From License File]]]</h3>
            <p class="col-xs-12 no-margin">[[[If you’re behind a firewall, please upload the offline license file.]]] </p>
            <button id="offline-update-bi" data-offlinelicense-url="" data-tenant-type="" class="link-button offline-change-subscription col-xs-12 no-padding">[[[Upload]]]</button>
            <div class="col-xs-12 no-margin help-container">If you don’t have the license file, download it <a id="change-subscription-help" target="_blank" href="">[[[here]]]</a>.</div>
        </div>
    </div>
    @await Html.PartialAsync("_offlinelicenseupdate")
}
