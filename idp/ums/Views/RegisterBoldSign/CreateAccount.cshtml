@{
    Layout = "~/Views/Shared/_Layout.BoldSign.cshtml";
    int planId;
    var requestUrl = new Uri(Context.Request.GetDisplayUrl());
    var requestedPlan = int.TryParse(QueryHelpers.ParseQuery(requestUrl.Query).Keys.Where(x => x == "plan").FirstOrDefault(), out planId);
    var domain = Syncfusion.Server.Base.CloudAppConfig.ProductHomeUrl(TenantType.BoldSign);
    var isAuthenticatedUser = User.Identity.IsAuthenticated;
    var userDetails = ViewBag.UserDetail;
    ViewBag.Title = isAuthenticatedUser ? "Get Started" : "Create Account";
}
@section styles{
    <link rel="stylesheet" href="~/bundles/css/tenant-register-boldsign.css" asp-append-version="true"/>
}

@section scripts{
    <script src="~/bundles/js/boldsign-register.js" asp-append-version="true"></script>
    <script>
        var createAccountUrl = "@Url.Action("CreateAccount", "RegisterBoldSign")";
        var coodeConformationUrl = "@Url.Action("VerifyAccount", "RegisterBoldSign")";
        var getUserInformationUrl = "@Url.Action("GetUserInformation", "RegisterBoldSign")";
        var checkVerificationCodeUrl = "@Url.Action("CheckVerificationCode", "RegisterBoldSign")";
        var resendActivationUrl = "@Url.Action("ResendActivationCode", "RegisterBoldSign")";
        var createPasswordUrl = "@Url.Action("CreatePassword", "RegisterBoldSign")";
        var registerTenantUrl = "@Url.Action("RegisterBoldSignTenant", "RegisterBoldSign")";
        var userDetails = @Html.Raw(Json.Serialize(ViewBag.UserDetail));
        var validateCorporateMailUrl = "@Url.Action("IsCorporateEmail", "Register")";
    </script>
}

@section MainSection {
    <meta name="user:email" content="" />
    <meta name="tenant:type" content="@((int)TenantType.BoldSign)" />
    <div id="create-account-container">
        @if (User.Identity.IsAuthenticated)
        {
            <div id="authenticated-signup">
                <input disabled tabindex="1" value="@User.Claims.First(c => c.Type == ClaimTypes.Email).Value.Contains(CloudAppConfig.AutoGeneratedEmailDomain) ? @string.Empty : @User.Claims.First(c => c.Type == ClaimTypes.Email).Value" id="boldsign-email" class="" placeholder="Business Email address" name="email" />
                <span class="validation-message display-none" id="corporate-email">We require a business email account</span>
                <div id="button-container">
                    <button id="authenticated-create-boldsign-account" class="sf-button sf-primary-button">Get Started with BoldSign</button>
                </div>
                <p class="concent-text">If you intend to set up a new account with a different email address, you can <a href="@Url.Action("Logout", "Accounts")?returnUrl=@WebUtility.UrlEncode(requestUrl.AbsoluteUri)" tabindex="1">do so.</a></p>
            </div>
        }
        else
        {
            <h4>Create your account</h4>
            <p class="email-header">Start your free @ViewBag.PlanTrialDays-day trial</p>
            <input tabindex="1" id="boldsign-email" class="" placeholder="Business Email address" name="email" />
            <span class="validation-message display-none" id="invalid-email">Invalid email address</span>
            <span class="validation-message display-none" id="corporate-email">Please enter a valid business email address</span>
            <span class="validation-message display-none" id="invalid-domain">We could not reach the email address you provided. Please try again with a different email.</span>
            <span class="validation-message display-none" id="existing-user">An account with this email already exists. Click <a href="@Url.Action("Login", "Accounts")?returnUrl=@WebUtility.UrlEncode(requestUrl.AbsoluteUri)"> here </a>to log in with your account.</span>

            <div id="button-container">
                <button id="create-account" class="sf-button sf-primary-button" tabindex="2">Create an Account</button>
            </div>
            <p class="concent-text">By creating an account, I accept Syncfusion's <a href="@domain/privacy" target="_blank" tabindex="3">privacy policy</a> and <a href="@domain/terms-of-use" target="_blank" tabindex="4">terms of use.</a></p>
            <div class="divider-container col-xs-12 display-none">
                <hr class="connect-line-left"><div class="content text-body">OR</div><hr class="connect-line-right">
            </div>
        }
    </div>

    @await Html.PartialAsync("VerifyAccount")
    @await Html.PartialAsync("UserInformation")
    @await Html.PartialAsync("_CancelNewAccountSetup")
}
