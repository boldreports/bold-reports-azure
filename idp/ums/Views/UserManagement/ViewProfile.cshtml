@{
    var userDetail = (User)ViewBag.UserDetail;
    var isWindowsAdUser = (DirectoryType)userDetail.DirectoryTypeId == DirectoryType.WindowsAD;
    var isAduser = ViewBag.IsAdUser;
    var userId = Context.Request.Query["userid"];
    var showResendButton = !userDetail.IsActive && DateTime.UtcNow < userDetail.ActivationExpirationDate && !isAduser && GlobalAppSettings.SystemSettings.ActivationType == ActivationType.EmailActivation ? "show" : "hide";
    var showActivationButton = !userDetail.IsActive && !isAduser && GlobalAppSettings.SystemSettings.ActivationType != ActivationType.EmailActivation ? "show" : "hide";
   

    var idPUrl = GlobalAppSettings.Configuration.GetSection("AppSettings")["IdPUrl"];
    ViewBag.Title = "User Profile - " + GlobalAppSettings.SystemSettings.OrganizationName;
    var imageUrl = GlobalAppSettings.SystemSettings.BaseUrl;
    var dateFormat = string.IsNullOrWhiteSpace(_clientDateTimeInfo.ClientDateTime.DateFormat) ? GlobalAppSettings.SystemSettings.DateFormat : _clientDateTimeInfo.ClientDateTime.DateFormat;
    var userEmail = !userDetail.Email.Contains(CloudAppConfig.AutoGeneratedEmailDomain) ? userDetail.Email : string.Empty;
}

@section styles{
    <link rel="stylesheet" href="~/bundles/css/user-management-profile.css" asp-append-version="true" />
}

@section scripts{
    <script src="~/bundles/js/user-management-profile.js" asp-append-version="true"></script>
   
    <script type="text/javascript">
        var tanantManagementServerResourceUrl = "@GlobalAppSettings.SystemSettings.CDNLink";
        var autoGeneratedEmail = "@CloudAppConfig.AutoGeneratedEmailDomain";
        var checkMailSettingUrl = "@Url.Action("checkmailsettingsexist", "Administration")";
        var activateUserUrl = "@Url.Action("ActivateUser", "UserManagement")";
        var resendactivationcodeUrl = "@Url.Action("resendactivationcode", "UserManagement")";
        var updateprofilepictureUrl = "@Url.Action("updateprofilepicture", "user")";
        var fileUploadUrl = "@Url.Action("Upload", "fileupload")";
        var UpdatePasswordUrl = "@Url.Action("UpdatePassword", "UserManagement")";
        var updateUserProfileUrl = "@Url.Action("UpdateUserProfile", "UserManagement")";
        var emailSettingsUrl = "@Url.Action("e-mail-settings", "administration")";
        var deleteSingleFromUserListUrl = "@Url.Action("DeleteSingleFromUserList", "UserManagement")";
        var userPageUrl = "@Url.Action("Index", "UserManagement")";
        var rootBaseUrl = "@Url.Content("~/")";
        if (rootBaseUrl.toLowerCase() == "/")
            rootBaseUrl = "";
        var avatarUrl = "@(idPUrl + Url.Action("Avatar", "User"))";
        var deleteavatarUrl = "@Url.Action("deleteavatar", "User")";
        var getdefaultavatarUrl = "@Url.Action("getdefaultavatar", "User")";
        var unlockUserUrl = "@Url.Action("UnlockUser", "UserManagement")";
        var makeAdminUrl = "@Url.Action("AssignRole", "UserManagement")";
        var removeAdminUrl = "@Url.Action("RemoveRole", "UserManagement")";
        var deleteFromUserListUrl = "@Url.Action("DeleteFromUserList", "UserManagement")";
        $(document).ready(function () {
            generateProfileAvatar();
            $("#avatar-button-click, #avatar-delete-click").css("display", "none");
            $("#status-dom").hide();

            window.dateFormat = "@dateFormat";
            var fulldata = JSON.parse($("#user-detail").html());
            editUser(fulldata, "@dateFormat");
            if (@ViewBag.EditUserProfile > 0) {
                $("#edit").trigger("click");
            }
            $('[data-toggle="tooltip"]').tooltip();
            $(document).on("click",
                ".popup-close",
                function(e) {
                    $("#profile-picture").attr("src", "@GlobalAppSettings.SystemSettings.CDNLink/images/common/preview.jpg");
                    $('#upload-image').attr("disabled", "disabled");
                    if ($(".img-container").children().hasClass("jcrop-active")) {
                        $('#profile-picture').data("Jcrop").destroy();
                    }
                    $(function() {
                        $("#avatar-upload-box").ejDialog({
                            showOnInit: false,
                            allowDraggable: true,
                            enableResize: false,
                            width: "600px",
                            enableModal: true,
                            showHeader: false,
                            close: "DialogBoxClose",
                            closeOnEscape: true
                        });
                    });
                    eDialog = $("#avatar-upload-box").data("ejDialog");
                    eDialog.close();
                });
        });
    </script>
}

@section MainSection {
 @await Html.PartialAsync("_UserProfileMenu")
<div id="view-user-profile" class="col-md-12 col-lg-12 col-sm-12 admin-page-content-container">
    <div class="admin-page-content col-xs-12 no-padding">
        <span id="is-aduser">@ViewBag.IsAdUser</span>
        <span id="logged-user">@ViewBag.LoggedUser</span>
        <div class="admin-page-header col-md-12 col-lg-12 col-sm-12">
            <div class="col-xs-12 no-padding">
                <a class="back-button pull-left" href="@Url.Action("Index", "UserManagement")" data-toggle="tooltip" data-original-title="[[[Users]]]" data-placement="bottom" data-container="body">
                    <i class="su su-arrow-back"> </i>
                </a>
                <hgroup class="admin-page-header-description">
                    <h2 class="page-title" id="display-name">@ViewBag.UserDetail.DisplayName</h2>
                </hgroup>
                @if (userDetail.Email != ViewBag.LoggedUser)
                {
                    <div class="dropdown">
                        <span class="dropdown-toggle option-icon" data-toggle="dropdown" data-content="">
                            <span class="su su-options"> </span>
                        </span>
                        <ul class="dropdown-menu" role="menu">

                            @if (ViewBag.IsAdmin)
                            {
                                <li class="assign-role" data-content="@userDetail.UserId">
                                    <a class="remove-admin-class" title="">
                                        <i class="su su-user-settings"></i>
                                        <span>[[[Remove Admin]]]</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="assign-role" data-content="@userDetail.UserId">
                                    <a class="make-admin-class">
                                        <i class="su su-user-settings"></i>
                                        <span>[[[Make Admin]]]</span>
                                    </a>
                                </li>
                            }

                            <li class="delete-user" data-content="@userDetail.UserId">
                                <a class="delete-class" title="">
                                    <i class="su su-delete"></i>
                                    <span>[[[Delete]]]</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                 }
                    @if (userDetail.UserLockedStatus != null && userDetail.UserLockedStatus == (int)UserLockedStatus.Locked)
                    {
                        <input type="button" value="Unlock User" id="unlock-user">
                    }
                </div>
        </div>
        <div class="admin-page-body col-xs-12">
            <div class="col-xs-12 no-padding profile-img-name">
                <div class="img-view-holder col-xs-4 no-padding" style="border: 0px">
                    <div class="profile-pic-tag" data-id="@userId" data-type="user" data-display-name="@userDetail.DisplayName" data-url="@imageUrl" data-image-size="64" data-toggle="tooltip" title="@userDetail.DisplayName" data-placement="top"></div>
                </div>
                <div class="col-xs-8 no-padding">
                    <label class="display-name">@userDetail.DisplayName</label>
                </div>
            </div>

            <div id="profile-details" class="col-xs-12 no-padding">
                <form>
                    <div class="form-element-label">
                        <label class="app-textbox-label">[[[User ID]]]:</label>

                        <input type="text" class="client-values form-control no-margin" tabindex="-1" id="user-id" onfocus="this.blur()" readonly="readonly" value="@userDetail.UserId" />
                        <span class="su su-copy" id="user-id-copy" onclick="copyToClipboard('#user-id','#user-id-copy')" data-toggle="tooltip" data-original-title="[[[Click to copy]]]"></span>
                    </div>
                    <div class="form-element-label">
                        <label class="app-textbox-label">[[[Username]]]:</label>
                        @Html.TextBox("user-username", userDetail.Username, new
                        {
                            id = "user-username",
                            @readonly = true
                        })
                        <span id="username-duplicate-validation" class="alert-messages validation-message"></span>
                    </div>
                    <div class="form-element-label">
                        <label class=" app-textbox-label">[[[First Name]]]:</label>
                        @Html.TextBox("user-firstname", userDetail.FirstName, new
                        {
                            id = "user-firstname",
                            @readonly = true
                        })
                        <span id="first-name-validation" class="alert-messages validation-message"></span>
                    </div>
                    <div class="form-element-label">
                        <label class="app-textbox-label">
                            [[[Last Name]]]:
                        </label>
                        @Html.TextBox("user-lastname", userDetail.LastName, new
                        {
                            id = "user-lastname",
                            @readonly = true
                        })
                        <span id="last-name-validation" class="alert-messages validation-message"></span>
                    </div>
                    <div class="form-element-label">
                        <label class="app-textbox-label">
                            [[[Email]]]:
                        </label>
                        <input type="text" id="user-email" value="@userEmail" readonly onfocus="this.blur()" data-toggle="tooltip" data-original-title="@userEmail" />
                        <span id="email-duplicate-validation" class="alert-messages validation-message"></span>
                        @if (!userDetail.Email.Contains(CloudAppConfig.AutoGeneratedEmailDomain))
                        {
                            @if (userDetail.IsActivated)
                            {
                                <div class="email-status">([[[verified]]])</div>
                            }
                            else
                            {
                                <div class="email-status">([[[pending]]])</div>
                            }
                        }
                    </div>
                    <div class="form-element-label">
                        <label class="app-textbox-label">
                            [[[Phone]]]:
                        </label>
                        @Html.TextBox("user-phonenumber", !string.IsNullOrWhiteSpace(userDetail.Contact) ? userDetail.Contact : "--", new { id = "user-phonenumber", @readonly = true })
                        <span id="contact-validation" class="alert-messages validation-message"></span>
                    </div>
                    <div class="form-element-label">
                        <label class="app-textbox-label">[[[Status]]]:</label>
                        <div>
                            <span class="user-status">@(userDetail.UserLockedStatus != null && userDetail.UserLockedStatus == (int)UserLockedStatus.Locked ? "[[[Locked]]]" : userDetail.IsActive ? "[[[Active]]]" : "[[[Inactive]]]")</span>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        @*@if (!ViewBag.IsAdUser)
            {
                <div id="edit-button">
                    <input type="button" class="secondary-button pull-right" id="edit" title="" value="Edit Profile">
                    <input type="button" class="secondary-button pull-right popup-close" title="" id="cancel-button" value="Cancel">
                    <input type="button" class="primary-button pull-right inactive-content" id="save-button" title="" onclick="SaveUserdetails()" value="Save">
                </div>
            }*@
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
            <h5 id="updation-validation-message"></h5>
        </div>
    </div>
    <input type="hidden" id="image" value="" />
    <input type="hidden" id="user-id" value="@ViewBag.UserDetail.UserId" />
    <div id="user-detail" style="display:none">
        @Html.Raw(Json.Serialize(ViewBag.UserDetail))
    </div>
    @*</div>*@
    @*</div>*@
    @await Html.PartialAsync("../Shared/_FooterOnPremise")
</div>
    @*<div id="userprofile-delete-confirmation" class="no-padding">
        <div class="col-lg-12 no-padding modal-content" id="popup-container">
            <div class="col-md-12 modal-header">
                <div class="col-xs-8 no-padding">
                    <span class="su su-delete head-icon"></span>
                    <span class="modal-title">[[[Delete User]]]</span>
                </div>
                <div class="col-xs-4 no-padding">
                    <a href="javascript:void(0);" onclick="onDeleteDialogClose()" class="popup-close pull-right">
                        <span class="su su-close"></span>
                    </a>
                    <div id="folder-setting-arrow" class="downArrow" style="left: 37px;"></div>
                </div>
            </div>
            <div class="modal-body col-xs-12 no-padding">
                <div class="col-xs-12 no-left-padding no-bottom-padding no-right-padding">
                    <div class="delete-msg">[[[Are you sure you want to delete the User?]]]</div>
                </div>
            </div>
            <div class="col-xs-12 modal-footer">
                <div class="col-xs-12 no-padding margin-top pull-right">
                    <input type="button" id="delete-item" onclick="deleteSingleUser(@ViewBag.UserDetail.UserId)" class="critical-action-button margin-right" value="Yes" tabindex="1" autofocus />
                    <input type="button" onclick="onDeleteDialogClose()" class="secondary-button popup-close" value="No" tabindex="2" />
                </div>
            </div>
        </div>
    </div>*@

    <span id="baseurl" data-url="@Url.Content("~/")"></span>
     @await Html.PartialAsync("../UserManagement/_UnlockUserDialog")
     @await Html.PartialAsync("../UserManagement/_MakeSingleAdminDialog")
     @await Html.PartialAsync("../UserManagement/_SingleUserDeleteDialog")
     @await Html.PartialAsync("../UserManagement/_RemoveAdminDialog")
}
