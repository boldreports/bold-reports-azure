@using Syncfusion.Server.Base.Helpers;
@using Syncfusion.Server.Base;
@using Syncfusion.Server.Base.DataClasses;

@{
    Layout = "~/Views/Shared/_Layout.Accounts.cshtml";
    var isCreatePassword = ViewBag.IsCreatepassword != null ? ViewBag.IsCreatepassword : false;
    var userDetail = ViewBag.UserDetail;
    ViewBag.Title = isCreatePassword ? "[[[Account Activation]]] - " + GlobalAppSettings.SystemSettings.OrganizationName : "[[[Reset Password]]] - " + GlobalAppSettings.SystemSettings.OrganizationName;
    var domain = System.Configuration.ConfigurationManager.AppSettings["syncfusion:product_home"];
}

@section styles{
    <link rel="stylesheet" href="~/bundles/css/accounts-change-password.css" asp-append-version="true"/>
}

@section scripts{
    <script>
        var passwordRegex = @ValidationHelpers.PasswordRegex;
    </script>
    <script src="~/bundles/js/accounts-change-password.js" asp-append-version="true"></script>
}

@section MainSection{
    <form action="@Url.Action("updatepassword", "accounts")" class="change-password-container" name="changePasswordForm" method="post" onsubmit="return changePasswordValidation();" id="update-password-form" autocomplete="off">

        @if (isCreatePassword)
        {
            <div class="form-name text-h1">[[[Create password]]]</div>
        }
        else
        {
            <div class="form-name text-h1">[[[Reset password]]]</div>
        }

        <input type="hidden" value="@Context.Request.Query["userid"]" name="userId" />
        <input type="hidden" value="@Context.Request.Query["recoverycode"]" name="recoveryCode" />
        <input type="hidden" value="@Context.Request.Query["token"]" name="token" />
        <input type="hidden" value="@Context.Request.Query["subdomain"]" name="subdomain" />
        <input type="hidden" value="@ViewBag.HttpHeaders" name="httpHeaders" />
        <input type="hidden" value="@ViewBag.RequestUrl" name="requestUrl" />

        <div class="update-form-input-field new-password">
            <input placeholder="[[[New password]]]" type="password" id="new-password" autocomplete="new-password" name="password" class="change-password-form" maxlength="85" data-toggle="popover" data-title="[[[Password must contain]]]" data-trigger="focus" data-html="true" data-content="@PasswordPolicyManagement.DisplayMessageForPasswordPopover()" />
            <span class="su su-show show-hide-password" data-toggle="tooltip" data-original-title="[[[Click to view]]]"></span>
            <div class="validation-holder">
                <span id="validation-error" class="validation-messages"></span>
            </div>
        </div>
        <div class="update-form-input-field re-password">
            <input placeholder="[[[Confirm password]]]" type="password" id="confirm-password" autocomplete="new-password" name="re-password" class="change-password-form" maxlength="85" />
            <span class="su su-show show-hide-password" data-toggle="tooltip" data-original-title="[[[Click to view]]]"></span>
            <div class="validation-holder">
                <span id="validation-error" class="validation-messages"></span>
            </div>
        </div>

    <button id="submit-button" class="submit-button proceed-button @(isCreatePassword ? "disabled" : "")" type="submit">
        @(isCreatePassword ? "[[[Create password]]]" : "[[[Reset my password]]]")
    </button>
    </form>
}