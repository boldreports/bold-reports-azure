@using Syncfusion.Server.Base.Helpers;
@using Syncfusion.Server.Base;
@using Syncfusion.Server.Base.DataClasses;

@{
    Layout = "~/Views/Shared/_Layout.Accounts.cshtml";
    var isCreatePassword = ViewBag.IsCreatepassword != null ? ViewBag.IsCreatepassword : false;
    var userDetail = ViewBag.UserDetail;
    if (CloudAppConfig.IsSelfHosted)
    {
        ViewBag.Title = isCreatePassword ? "[[[Account Activation]]] - " + GlobalAppSettings.SystemSettings.OrganizationName : "[[[Reset Password - ]]]" + GlobalAppSettings.SystemSettings.OrganizationName;
    }
    else
    {
        ViewBag.Title = isCreatePassword ? "Account Activation | " + (GlobalAppSettings.Branding == AppBranding.Bold.Identifier ? "Bold ID" : GlobalAppSettings.BrandingDisplayName) + " Account" : "Reset Password | " + (GlobalAppSettings.Branding == AppBranding.Bold.Identifier ? "Bold ID" : GlobalAppSettings.BrandingDisplayName) + " Account";
    }
    var passwordRules = "<ul class='text-body' id='password_policy_rules'><li id='p_policy_length'><span class = 'icon'></span><span class='content'>6 characters</span></li><li id='p_policy_uppercase'><span class = 'icon'></span><span class='content'>1 Uppercase letter</span></li><li id='p_policy_lowercase'><span class = 'icon'></span><span class='content'>1 Lowercase letter</span></li><li id='p_policy_number'><span class = 'icon'></span><span class='content'>1 Number</span></li><li id='p_policy_specialcharacter'><span class = 'icon'></span><span class='content'>1 Special character</span></li></ul>";
    var domain = System.Configuration.ConfigurationManager.AppSettings["syncfusion:product_home"];
}

@section styles{
    <link rel="stylesheet" href="~/bundles/css/accounts-change-password.css" asp-append-version="true"/>
}

@section scripts{
    <script>
        var passwordRegex = @ValidationHelpers.PasswordRegex;
    </script>
    <script src="~/bundles/js/accounts-change-password.js" asp-append-version="true"></script>
}

@section MainSection{
    <form action="@Url.Action("updatepassword", "accounts")" class="change-password-container" name="changePasswordForm" method="post" onsubmit="return changePasswordValidation();" id="update-password-form" autocomplete="off">

        @if (isCreatePassword)
        {
            @if (!CloudAppConfig.IsSelfHosted)
            {
                <div class="form-name text-h1">[[[Activate Account]]]</div>
            }
            else
            {
                <div class="form-name text-h1">[[[Create password]]]</div>
            }
        }
        else
        {
            <div class="form-name text-h1">[[[Reset password]]]</div>
        }

        <input type="hidden" value="@Context.Request.Query["userid"]" name="userId" />
        <input type="hidden" value="@Context.Request.Query["recoverycode"]" name="recoveryCode" />
        <input type="hidden" value="@Context.Request.Query["returnUrl"]" name="returnUrl" />
        <input type="hidden" value="@Context.Request.Query["token"]" name="token" />
        <input type="hidden" value="@Context.Request.Query["subdomain"]" name="subdomain" />
        <input type="hidden" value="@ViewBag.HttpHeaders" name="httpHeaders" />
        <input type="hidden" value="@ViewBag.RequestUrl" name="requestUrl" />
        @if (!CloudAppConfig.IsSelfHosted)
        {
            @if (isCreatePassword)
            {
                <div class="update-form-input-field input-field-padding">
                    <input type="text" id="email" name="email" class="change-password-form" disabled value="@(userDetail != null ? userDetail.Email : string.Empty)" />
                </div>
                <div class="update-form-input-field input-field-padding">
                    <input placeholder="[[[First name *]]]" type="text" id="firstname" name="first-name" class="change-password-form" maxlength="254" value="@(userDetail != null ? userDetail.FirstName : string.Empty)" />
                    <div class="validation-holder">
                        <span id="validation-error" class="validation-messages"></span>
                    </div>
                </div>
                <div class="update-form-input-field input-field-padding">
                    <input placeholder="[[[Last name]]]" type="text" id="lastname" name="last-name" class="change-password-form" maxlength="254" value="@(userDetail != null ? userDetail.LastName : string.Empty)" />
                    <div class="validation-holder">
                        <span id="validation-error" class="validation-messages"></span>
                    </div>
                </div>
                <div class="update-form-input-field input-field-padding">
                    <input placeholder="[[[Company name]]] *" type="text" id="companyname" name="company-name" class="change-password-form" maxlength="254" value="@(userDetail != null ? userDetail.Company : string.Empty)" />
                    <div class="validation-holder">
                        <span id="validation-error" class="validation-messages"></span>
                    </div>
                </div>
                <div class="update-form-input-field input-field-padding">
                    <input placeholder="[[[Phone]]]" type="text" id="phone" name="phone-number" class="change-password-form" maxlength="20" value="@(userDetail != null ? userDetail.Contact : string.Empty)" />
                </div>
            }
        }

        <div class="update-form-input-field new-password">
            <input placeholder="[[[New password]]]" type="password" id="password" name="password" class="change-password-form" maxlength="85" data-toggle="popover" data-title="[[[Password must contain]]]" data-trigger="focus" data-html="true" data-content="@passwordRules" />
            <span class="su su-eye show-hide-password"></span>
            <div class="validation-holder">
                <span id="validation-error" class="validation-messages"></span>
            </div>
        </div>
        <div class="update-form-input-field re-password">
            <input placeholder="[[[Confirm password]]]" type="password" id="re-password" name="re-password" class="change-password-form" maxlength="85" />
            <span class="su su-eye show-hide-password"></span>
            <div class="validation-holder">
                <span id="validation-error" class="validation-messages"></span>
            </div>
        </div>
        @if (!CloudAppConfig.IsSelfHosted)
        {
            @if (isCreatePassword)
            {
                <div class="agreement-wrapper">
                    <div class="agreement-div material-checkbox">
                        @Html.CheckBox("agreement", false, new { @required = "required", id = "agreement", tabindex = "1" })
                        @if (GlobalAppSettings.Branding == AppBranding.Bold.Identifier)
                        {
                            <label for="agreement">[[[I have read and agree to Syncfusion's ]]]<a href="@domain/privacy" target="_blank" tabindex="7">[[[privacy policy]]]</a>, <a href="@domain/cookie-policy" target="_blank" tabindex="7">[[[cookie policy]]]</a> [[[and Bold ID's]]] <a href="@domain/terms-of-use" target="_blank" tabindex="7">[[[terms of use]]]</a>. <a href="#" style="padding-right: 5px;" data-toggle="popover" data-placement="right" data-container='body' data-trigger="focus" data-content="[[[I understand I will receive transactional emails relating to my account, including invoices, and documentation.]]]" data-original-title="" title="">[[[Read More]]]</a></label>
                        }
                        else
                        {
                            <label for="agreement">[[[I have read and agree to Syncfusion's ]]]<a href="@domain/privacy" target="_blank" tabindex="7">[[[privacy policy]]]</a>, <a href="@domain/cookie-policy" target="_blank" tabindex="7">[[[cookie policy]]]</a> [[[and]]] <a href="@domain/terms-of-use" target="_blank" tabindex="7">[[[terms of use]]]</a>. <a href="#" style="padding-right: 5px;" data-toggle="popover" data-placement="right" data-container='body' data-trigger="focus" data-content="[[[I understand I will receive transactional emails relating to my account, including invoices, and documentation.]]]" data-original-title="" title="">[[[Read More]]]</a></label>
                        }
                    </div>
                </div>
            }
        }

    <button id="submit-button" class="submit-button proceed-button @(isCreatePassword ? "disabled" : "")" type="submit">
        @if (!CloudAppConfig.IsSelfHosted)
        {
            @(isCreatePassword ? "[[[Activate password]]]" : "[[[Reset my password]]]")
        }
        else
        {
            @(isCreatePassword ? "[[[Create password]]]" : "[[[Reset my password]]]")
        }
    </button>
    </form>
}