@using System.Web.Configuration;
@{
    Layout = null;
    var displayName = GlobalAppSettings.BrandingDisplayName;
    var helpUrl = "https://redirect.boldbi.com";
    var connectionType = WebConfigurationManager.AppSettings["IdP:AzureBlobConnectionType"];
    var storageAccountName = WebConfigurationManager.AppSettings["IdP:AzureBlobStorageAccountName"];
    var accessKey = WebConfigurationManager.AppSettings["IdP:AzureBlobStorageAccessKey"];
    var blobServiceEndpoint = WebConfigurationManager.AppSettings["IdP:AzureBlobServiceEndpoint"];
    var containerName = WebConfigurationManager.AppSettings["IdP:AzureBlobContainerName"];
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0">
    <title>[[[Welcome to ]]]@displayName</title>
    @if (CloudAppConfig.IsSelfHosted)
    {
        <link rel="icon" href="@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/Application/favicon.ico")" />
    }
    else
    {
        <link rel="icon" href="@GlobalAppSettings.SystemSettings.FavIcon" onerror="this.onerror=null;this.src='@GlobalAppSettings.CdnDomain/@GlobalAppSettings.Branding/Application/@IconFileNames.Favicon';" />
    }
    @Scripts.Render("~/scripts/localizationcontent")
    @Styles.Render("~/styles/system-configuration")
    @Scripts.Render("~/scripts/system-configuration")
    <script src="~/signalr/hubs"></script>


    <script>
        var setSystemSettingsUrl = "@Url.Action("SetSystemSettings", "ServerConfiguration")";
        var connectDatabaseUrl = "@Url.Action("ConnectDatabase", "ServerConfiguration")";
        var generateDatabaseUrl = "@Url.Action("GenerateDatabase", "ServerConfiguration")";
        var connectOracleDatabaseUrl = "@Url.Action("ConnectOracleDatabase", "ServerConfiguration")";
        var generateOracleDatabaseUrl = "@Url.Action("GenerateOracleDatabase", "ServerConfiguration")";
        var generateMySqlDatabaseUrl = "@Url.Action("GenerateMySqlDatabase", "ServerConfiguration")";
        var generatePostgreSqlDatabaseUrl = "@Url.Action("GeneratePostgreSqlDatabase", "ServerConfiguration")";
        var getAllDatabaseUrl = "@Url.Action("GetAllDatabase", "ServerConfiguration")";
        var generateSQLTablesUrl = "@Url.Action("GenerateTablesInDB", "ServerConfiguration")";
        var checkTableExistsUrl = "@Url.Action("CheckTableAlreadyExists", "ServerConfiguration")";
        var storageType = "@ViewBag.StorageType";
        var blobDetails = "@Url.Action("GetAzureDetails", "TenantsManagement")";
        var blobExist = "@Url.Action("IsBlobExists", "ServerConfiguration")";
        var serverSetupImageUrl = "@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/server-startup-image.svg")";
        var adminSetupImageUrl = "@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/server-admin-setup.svg")";
        var storageUrl = "@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/file-storage-image.svg")";
        var isBoldBI = "@(GlobalAppSettings.BrandingDisplayName == AppBranding.BoldBI.DisplayName)".toLowerCase() == "true";
        var isAzureApplication = ("@ViewBag.IsAzureApplication".toLowerCase() === "true");
        var isBoldReports = "@(GlobalAppSettings.BrandingDisplayName == AppBranding.BoldReports.DisplayName)".toLowerCase() == "true";
        var selfHosted = ("@ViewBag.selfHosted".toLowerCase() === "true");
        var connectionType = "@connectionType";
        var storageAccountName = "@storageAccountName";
        var accessKey = "@accessKey";
        var blobServiceEndpoint = "@blobServiceEndpoint";
        var containerName = "@containerName";

        $(function () {
            // Declare a proxy to reference the hub.
            var statusTracker = $.connection.progressHub;
            // Create a function that the hub can call to broadcast messages.
            statusTracker.client.sendMessage = function (message, percent) {
                // Html encode display name and message.
                $(".deployment-status").text(message);
                $(".progressBar-container .progress-bar").width(percent + "%");
            };
            $.connection.hub.start().done(function () {
                    statusTracker.server.addTenantGroup("tenant-deployment");
            });
        });
        $(document).ready(function () {
            $(document).click(function (e) {
                if (e.target.id != "info-icon") {
                    $('#prefix-message').css("display", "none");
                }
                if (e.target.id != "info-icon-postgressql") {
                    $('#prefix-message-postgresql').css("display", "none");
                }
            });
        });
    </script>
</head>
<body class="startup-page-container-body">
    @Html.Partial("_Header.OnpremiseStartup")
    <div class="system-startUp-settings-bg">
        <div class="startup-page-conatiner" id="startup-page-conatiner">
            <div id="system-settings-general" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="col-lg-7 col-md-7 col-sm-7 col-xs-7" id="image-parent-container">
                    <div class="image-container">
                        <img class="startup-image" src="@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/server-welcome-screen.svg")" />
                        <div class="startup-content display-none">
                            <span class="first-content">[[[Step 1: Let’s configure your server]]]</span>
                            <span class="second-content">[[[This is where we store user identities and ]]]@displayName [[[sites.]]]</span>
                            <a id="help-link" href="@(helpUrl + (GlobalAppSettings.BrandingDisplayName == AppBranding.BoldBI.DisplayName ? "?id=5" : "?id=4021"))" target="_blank">[[[Need help?]]]</a>
                        </div>
                    </div>
                </div>
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5" id="system-settings-welcome-container">
                    <div class="welcome-content">
                        <hr />
                        <span class="first-content">[[[Welcome to ]]]<span>@displayName</span>[[[ Enterprise Server]]]</span>
                        <span class="second-content">
                            [[[See clearly and act boldly]]]
                        </span>
                        <a href="@(helpUrl + (GlobalAppSettings.BrandingDisplayName == AppBranding.BoldBI.DisplayName ? "?id=4" : "?id=4020"))" target="_blank">[[[Need setup help?]]]</a>
                        <div class="btn-holder center-align">
                            <button type="button" id="welcome-page-proceed" class="proceed-button content-display">[[[Proceed to Setup]]]</button>
                        </div>
                    </div>
                </div>
                <div class="system-settings-page-container col-lg-5 col-md-5 col-sm-5 col-xs-5" id="system-settings-db-selection-container">
                    <div class="system-settings-db-selection-field">
                        <input type="hidden" name="Ums_table_prefix" id="tenant-table-prefix" value="@DbTablePrefixes.TenantManagement" />
                        @if (ViewBag.AppConfigure == "true")
                        {
                            <div class="text-info bg-info client-config-info">[[[To configure ]]]<b>@ViewBag.AppName</b>[[[ you need to configure TenantServer first.]]]</div>
                        }
                        <div class="database-types">
                            <div class="center-align">
                                <div id="database-type-dropdown" class="system-settings-startup-page-fields txt-holder database-dropdown-margin">
                                    <label class="field-label">[[[Server type]]]</label>
                                    <select id="database-type" class="selectpicker system-settings-startup-page-fields db-fields" data-width="100%">
                                        <option class="no-margin-dropdown-ul" value="MSSQL">[[[SQL Server]]]</option>
                                        @if (ViewBag.IsNpgsqlExist)
                                        {
                                            <option class="no-margin-dropdown-ul" value="PostgreSQL">[[[Postgre SQL]]]</option>
                                        }
                                        else
                                        {
                                            <option class="no-margin-dropdown-ul" title="[[[Please install Npgsql client library to connect with PostgreSQL database.]]]" value="PostgreSQL" disabled>[[[Postgre SQL]]]</option>
                                        }
                                        <option class="no-margin-dropdown-ul hide" value="MSSQLCE">[[[Embedded SQL CE]]]</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="sqlce-content hide">
                            <span>[[[This embedded SQL CE can be use only for testing purpose. Please choose the different database if you want to setup the application for production use.]]]</span>
                        </div>
                        <form id="db-content-holder" class="col-md-12 no-padding display-none content-display text-wrap show-sql-content" autocomplete="off">
                            <div class="txt-holder center-align">
                                <label class="field-label">[[[Server name]]]</label>
                                <input type="text" id="txt-servername" name="servername" class="form-control system-settings-startup-page-fields db-fields" placeholder="[[[Server name]]]" />
                                <span class="startup-validation validation-txt-errors"></span>
                            </div>
                            <div class="txt-holder center-align">
                                <div id="auth-type-dropdown" class="hide">
                                    <label class="field-label">[[[Authentication type]]]</label>
                                    <select id="check-windows" class="selectpicker db-fields" data-width="100%">
                                        <option value="sql">[[[SQL authentication]]]</option>
                                        <option value="windows">[[[Windows authentication]]]</option>
                                    </select>
                                </div>
                                <div id="port-number-dropdown" class="hide">
                                    <label class="field-label">[[[Port number]]]</label>
                                    <input type="text" id="txt-portnumber" name="portnumber" class="form-control system-settings-startup-page-fields db-fields" placeholder="[[[Port number]]]" />
                                    <span class="startup-validation validation-txt-errors"></span>
                                </div>
                            </div>
                            <div class="txt-holder center-align">
                                <label class="field-label">[[[Username]]]</label>
                                <input type="text" id="txt-login" name="username" class="form-control system-settings-startup-page-fields db-fields" placeholder="[[[Username]]]" />
                                <span class="startup-validation validation-txt-errors"></span>
                            </div>
                            <div class="txt-holder center-align">
                                <label class="field-label">[[[Password]]]</label>
                                <input type="text" class="display-none">
                                <input type="password" class="fake-password" name="fake_passwordfield_to_turnoff_autocomplete">
                                <input type="password" id="txt-password-db" name="password" class="form-control system-settings-startup-page-fields db-fields" placeholder="[[[Password]]]" autocomplete="off" />
                                <span id="password-field" class="startup-validation validation-txt-errors"></span>
                                <div class="su su-eye show-hide-password"></div>
                            </div>
                            <div class="txt-holder center-align">
                                <div class="new-db">
                                    <input type="radio" id="new-db" class="css-radio" name="databaseType" value="0" checked='checked' />
                                    <label for="new-db"><span class="text">[[[New database]]]</span></label>
                                </div>
                                <div class="existing-db">
                                    <input type="radio" id="existing-db" class="css-radio" name="databaseType" value="1" />
                                    <label for="existing-db"><span class="text">[[[Existing database]]]</span></label>
                                </div>
                            </div>
                            <div class="txt-holder database-name center-align">
                                <label class="field-label">[[[Database name]]]</label>
                                <input type="text" id="txt-dbname" name="dbname" class="form-control system-settings-startup-page-fields dbname-fields db-fields" placeholder="[[[Database name]]]" />
                                <span class="startup-validation validation-txt-errors"></span>
                                <div class="show-hide-password"></div>
                                <span class="database-error validation-txt-errors"></span>
                            </div>
                            <div class="sql-server-existing-db center-align">
                                <div class="txt-holder databse-dropdown text-wrap database-dropdown-margin center-align">
                                    <label class="field-label">[[[Existing Database name]]]</label>
                                    <input type="text" id="database-name" name="databaseName" class="form-control system-settings-startup-page-fields db-fields" placeholder="[[[Existing database name]]]" />
                                    <span class="startup-validation validation-txt-errors"></span>
                                    <div class="show-hide-password"></div>
                                    <span class="database-error validation-txt-errors"></span>
                                </div>
                            </div>
                            <div class="secure-sql material-checkbox selfhosted center-align">
                                @Html.CheckBox("secure-sql-connection", false)
                                <label for="secure-sql-connection" class="">[[[Enable SSL]]]</label>
                            </div>
                        </form>

                        <div class="btn-holder center-align">
                            <button type="button" id="db-config-submit" class="proceed-button display-none content-display show-sql-content">[[[Next]]]</button>
                            <button type="button" id="sql-existing-db-submit" class="proceed-button display-none content-display">[[[Next]]]</button>
                            <button type="button" id="move-to-next" class="proceed-button content-display show-sqlce-content hide">[[[Next]]]</button>
                        </div>
                    </div>
                </div>
                @Html.Partial("_FileStorage")
                @Html.Partial("_UserAccount")
                <div id="messageBox">
                    <div class="message-header"></div>
                    <div class="message-box-close"></div>
                    <div class="message-content text-center"></div>
                    <div class="message-box-btn-holder"></div>
                </div>
                <div class="col-lg-12 col-md12 col-sm-12 col-xs-12 display-none" id="progress-parent-container">
                    <div class="image-container">
                        <img class="startup-image" src="@Url.Content(HttpRuntime.AppDomainAppVirtualPath + "/Content/images/" + GlobalAppSettings.Branding + "/application/server-deployment-image.svg")" />
                        <div class="progressBar-container">
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 10%;">
                                </div>
                            </div>
                        </div>
                        <span class="deployment-status">[[[Fetching information...]]]</span>
                    </div>
                </div>
            </div>

        </div>
    </div>
</body>
</html>