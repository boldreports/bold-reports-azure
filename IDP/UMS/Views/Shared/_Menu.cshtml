@using System.Configuration
@{
    var userId = (HttpContext.Current.User as ServerPrincipal).UserId;

    var displayName = HttpContext.Current.Session["displayname"] != null ? HttpContext.Current.Session["displayname"].ToString() : string.Empty;

    var currentUrlLocalPath = HttpContext.Current.Request.Url.LocalPath.ToLower();

    var currentUrl = HttpContext.Current.Request.Url.ToString().TrimEnd('/');

    var isImageRequest = currentUrl.IndexOf(".png", StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(".jpg", StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(".gif", StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(".svg", StringComparison.CurrentCultureIgnoreCase) > 0;

    var profilePageUrl = Url.Action("Profilepage", "User");

    var emailAddress = HttpContext.Current.Session["emailaddress"] != null ? HttpContext.Current.Session["emailaddress"].ToString() : string.Empty;

    var adminType = (AdminType)Session["AdminType"];

    var idPUrl = CloudAppConfig.IdPUrl.TrimEnd('/');

    var profilePicture = idPUrl + "/User/Avatar?id=" + (HttpContext.Current.User as ServerPrincipal).UserId + "&ImageSize=64";

    var isHomePage = currentUrlLocalPath.TrimEnd('/') == Url.Action("Homepage", "Home") || currentUrlLocalPath.TrimEnd('/') + "/homepage" == Url.Action("Homepage", "Home");

    var isMobile = DeviceDetection.IsMobile;
}

<aside class="menu-bar" id="app-navigation">
    <nav id="main-nav">
        <a id="mobile-profile-picture" href="@profilePicture" class="mobile-visible">
            <div class="mobile-display-name">@displayName</div>
            <img class="sub-menu-bar-profile-image" src="@profilePicture">
        </a>
        <ul id="items-menu">
            <li class="mobile-hidden">
                <a href="/" class="home-link " style="background-color:transparent;" title=@GlobalAppSettings.SystemSettings.OrganizationName>
                    @if (!CloudAppConfig.IsSelfHosted)
                    {
                        <img alt="[[[Application Logo]]]" id="application-logo" src="@GlobalAppSettings.CdnDomain/static/company/@GlobalAppSettings.Branding/logo/v1/@IconFileNames.MainLogo" />
                    }
                    else
                    {
                        <img alt="[[[Application Logo]]]" id="application-logo" src="@GlobalAppSettings.SystemSettings.MainScreenLogo" onerror="this.onerror=null;this.src='@GlobalAppSettings.CdnDomain/boldid/Application/@IconFileNames.MainLogo';" />
                    }
                </a>
            </li>
            <li class="sf-nav-separator logo-separator mobile-hidden"></li>

            @if (!CloudAppConfig.IsSelfHosted)
            {
                if (adminType == AdminType.SuperAdmin)
                {
                    <li>
                        <a class="@(currentUrl.IndexOf(Url.Action("Tenants", "TenantsManagement"), StringComparison.CurrentCultureIgnoreCase) > 0 ? "active" : string.Empty)" href="@Url.Action("Tenants", "TenantsManagement")">
                            <span class="menu-icon-container">
                                <i class="su su-applications"></i>
                            </span>
                            <span class="menu-label">[[[Tenants]]]</span>
                        </a>
                    </li>
                    <li class="sf-nav-separator logo-separator mobile-hidden"></li>
                    <li>
                        <a class="@(currentUrl.IndexOf(Url.Action("Administration", "Administration"), StringComparison.CurrentCultureIgnoreCase) > 0 && currentUrl.IndexOf(Url.Action("Index", "UserManagement"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("grouppermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("userpermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 ? "active" : string.Empty)" href="@Url.Action("Administration", "Administration")">
                            <span class="menu-icon-container">
                                <i class="su su-nav-settings"></i>
                            </span>
                            <span class="menu-label">[[[Settings]]]</span>
                        </a>
                    </li>
                }
            }

            @if (CloudAppConfig.IsSelfHosted && (adminType == AdminType.SuperAdmin || adminType == AdminType.AppAdmin))
            {
                <li>
                    <a class="@(currentUrl.IndexOf(Url.Action("Sites", "TenantsManagement"), StringComparison.CurrentCultureIgnoreCase) > 0 ? "active" : string.Empty)" href="@Url.Action("Sites", "TenantsManagement")">
                        <span class="menu-icon-container">
                            <i class="su su-applications"></i>
                        </span>
                        <span class="menu-label">[[[Sites]]]</span>
                    </a>
                </li>
                <li>
                    <a class="@(currentUrl.IndexOf(Url.Action("Index", "UserManagement"), StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(Url.Action("grouppermission", "permission"), StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(Url.Action("userpermission", "permission"), StringComparison.CurrentCultureIgnoreCase) > 0 ? "active" : string.Empty)" href="@Url.Action("Index", "UserManagement")">
                        <span class="menu-icon-container">
                            <i class="su su-nav-user-management"></i>
                        </span>
                        <span class="menu-label">[[[Users]]]</span>
                    </a>
                </li>
                <li class="sf-nav-separator logo-separator mobile-hidden"></li>
                <li class="mobile-hidden">
                    <a class="@(currentUrl.IndexOf(Url.Action("Administration", "Administration"), StringComparison.CurrentCultureIgnoreCase) > 0 && currentUrl.IndexOf(Url.Action("Index", "UserManagement"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("grouppermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("userpermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 ? "active" : string.Empty)" href="@Url.Action("Administration", "Administration")">
                        <span class="menu-icon-container">
                            <i class="su su-nav-settings"></i>
                        </span>
                        <span class="menu-label">[[[Settings]]]</span>
                    </a>
                </li>
            }

            <li class="li-logout mobile-visible">
                <img data-src="@(Model +"/images/divider_dark.png")" class="upper-divider" />
                <a class="" href="@Url.Action("logout", "accounts")">
                    <span class="menu-icon-container">
                        <i class="su su-logout"></i>
                    </span>
                    <span class="menu-label">[[[Log Out]]]</span>
                </a>
            </li>
        </ul>
    </nav>
    @if (!isMobile)
    {
        <nav id="sub-nav" class="sf-nav-group mobile-hidden">
            <ul>
                <li class="profile-section dropup">
                    <a class="dropdown-toggle" data-toggle="dropdown">
                        <span class="profile-container">
                            <img class="profile-picture" src="@profilePicture" alt="[[[Profile]]]" />
                        </span>
                    </a>
                    <ul class="dropdown-menu sub-menu" role="menu">
                        <li class="sub-menu-item sub-menu-profile">
                            <div class="sub-menu-profile-text-padding">[[[Profile]]]</div>
                            <a href="@idPUrl/user/profile">
                                <div class="sub-menu-profile-hover">
                                    <img class="sub-menu-bar-profile-image" src="@profilePicture">
                                    <div class="sub-menu-user-name"><div class="sub-menu-user-name-style">@displayName</div><div class="sub-menu-user-email-style">@emailAddress</div></div>
                                </div>
                            </a>
                        </li>
                        <li class="sf-sub-menu-separator"></li>
                        <li class="sub-menu-item">
                            <a href="@Url.Action("logout", "accounts")">
                                [[[Logout]]]
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
        </nav>
    }
    </aside>