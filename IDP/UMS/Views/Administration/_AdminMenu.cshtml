@{
    var currentUrl = HttpContext.Current.Request.Url.LocalPath.TrimEnd('/');
    var adminHomeUrl = Url.RouteUrl("Administration", null) ?? "/administration";
    var siteSettingsUrl = Url.Action("site", "administration") ?? "/administration";
    var adSettingsUrl = Url.Action("user-directory-settings", "administration");
    var emailSettingsUrl = Url.Action("e-mail-settings", "administration");
    var manageLicenseUrl = Url.Action("LicenseSettings", "Administration");
    var userSettingsUrl = Url.Action("UserSettings", "administration");
    var ssoSettingsUrl = Url.Action("SAMLSettings", "Administration");
    var authSettingsUrl = Url.Action("AuthenticationSettings", "Administration");
    var isSelfHosted = CloudAppConfig.IsSelfHosted;
    var isBoldBIOnPremise = new GlobalAppSettings().GetLicenseSettings().Products.Any(x => x.TenantType == TenantType.BoldBIOnPremise);
}

<nav id="admin-nav">
    <ul>
        <li>
            <a id="site-settings-link" class="admin-menu-item @(currentUrl.IndexOf(siteSettingsUrl, StringComparison.CurrentCultureIgnoreCase) > -1 || currentUrl.Equals(adminHomeUrl, StringComparison.CurrentCultureIgnoreCase) ? "active" : string.Empty)" href="@siteSettingsUrl" role="tab">
                <i class="su su-url"></i>
                <span>[[[Site]]]</span>
            </a>
        </li>
        <li>
            <a id="email-settings-link" class="admin-menu-item @(currentUrl.IndexOf(emailSettingsUrl, StringComparison.CurrentCultureIgnoreCase) > -1 ? "active" : string.Empty)" href="@emailSettingsUrl" role="tab">
                <i class="su su-e-mail"></i>
                <span>[[[Email]]]</span>
            </a>
        </li>
        @if (isSelfHosted)
        {
            <li>
                <a id="sso-settings-link" class="admin-menu-item @(currentUrl.IndexOf(ssoSettingsUrl, StringComparison.CurrentCultureIgnoreCase) > -1 ? "active" : string.Empty)" href="@ssoSettingsUrl" role="tab">
                    <i class="su su-single-sign-on"></i>
                    <span>[[[SSO]]]</span>
                </a>
            </li>
        }
            <li>
                <a id="oauth-settings-link" class="admin-menu-item @(currentUrl.IndexOf(authSettingsUrl, StringComparison.CurrentCultureIgnoreCase) > -1 ? "active" : string.Empty)" href="@authSettingsUrl" role="tab">
                    <i class="su su-lock"></i>
                    <span>[[[Authentication]]]</span>
                </a>
            </li>

        <li>
            <a id="license-settings-link" class="admin-menu-item @(currentUrl.IndexOf(manageLicenseUrl, StringComparison.CurrentCultureIgnoreCase) > -1 ? "active" : string.Empty)" href="@manageLicenseUrl" role="tab">
                <i class="su su-license-settings"></i>
                <span>[[[Manage License]]]</span>
            </a>
        </li>
        @*<li>
            <a id="active-directory-settings-link" class="admin-menu-item @(currentUrl.IndexOf(adSettingsUrl, StringComparison.CurrentCultureIgnoreCase) > -1 ? "active" : string.Empty)" href="@adSettingsUrl" role="tab">
                <i class="su su-active-directory"></i>
                <span>Active Directory</span>
            </a>
        </li>
        <li>
            <a id="user-settings-link" class="admin-menu-item @(currentUrl.IndexOf(userSettingsUrl, StringComparison.CurrentCultureIgnoreCase) > -1 ? "active" : string.Empty)" href="@userSettingsUrl" role="tab">
                <i class="su su-user_settings_icon"></i>
                <span>User</span>
            </a>
        </li>
        *@
    </ul>
</nav>
