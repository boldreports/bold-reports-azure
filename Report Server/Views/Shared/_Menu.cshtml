@{
    var globalAppSettings = (GlobalAppSettings)ViewBag.GlobalAppSettings;

    var displayName = HttpContext.Current.Session["displayname"] != null ? HttpContext.Current.Session["displayname"].ToString() : string.Empty;

    var emailAddress = HttpContext.Current.Session["emailaddress"] != null ? HttpContext.Current.Session["emailaddress"].ToString() : string.Empty;

    var idpreferenceId = HttpContext.Current.Session["idpReferenceId"] != null ? HttpContext.Current.Session["idpReferenceId"].ToString() : string.Empty;

    var currentUrlLocalPath = HttpContext.Current.Request.Url.LocalPath.ToLower();

    var currentUrl = HttpContext.Current.Request.Url.ToString().TrimEnd('/');

    var isImageRequest = currentUrl.IndexOf(".png", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".jpg", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".gif", StringComparison.CurrentCultureIgnoreCase) > 0 ||
                         currentUrl.IndexOf(".svg", StringComparison.CurrentCultureIgnoreCase) > 0;

    var idPUrl = ServerAppConfig.InternalAppIdpUrl;
    var isMobile = DeviceDetection.IsMobile;
    var defaultAppLogo = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/') + "/images/application/" + ServerAppConfig.AppBranding + "/" + IconFileNames.MainLogo;
    var appLogo = (globalAppSettings.SystemSettings.MainScreenLogo.EndsWith(IconFileNames.MainLogo) || globalAppSettings.SystemSettings.MainScreenLogo.EndsWith("main_logo.png")) ? defaultAppLogo : globalAppSettings.SystemSettings.MainScreenLogo;
    var profilePictureUrl = idPUrl + Url.Content("/User/Avatar?id=" + idpreferenceId + "&ImageSize=64");
    var navigationUrl = Url.Action("Index", "Home");
    var dashboardPageUrl = Url.Action("Reports", "Reports");
    var widgetsPageUrl = Url.Action("Widgets", "Widgets");
    var dataSourcesPageUrl = Url.Action("DataSources", "DataSources");
    var datasetPageUrl = Url.Action("Datasets", "Datasets");
    var schedulePageUrl = Url.Action("Schedules", "Scheduler");
    var profilePageUrl = Url.Action("Profilepage", "User");
    var homepagePageUrl = Server.UrlDecode(Url.Action("Homepages", "Boards"));
    var slideshowPageUrl = Url.Action("Slideshows", "Slideshow");
    var itemPermissions = ViewBag.ItemPermission as Dictionary<ItemType, bool>
    ;
    var isItemPageRequested = (HttpContext.Current.Request.Url.AbsolutePath == "/" || HttpContext.Current.Request.Url.AbsolutePath == Url.Content("~/") || HttpContext.Current.Request.Url.ToString().IndexOf("/reports", StringComparison.CurrentCultureIgnoreCase) > 0 || HttpContext.Current.Request.Url.ToString().IndexOf("/data-sources", StringComparison.CurrentCultureIgnoreCase) > 0 || HttpContext.Current.Request.Url.ToString().IndexOf("/datasets", StringComparison.CurrentCultureIgnoreCase) > 0 || HttpContext.Current.Request.Url.ToString().IndexOf("/schedules", StringComparison.CurrentCultureIgnoreCase) > 0) && !isMobile;
    var showImport = HttpContext.Current.Request.Url.LocalPath.ToLower() == Url.Action("Reports", "Reports");
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink;
    var manageSitesUrl = idPUrl + "/" + ServerAppConfig.TenantManagementHostName + "/sites";
}

<aside class="menu-bar" id="app-navigation">
    <nav id="main-nav" class="sf-nav-group">
        <a id="mobile-profile-picture" href="@profilePageUrl" class="mobile-visible">
            <div class="mobile-display-name">@displayName</div>
            <div data-id="profilelogo" class="lazyload img-loader" data-src-value="@profilePictureUrl" data-alt="[[[Profile Picture]]]"></div>
        </a>

        <ul id="items-menu" class="sf-main-nav">
            <li class="app-logo-block mobile-hidden">
                <a href="@navigationUrl" class="home-link" title="@globalAppSettings.SystemSettings.OrganizationName">
                    <div data-alt="[[[Application-Logo]]]" data-id="application-logo" data-src="@appLogo" data-default="@defaultAppLogo" class="lazyload img-loader app-logo"></div>
                </a>
            </li>
            <li class="sf-nav-separator logo-separator mobile-hidden">

            </li>
            @*
                <li class="hidden mobile-hidden @(currentUrlLocalPath == "/" || currentUrlLocalPath == "HttpRuntime.AppDomainAppVirtualPath/" ? "active" : string.Empty )">
                <a class="sf-nav-link" href="@Url.Action(" Index", "Home" )">
                    <span class="menu-icon-container">
                        <i class="su su-nav-datasource"></i>
                    </span>
                    <i class="su su-nav-home"></i>
                    <span class="menu-label">[[[Home]]]</span>
                </a>
                </li>*@

            @if (!ServerAppConfig.IsSelfHosted || (ServerAppConfig.IsSelfHosted && isItemPageRequested && itemPermissions != null && ((itemPermissions.ContainsKey(ItemType.Report) && itemPermissions[ItemType.Report]) || itemPermissions[ItemType.Dataset] || itemPermissions[ItemType.Datasource] || itemPermissions[ItemType.Schedule])))
            {
                <li class="sf-nav-item mobile-hidden" id="create-item" data-action="create-items">
                    <a class="sf-nav-link" href="javascript:void(0)">
                        <span class="menu-icon-container create-menu-icon">
                            <i class="su su-add"></i>
                        </span>
                    </a>
                </li>
            }

            <li class="sf-nav-item @(currentUrlLocalPath.IndexOf(dashboardPageUrl, StringComparison.OrdinalIgnoreCase) > -1 ? " active" : string.Empty )">
                <a class="sf-nav-link" href="@dashboardPageUrl">
                    <span class="menu-icon-container">
                        <i class="su su-nav-report"></i>
                    </span>
                    <span class="menu-label">[[[Reports]]]</span>
                </a>
            </li>
            @if (!isMobile)
            {
                <li class="mobile-hidden sf-nav-item @(currentUrlLocalPath.IndexOf(dataSourcesPageUrl, StringComparison.OrdinalIgnoreCase) > -1 ? " active" : string.Empty )">
                    <a class="sf-nav-link" href="@dataSourcesPageUrl">
                        <span class="menu-icon-container">
                            <i class="su su-nav-datasource"></i>
                        </span>

                        <span class="menu-label">[[[Data Sources]]]</span>
                    </a>
                </li>
                <li class="mobile-hidden sf-nav-item @(currentUrlLocalPath.IndexOf(datasetPageUrl, StringComparison.OrdinalIgnoreCase) > -1 ? " active" : string.Empty )">
                    <a class="sf-nav-link" href="@datasetPageUrl">
                        <span class="menu-icon-container">
                            <i class="su su-nav-dataset"></i>
                        </span>

                        <span class="menu-label">[[[Dataset]]]</span>
                    </a>
                </li>
                <li class="mobile-hidden sf-nav-separator">
                </li>
                @*if (GlobalAppSettings.Branding == AppBranding.Syncfusion.Identifier)
                    {
                    <li class="mobile-hidden sf-nav-item @(currentUrlLocalPath.IndexOf(homepagePageUrl, StringComparison.OrdinalIgnoreCase) > -1 ? " active" : string.Empty )">
                        <a class="sf-nav-link" href="@homepagePageUrl">
                            <span class="menu-icon-container">
                                <i class="su su-pin"></i>
                            </span>
                            <span class="menu-label">[[[Pinboards]]]</span>
                        </a>
                    </li>
                    }
                    <li class="mobile-hidden sf-nav-item @(currentUrlLocalPath.IndexOf(slideshowPageUrl, StringComparison.OrdinalIgnoreCase) > -1 ? " active" : string.Empty )">
                        <a class="sf-nav-link" href="@slideshowPageUrl">
                            <span class="menu-icon-container">
                                <i class="su su-tv"></i>
                            </span>
                            <span class="menu-label">[[[Slideshows]]]</span>
                        </a>
                    </li>*@
            }

            <li class="sf-nav-item @(currentUrlLocalPath.IndexOf(schedulePageUrl, StringComparison.OrdinalIgnoreCase) > -1 ? " active" : string.Empty )">
                <a class="sf-nav-link" href="@schedulePageUrl">
                    <span class="menu-icon-container">
                        <i class="su su-nav-schedule"></i>
                    </span>
                    <span class="menu-label">[[[Schedules]]]</span>
                </a>
            </li>
            @if (!ServerAppConfig.IsSelfHosted)
            {
                <li class="mobile-visible sf-nav-separator">

                </li>
                <li class="mobile-visible sf-nav-item request-concierge-support">
                    <span class="sf-nav-link sf-menu-option-link">
                        <span class="menu-icon-container">
                            <i class="su su-concierge-support"></i>
                        </span>
                        <span class="menu-label">[[[Support]]]</span>
                    </span>
                </li>
            }
            @if (!isMobile && !isImageRequest && HttpContext.Current.Session["IsAdmin"] != null && Convert.ToBoolean(HttpContext.Current.Session["IsAdmin"]))
            {
                <li class="mobile-hidden sf-nav-separator">

                </li>
                <li class="mobile-hidden sf-nav-administration-collapse-item dropup">
                    <a class="dropdown-toggle" data-toggle="dropdown">
                        <span class="menu-icon-container">
                            <i class="su su-dots-menu"></i>
                        </span>
                    </a>
                    <ul class="dropdown-menu sub-menu" role="menu">
                        <li class="sf-nav-item @(currentUrl.IndexOf(Url.Action("Administration", "Administration" ), StringComparison.CurrentCultureIgnoreCase)>
                            0 && currentUrl.IndexOf(Url.Action("Index", "UserManagement"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("grouppermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("userpermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 ? "active" : string.Empty)">
                            <a class="sf-nav-link" href="@Url.Action("Administration", "Administration" )">
                                <span class="menu-icon-container">
                                    <i class="su su-nav-settings"></i>
                                </span>
                                <span class="menu-label">[[[Settings]]]</span>
                            </a>
                        </li>
                        <li class="sf-nav-item @(currentUrl.IndexOf(Url.Action("Index", "UserManagement"), StringComparison.CurrentCultureIgnoreCase)>
                            0 || currentUrl.IndexOf(Url.Action("grouppermission", "permission"), StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(Url.Action("userpermission", "permission"), StringComparison.CurrentCultureIgnoreCase) > 0 ? "active" : string.Empty)">
                            <a class="sf-nav-link" href="@Url.Action("Index", "UserManagement" )">
                                <span class="menu-icon-container">
                                    <i class="su su-group"></i>
                                </span>
                                <span class="menu-label">[[[Users]]]</span>
                            </a>
                        </li>
                    </ul>
                </li>
                <li class="mobile-hidden sf-nav-item sf-nav-administration-item @(currentUrl.IndexOf(Url.Action("Administration", "Administration"), StringComparison.CurrentCultureIgnoreCase)>
                    0 && currentUrl.IndexOf(Url.Action("Index", "UserManagement"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("grouppermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 && currentUrl.IndexOf(Url.Action("userpermission", "permission"), StringComparison.CurrentCultureIgnoreCase) < 0 ? "active" : string.Empty)">
                    <a class="sf-nav-link" href="@Url.Action("Administration", "Administration")">
                        <span class="menu-icon-container">
                            <i class="su su-nav-settings"></i>
                        </span>
                        <span class="menu-label">[[[Settings]]]</span>
                    </a>
                </li>
                <li class="mobile-hidden sf-nav-item sf-nav-administration-item @(currentUrl.IndexOf(Url.Action("Index", "UserManagement"), StringComparison.CurrentCultureIgnoreCase)>
                    0 || currentUrl.IndexOf(Url.Action("grouppermission", "permission"), StringComparison.CurrentCultureIgnoreCase) > 0 || currentUrl.IndexOf(Url.Action("userpermission", "permission"), StringComparison.CurrentCultureIgnoreCase) > 0 ? "active" : string.Empty)">
                    <a class="sf-nav-link" href="@Url.Action("Index", "UserManagement")">
                        <span class="menu-icon-container">
                            <i class="su su-group"></i>
                        </span>
                        <span class="menu-label">[[[Users]]]</span>
                    </a>
                </li>
            }

            <li class="li-logout mobile-visible">
                <img data-src="@(Model +"/images/divider_dark.png")" class="upper-divider" />
                <a class="" href="@Url.Action("logout", "accounts" )">
                    <span class="menu-icon-container">
                        <i class="su su-logout"></i>
                    </span>
                    <span class="menu-label">[[[Log Out]]]</span>
                </a>
            </li>
        </ul>
    </nav>
    @if (!isMobile)
    {
        <nav id="sub-nav" class="sf-nav-group mobile-hidden">
            <ul>
                <li class="sub-menu-action">
                    <span id="user-system-notification" class="menu-icon-container" onclick="openUserNotification()">
                        <i class="su su-notification-alert"></i>
                    </span>
                </li>
                @if (!ServerAppConfig.IsSelfHosted)
                {
                    <li class="sub-menu-action dropup">
                        <a class="dropdown-toggle" data-toggle="dropdown">
                            <span class="menu-icon-container">
                                <i class="su su-help"></i>
                            </span>
                        </a>
                        <ul class="dropdown-menu sub-menu" role="menu">
                            @if (!ServerAppConfig.IsSelfHosted)
                            {
                                if (isItemPageRequested && itemPermissions != null && itemPermissions.ContainsKey(ItemType.Report) && itemPermissions[ItemType.Report] && showImport)
                                {
                                    <li class="sub-menu-item-title">
                                        <div>[[[Explore]]]</div>
                                    </li>
                                    <li class="sub-menu-item">
                                        <a class="add-sample-button" href="javascript:void(0)">
                                            [[[Sample Reports]]]
                                        </a>
                                    </li>
                                    <li class="sf-sub-menu-separator"></li>
                                }
                            }

                            <li class="sub-menu-item-title">
                                <div>[[[Help]]]</div>
                            </li>
                            <li class="sub-menu-item">
                                <a class="online-help-link" href="@(ViewBag.helpSiteBaseUrl + ViewBag.helpSiteUrl)" target="_blank">
                                    [[[Online Help]]]
                                </a>
                            </li>
                            @if (!ServerAppConfig.IsSelfHosted)
                            {
                                <li class="sub-menu-item">
                                    <a href="https://www.@(GlobalAppSettings.BrandingDomain)/contact" target="_blank">
                                        [[[Contact Us]]]
                                    </a>
                                </li>
                                <li class="sf-sub-menu-separator"></li>
                                <li class="sub-menu-item-title">
                                    <div>[[[Legal]]]</div>
                                </li>
                                <li class="sub-menu-item">
                                    <a href="https://www.@(GlobalAppSettings.BrandingDomain)/privacy" target="_blank">
                                        [[[Privacy Policy]]]
                                    </a>
                                </li>
                                <li class="sub-menu-item">
                                    <a href="https://www.@(GlobalAppSettings.BrandingDomain)/terms-of-use" target="_blank">
                                        [[[Terms of Use]]]
                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
                <li class="profile-section dropup" id="dropdown-profile">
                    <a class="dropdown-toggle" data-toggle="dropdown">
                        <span class="profile-container">
                            <div data-id="profilelogo" class="lazyload img-loader profile-picture" data-src-value="@profilePictureUrl" data-alt="[[[Profile]]]"></div>
                        </span>
                    </a>
                    <ul class="dropdown-menu sub-menu" role="menu">
                        @if (ServerAppConfig.IsSelfHosted)
                        {
                            <li class="sub-menu-item sub-menu-profile" id="user-sites">
                                <div class="sub-menu-profile-text-padding">[[[Your Sites]]]</div>
                                <img class='loader-sites-gif' src="@dashboardServerResourceUrl/images/waitingpopup.gif" style="display:block; margin: auto; height:30px; width:30px;" />
                            </li>
                            <li id="more-sites-id">
                            </li>
                            <li class="sf-sub-menu-separator"></li>
                            <li class="sub-menu-item sub-menu-profile">
                                <a href="@manageSitesUrl" target="_blank">
                                    <div class="manage-site">[[[Manage sites (Admin access)]]]</div>
                                </a>
                            </li>
                            <li class="sf-sub-menu-separator"></li>
                        }
                            <li class="sub-menu-item sub-menu-profile">
                                <div class="sub-menu-profile-text-padding">[[[Profile]]]</div>
                                <a href="@Url.Action("ProfilePage", "User" )">
                                    <div class="sub-menu-profile-hover">
                                        <div data-id="profile-logo-sub" class="lazyload img-loader sub-menu-bar-profile-image" data-src-value="@profilePictureUrl" data-alt="[[[Profile]]]"></div>
                                        <div class="sub-menu-user-name"><div class="sub-menu-user-name-style">@displayName</div><div class="sub-menu-user-email-style">@emailAddress</div></div>
                                    </div>
                                </a>
                            </li>
                            @if (!ServerAppConfig.IsSelfHosted)
                            {
                                <li class="sf-sub-menu-separator"></li>
                                <li class="sub-menu-item">
                                    <a class="request-concierge-support" href="javascript:void(0)">
                                        [[[Create Incidents]]]
                                    </a>
                                </li>
                                <li class="sub-menu-item">
                                    <a href="@Url.Action("TicketList", "Support")">
                                        [[[My Incidents]]]
                                    </a>
                                </li>
                            }
                            <li class="sf-sub-menu-separator"></li>
                            <li class="sub-menu-item">
                                <a href="@Url.Action("logout", "accounts" )">
                                    [[[Logout]]]
                                </a>
                            </li>
                        </ul>
                </li>
            </ul>
        </nav>
    }

</aside>
<script>
        var userTenantsUrl = "@Url.Action("GetUserTenants", "User")";
        var tenantIdentifierPrefix = "@ServerAppConfig.TenantIdentifierPrefix";
        var idpUrl = "@ServerAppConfig.InternalAppIdpUrl";
</script>
