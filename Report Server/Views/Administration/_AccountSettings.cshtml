@{
    var globalAppSettings = new TenantHandler().GetTenantConfig();
    ViewBag.Title = "[[[Manage Account Settings]]] - " + globalAppSettings.SystemSettings.OrganizationName;
}

@Scripts.Render("~/bundles/scripts/admin/user-settings")

<script type="text/javascript">
    var checkMailSettingUrl = "@Url.Action("CheckMailSettingsExist", "Administration")";
    var emailActivation = "@ActivationType.EmailActivation";
</script>

<div id="user-settings-container" class="col-xs-12 admin-page-container">
    <div id="user-settings-header" class="col-xs-12 admin-page-header">
        <hgroup>
            <h1 class="h2 page-title">
                [[[ACCOUNTS SETTINGS]]]
            </h1>
            <h5 class="page-description">
                [[[Configuration for managing user accounts.]]]
            </h5>
        </hgroup>
    </div>
    <div class="tab-content">
        <form id="acc-activate-setting" name="accActivationSettingsForm" class="admin-page-body" method="post" enctype="multipart/form-data" autocomplete="off">
            <div class="field-container col-lg-10">
                <label class="app-textbox-label col-lg-2 activation">[[[Account Activation Mode]]]</label>
                <div class="activation-mode col-lg-2" id="automatic">
                    <input type="radio" id="automatic-account-activation" name="activation" class="css-radio" value=@ActivationType.AutomaticActivation @((int)ViewBag.ActivationType == (int)ActivationType.AutomaticActivation ? "checked" : string.Empty) />
                    <label for="automatic-account-activation" class="app-textbox-label notransition" id="labelautomatic">[[[Automatic]]]</label>
                </div>
                <div class="activation-mode col-lg-4" id="email">
                    <input type="radio" id="email-account-activation" name="activation" class="css-radio" value=@ActivationType.EmailActivation @((int)ViewBag.ActivationType == (int)ActivationType.EmailActivation ? "checked" : string.Empty) @(ViewBag.EmailSettingResult == "failure" ? "disabled" : string.Empty)/>
                    <label for="email-account-activation" class="app-textbox-label notransition @(ViewBag.EmailSettingResult == "failure" ? "disabled-lable-color" : string.Empty)" id="labelemail">[[[Email]]]</label>
                    @if (@ViewBag.EmailSettingResult == "failure")
                    {
                    <div class="col-lg-12 bg-danger email-settings-validation validation-errors">
                        [[[You cannot select the email activation mode until the application’s email settings are configured.]]]
                    </div>
                    }
                </div>
            </div>
        </form>
    </div>
    
    <div class="admin-page-actions col-lg-12 col-md-12">
        <a href="@Url.Action("Index","Home")" class="secondary-button pull-right" id="UpdateSystemSettingsCancel-bottom" title="">[[[Cancel]]]</a>
        <button type="button" title="" id="UpdateSystemSettings-bottom" name="UpdateSystemSettings" class="primary-button pull-right" @(ViewBag.EmailSettingResult == "failure" ? "disabled" : string.Empty)>
            <span>[[[Save]]]</span>
        </button>
    </div>
</div>
